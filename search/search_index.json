{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u300a\u7528LWJGL 3\u5f00\u53d13D\u6e38\u620f(3D Game Development with LWJGL 3)\u300b\u4e2d\u6587\u7ffb\u8bd1","text":"<p>\u6682\u672a\u5b8c\u6210\u7ea0\u9519\uff0c\u6682\u4e0d\u5efa\u8bae\u9605\u8bfb</p> <p>\u672c\u4e66\u82f1\u6587\u539f\u6587GitHub(\u4ee5\u4e0b\u79f0\u4e3a\u539f\u6587)</p> <p>\u672c\u7ffb\u8bd1\u4ed3\u5e93fork\u81eamouse0w0(\u4ee5\u4e0b\u79f0\u4e3a\u539f\u8bd1\u6587)</p>"},{"location":"#_1","title":"\u672c\u4ed3\u5e93\u4ecb\u7ecd","text":"<p>~~\u539f\u8bd1\u6587\u5bf9\u539f\u6587\u8fdb\u884c\u4e86\u8be6\u7ec6\u7684\u7ffb\u8bd1\u3002\u4f46\u6211\u5728\u5b66\u4e60\u65f6\u53d1\u73b0\u539f\u8bd1\u6587\u843d\u540e\u4e8e\u539f\u6587\u7684\u66f4\u6539\uff0c\u4e14\u7ae0\u8282\u7ed3\u6784\u4e0e\u73b0\u539f\u6587\u4e0d\u540c\uff0c\u6545\u521b\u5efa\u6b64\u4ed3\u5e93\u8fdb\u884c\u7ffb\u8bd1~~</p> <p>\u65b9\u4fbf\u5b66\u4e60\u65f6\u4fee\u6539\u4ee3\u7801\uff0c\u6dfb\u52a0\u7b14\u8bb0,\u540c\u65f6\u7ec3\u4e60git\u57fa\u7840\u64cd\u4f5c</p> <p>\u73b0\u4eca\u5404\u7c7bAI\u7ffb\u8bd1\u63d2\u4ef6\u5df2\u975e\u5e38\u6210\u719f\uff0c\u5efa\u8bae\u76f4\u63a5\u67e5\u770b\u539f\u6587</p>"},{"location":"#_2","title":"\u672c\u4ed3\u5e93\u4e0e\u539f\u8bd1\u6587\u7684\u533a\u522b","text":"<ul> <li>\u4f7f\u7528AI\u91cd\u65b0\u9010\u884c\u7ffb\u8bd1\u4e86\u539f\u6587</li> <li>\u5c06\u7ae0\u8282\u7ed3\u6784\u66f4\u65b0\u4e3a\u539f\u6587\u7ae0\u8282\u7ed3\u6784</li> <li>\u5c06\u7f51\u9875\u6837\u5f0f\u66f4\u6539\u4e3amkdocs-meterial</li> </ul>"},{"location":"#_3","title":"\u672c\u4ed3\u5e93\u5bf9\u539f\u6587\u7684\u6539\u52a8","text":"<ul> <li>\u6dfb\u52a0\u5982\u4e0b\u90e8\u5206\u7b14\u8bb0</li> </ul> \u7b14\u8bb0 <p>\u8fd9\u662f\u7b14\u8bb0</p> <ul> <li>\u539f\u6587\u7684\u516c\u5f0f\u4e00\u5f8b\u4f7f\u7528$$\u516c\u5f0f$$\u7684\u65b9\u5f0f\u4f5c\u4e3a\u884c\u5185\u516c\u5f0f\u5206\u9694\u7b26\u548c\u5757\u7ea7\u516c\u5f0f\u5206\u9694\u7b26\uff0cgithub\u4f1a\u81ea\u52a8\u5206\u8fa8\u5b83\u7684\u5c5e\u6027\u3002\u4f46\u662fMathJax\u9ed8\u8ba4\u5c06\u4e24\u8005\u5206\u522b\u4f7f\u7528$\u516c\u5f0f$\u548c$$\u516c\u5f0f$$\u6807\u8bb0\u3002\u56e0\u6b64\u672c\u6587\u6863\u5c06\u884c\u5185\u516c\u5f0f\u5206\u9694\u7b26\u66ff\u6362\u4e3a$</li> <li>\u5bf9\u90e8\u5206\u56fe\u7247\u8fdb\u884c\u4e86\u7ffb\u8bd1\u548c\u4fee\u590d</li> <li>\u5bf9\u90e8\u5206\u957f\u4ee3\u7801\u6dfb\u52a0\u6ce8\u91ca</li> <li>\u7cbe\u7b80\u90e8\u5206\u4ee3\u7801</li> <li>\u5bf9\u90e8\u5206\u4ee3\u7801\u6dfb\u52a0\u524d\u540e\u5bf9\u6bd4</li> </ul>"},{"location":"#_4","title":"\u672c\u4e66\u539f\u4ecb\u7ecd","text":"<p>\u8fd9\u672c\u5728\u7ebf\u7535\u5b50\u4e66\u4e3b\u8981\u8bb2\u89e3\u4f7f\u7528LWJGL 3\u5e93\u5f00\u53d13D\u6e38\u620f\u3002</p> <p>LWJGL\u662f\u4e00\u4e2aJava\u5e93\uff0c\u63d0\u4f9b\u4e86\u8bbf\u95eeOpenGL\u3001OpenAL\u548cOpenCL\u7684\u63a5\u53e3\u3002\u8fd9\u4e2a\u5e93\u53ef\u4ee5\u5728\u4f7f\u7528\u9ad8\u6027\u80fd\u7684OpenGL\u7684\u540c\u65f6\uff0c\u4f7f\u7528Java\u8bed\u8a00\u5f00\u53d1\u3002</p> <p>\u6211\u6700\u521d\u7684\u76ee\u6807\u662f\u5b66\u4e60\u4f7f\u7528OpenGL\u5f00\u53d13D\u6e38\u620f\u6240\u6d89\u53ca\u7684\u6280\u672f\u3002\u6240\u9700\u8d44\u6599\u90fd\u53ef\u5728\u7f51\u4e0a\u627e\u5230\uff0c\u4f46\u662f\u6ca1\u6709\u4eba\u5c06\u5176\u6574\u7406\uff0c\u6709\u65f6\u5f88\u96be\u627e\u5230\uff0c\u751a\u81f3\u6709\u4e9b\u8d44\u6599\u4e0d\u5b8c\u6574\u6216\u5b58\u5728\u8bef\u5bfc\u3002</p> <p>\u6211\u5f00\u59cb\u6536\u96c6\u4e00\u4e9b\u8d44\u6599\uff0c\u7f16\u5199\u4e00\u4e9b\u793a\u4f8b\uff0c\u5e76\u51b3\u5b9a\u4ee5\u7535\u5b50\u4e66\u7684\u5f62\u5f0f\u6574\u7406\u8fd9\u4e9b\u8d44\u6599\u3002</p>"},{"location":"#_5","title":"\u6e90\u4ee3\u7801","text":"<p>\u672c\u4e66\u4e2d\u6240\u6709\u7684\u6e90\u7801\u793a\u4f8b\u5747\u4e0a\u4f20\u81f3GitHub.</p> <p>\u672c\u4e66\u82f1\u6587\u539f\u6587\u5730\u5740GitBook GitHub.</p>"},{"location":"#_6","title":"\u8bb8\u53ef\u8bc1","text":"<p>\u672c\u4f5c\u54c1\u91c7\u7528\u77e5\u8bc6\u5171\u4eab\u7f72\u540d-\u76f8\u540c\u65b9\u5f0f\u5171\u4eab 4.0 \u56fd\u9645\u8bb8\u53ef\u534f\u8bae\u8fdb\u884c\u8bb8\u53ef\u3002</p> <p>\u6240\u6709\u7684\u6e90\u4ee3\u7801\u7684\u8bb8\u53ef\u534f\u8bae\u5747\u4e3a Apache v2.0</p>"},{"location":"#_7","title":"\u539f\u4f5c\u8005","text":"<p>Antonio Hern\u00e1ndez Bejarano</p>"},{"location":"#_8","title":"\u652f\u6301\u4f5c\u8005","text":"<p>\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u672c\u4e66\uff0c\u8bf7Star\u5e76\u4e14\u5206\u4eab\u5b83\u3002\u5982\u679c\u4f60\u60f3\u6350\u52a9\u4f5c\u8005\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u6309\u94ae\u6350\u52a9\uff1a</p> <p></p>"},{"location":"#_9","title":"\u7279\u522b\u611f\u8c22","text":"<p>\u611f\u8c22\u6240\u6709\u63d0\u4f9b\u4e86\u6307\u6b63\u3001\u610f\u89c1\u548c\u5efa\u8bae\u7684\u8bfb\u8005\u3002</p>"},{"location":"#_10","title":"\u539f\u7ffb\u8bd1\u8bd1\u8005\u7684\u8bdd","text":"<p>\u672c\u4e66\u662f\u8bd1\u8005\u4e3a\u4e86\u5b66\u4e60LWJGL3\u548cOpenGL\u800c\u7ffb\u8bd1\u7684\u3002\u9650\u4e8e\u8bd1\u8005\u7684\u80fd\u529b\uff0c\u672c\u8bd1\u672c\u4e2d\u5982\u6709\u4e0d\u59a5\u4e4b\u5904\u6b22\u8fce\u5404\u4f4d\u8bfb\u8005\u6307\u6b63\u3002</p> <p>\u5982\u679c\u4f60\u559c\u6b22\u672c\u8bd1\u672c\uff0c\u8bf7Star\u5e76\u5206\u4eab\u5b83\u3002\u5982\u679c\u4f60\u60f3\u6350\u52a9\u8bd1\u8005\uff0c\u8bf7\u901a\u8fc7\u4e0b\u9762\u7684\u94fe\u63a5\u6350\u52a9\uff1a\u7231\u53d1\u7535\u3002</p>"},{"location":"01-first-steps/","title":"\u7b2c01\u7ae0 - \u521d\u63a2\uff08First steps\uff09","text":"<p>\u672c\u4e66\u5c06\u4ecb\u7ecd\u4f7f\u7528OpenGL\u5f00\u53d13D\u6e38\u620f\u7684\u6838\u5fc3\u6280\u672f\u3002\u6211\u4eec\u5c06\u4f7f\u7528Java\u8bed\u8a00\u7f16\u5199\u793a\u4f8b\u4ee3\u7801\uff0c\u5e76\u91c7\u7528\u8f7b\u91cf\u7ea7Java\u6e38\u620f\u5e93\uff08Lightweight Java Game Library\uff0c\u7b80\u79f0LWJGL \u3002LWJGL\u5e93\u63d0\u4f9b\u4e86\u4eceJava\u8bbf\u95ee\u5e95\u5c42API\uff08\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3\uff09\u5982OpenGL\u7684\u80fd\u529b\u3002</p> <p>LWJGL\u662f\u4e00\u4e2a\u5e95\u5c42API\uff0c\u5b83\u5145\u5f53\u4e86OpenGL\u7684\u5c01\u88c5\u5c42\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u7684\u76ee\u6807\u662f\u5feb\u901f\u5f00\u53d13D\u6e38\u620f\uff0c\u6216\u8bb8\u5e94\u8be5\u8003\u8651\u5176\u4ed6\u65b9\u6848\uff0c\u4f8b\u5982jMonkeyEngine\u6216Unity\u3002\u4f7f\u7528\u8fd9\u4e2a\u5e95\u5c42API\u610f\u5473\u7740\u4f60\u9700\u8981\u7406\u89e3\u5927\u91cf\u6982\u5ff5\u5e76\u7f16\u5199\u8bb8\u591a\u4ee3\u7801\u624d\u80fd\u770b\u5230\u6210\u679c\u3002\u8fd9\u6837\u505a\u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u4f60\u5c06\u66f4\u6df1\u5165\u5730\u7406\u89e33D\u56fe\u5f62\u6280\u672f\uff0c\u5e76\u59cb\u7ec8\u638c\u63e1\u63a7\u5236\u6743\u3002</p> <p>\u5173\u4e8eJava\uff0c\u4f60\u9700\u8981\u81f3\u5c11Java 17\u7248\u672c\u3002\u56e0\u6b64\uff0c\u7b2c\u4e00\u6b65\uff08\u5982\u679c\u4f60\u5c1a\u672a\u5b89\u88c5\u8be5\u7248\u672c\uff09\u662f\u4e0b\u8f7dJava SDK\u3002\u4f60\u53ef\u4ee5\u4ece\u8fd9\u91cc\u83b7\u53d6OpenJDK\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u672c\u4e66\u5047\u8bbe\u4f60\u5df2\u5177\u5907Java\u8bed\u8a00\u7684\u4e2d\u7ea7\u77e5\u8bc6\u3002\u5982\u679c\u4e0d\u7b26\u5408\u4f60\u7684\u60c5\u51b5\uff0c\u5efa\u8bae\u5148\u7cfb\u7edf\u5b66\u4e60Java\u8bed\u8a00\u3002</p> <p>\u6700\u4f73\u5b9e\u8df5\u662f\u514b\u9686GitHub\u4ed3\u5e93\u6765\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\u3002\u4f60\u53ef\u4ee5\u4e0b\u8f7d\u6574\u4e2a\u4ed3\u5e93\u7684zip\u5305\u5e76\u89e3\u538b\u5230\u76ee\u6807\u6587\u4ef6\u5939\uff0c\u6216\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u514b\u9686\uff1a<code>git clone https://github.com/lwjglgamedev/lwjglbook.git</code>\u3002\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u6839\u76ee\u5f55\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u7ae0\u7684\u72ec\u7acb\u5b50\u6587\u4ef6\u5939\u3002</p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55Java IDE\u6765\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801\u3002\u63a8\u8350\u4e0b\u8f7dIntelliJ IDEA\uff0c\u5b83\u5bf9Java\u6709\u826f\u597d\u7684\u652f\u6301\u3002IntelliJ\u63d0\u4f9b\u514d\u8d39\u7684\u793e\u533a\u7248\uff0c\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.jetbrains.com/idea/download/\u3002</p> <p></p> <p>\u5728IDE\u4e2d\u6253\u5f00\u6e90\u4ee3\u7801\u65f6\uff0c\u53ef\u4ee5\u9009\u62e9\u6253\u5f00\u5305\u542b\u6240\u6709\u7ae0\u8282\u7684\u6839\u76ee\u5f55\uff08\u7236\u9879\u76ee\uff09\uff0c\u6216\u5355\u72ec\u6253\u5f00\u6bcf\u4e2a\u7ae0\u8282\u3002\u5982\u679c\u9009\u62e9\u524d\u8005\uff0c\u8bf7\u786e\u4fdd\u4e3a\u6bcf\u4e2a\u7ae0\u8282\u6b63\u786e\u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\u4e3a\u7ae0\u8282\u7684\u6839\u6587\u4ef6\u5939\u3002\u793a\u4f8b\u4ee3\u7801\u4f1a\u57fa\u4e8e\u76f8\u5bf9\u8def\u5f84\u8bbf\u95ee\u6587\u4ef6\uff0c\u5047\u8bbe\u6839\u76ee\u5f55\u662f\u7ae0\u8282\u7684\u57fa\u7840\u6587\u4ef6\u5939\u3002</p> <p>\u6211\u4eec\u5c06\u4f7f\u7528Maven\u6784\u5efa\u793a\u4f8b\u9879\u76ee\u3002Maven\u5df2\u96c6\u6210\u5728\u5927\u591a\u6570IDE\u4e2d\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728IDE\u4e2d\u6253\u5f00\u5404\u7ae0\u8282\u7684\u793a\u4f8b\u4ee3\u7801\u3002\u53ea\u9700\u6253\u5f00\u5305\u542b\u7ae0\u8282\u793a\u4f8b\u7684\u6587\u4ef6\u5939\uff0cIntelliJ\u4f1a\u81ea\u52a8\u8bc6\u522b\u4e3aMaven\u9879\u76ee\u3002</p> <p></p> <p>Maven\u57fa\u4e8e\u540d\u4e3a<code>pom.xml</code>\uff08\u9879\u76ee\u5bf9\u8c61\u6a21\u578b\uff09\u7684XML\u6587\u4ef6\u6784\u5efa\u9879\u76ee\u3002\u8be5\u6587\u4ef6\u7ba1\u7406\u9879\u76ee\u4f9d\u8d56\uff08\u6240\u9700\u7684\u5e93\uff09\u548c\u6784\u5efa\u8fc7\u7a0b\u4e2d\u7684\u6b65\u9aa4\u3002Maven\u9075\u5faa\u201c\u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e\u201d\u539f\u5219\uff0c\u5373\u5982\u679c\u4f60\u9075\u5faa\u6807\u51c6\u7684\u9879\u76ee\u7ed3\u6784\u548c\u547d\u540d\u7ea6\u5b9a\uff0c\u914d\u7f6e\u6587\u4ef6\u65e0\u9700\u663e\u5f0f\u6307\u5b9a\u6e90\u4ee3\u7801\u4f4d\u7f6e\u6216\u7f16\u8bd1\u540e\u7684\u7c7b\u6587\u4ef6\u5b58\u653e\u8def\u5f84\u3002</p> <p>\u672c\u4e66\u5e76\u975eMaven\u6559\u7a0b\uff0c\u5982\u9700\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u9605\u7f51\u7edc\u8d44\u6e90\u3002\u6e90\u4ee3\u7801\u6839\u76ee\u5f55\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7236\u9879\u76ee\uff0c\u5176\u4e2d\u6307\u5b9a\u4e86\u4f7f\u7528\u7684\u63d2\u4ef6\u548c\u5e93\u7248\u672c\u3002\u56e0\u6b64\uff0c\u4f60\u4f1a\u5728\u8fd9\u91cc\u627e\u5230\u4e00\u4e2a<code>pom.xml</code>\u6587\u4ef6\uff0c\u5b83\u5b9a\u4e49\u4e86\u6240\u6709\u7ae0\u8282\u7684\u901a\u7528\u64cd\u4f5c\u548c\u5c5e\u6027\uff0c\u5404\u7ae0\u8282\u4f5c\u4e3a\u5b50\u9879\u76ee\u5904\u7406\u3002</p> <p>LWJGL 3.1\u5728\u9879\u76ee\u6784\u5efa\u65b9\u5f0f\u4e0a\u5f15\u5165\u4e86\u4e00\u4e9b\u53d8\u5316\u3002\u73b0\u5728\u57fa\u7840\u4ee3\u7801\u66f4\u52a0\u6a21\u5757\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u7cbe\u786e\u5730\u9009\u62e9\u6240\u9700\u7684\u5305\uff0c\u800c\u4e0d\u518d\u4f7f\u7528\u4e00\u4e2a\u5e9e\u5927\u7684\u5355\u4f53jar\u6587\u4ef6\u3002\u4f46\u8fd9\u5e26\u6765\u4e86\u4e00\u4e9b\u590d\u6742\u6027\uff1a\u4f60\u9700\u8981\u9010\u4e00\u4ed4\u7ec6\u6307\u5b9a\u4f9d\u8d56\u9879\u3002\u4e0d\u8fc7\uff0c\u4e0b\u8f7d\u9875\u9762\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4fbf\u6377\u5de5\u5177\uff0c\u53ef\u4e3a\u4f60\u751f\u6210pom\u6587\u4ef6\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u9996\u5148\u4f7f\u7528GLFW\u548cOpenGL\u7ed1\u5b9a\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u67e5\u770bpom\u6587\u4ef6\u7684\u5177\u4f53\u5185\u5bb9\u3002</p> <p>LWJGL\u5e73\u53f0\u4f9d\u8d56\u5df2\u81ea\u52a8\u5904\u7406\u672c\u5730\u5e93\u7684\u89e3\u538b\uff0c\u56e0\u6b64\u65e0\u9700\u4f7f\u7528\u5176\u4ed6\u63d2\u4ef6\uff08\u5982<code>mavennatives</code>\uff09\u3002\u6211\u4eec\u53ea\u9700\u8bbe\u7f6e\u4e09\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u4e3aWindows\u3001Linux\u548cMacOS\u914d\u7f6e\u6b63\u786e\u7684\u5c5e\u6027\u503c\u3002</p> <pre><code>    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;id&gt;windows-profile&lt;/id&gt;\n            &lt;activation&gt;\n                &lt;os&gt;\n                    &lt;family&gt;Windows&lt;/family&gt;\n                &lt;/os&gt;\n            &lt;/activation&gt;\n            &lt;properties&gt;\n                &lt;native.target&gt;natives-windows&lt;/native.target&gt;\n            &lt;/properties&gt;                \n        &lt;/profile&gt;\n        &lt;profile&gt;\n            &lt;id&gt;linux-profile&lt;/id&gt;\n            &lt;activation&gt;\n                &lt;os&gt;\n                    &lt;family&gt;Linux&lt;/family&gt;\n                &lt;/os&gt;\n            &lt;/activation&gt;\n            &lt;properties&gt;\n                &lt;native.target&gt;natives-linux&lt;/native.target&gt;\n            &lt;/properties&gt;                \n        &lt;/profile&gt;\n        &lt;profile&gt;\n            &lt;id&gt;OSX-profile&lt;/id&gt;\n            &lt;activation&gt;\n                &lt;os&gt;\n                    &lt;family&gt;mac&lt;/family&gt;\n                &lt;/os&gt;\n            &lt;/activation&gt;\n            &lt;properties&gt;\n                &lt;native.target&gt;natives-osx&lt;/native.target&gt;\n            &lt;/properties&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n</code></pre> <p>\u5728\u6bcf\u4e2a\u9879\u76ee\u4e2d\uff0cLWJGL\u5e73\u53f0\u4f9d\u8d56\u4f1a\u6839\u636e\u5f53\u524d\u5e73\u53f0\u7684\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\u6b63\u786e\u7684\u5c5e\u6027\u503c\u3002</p> <pre><code>        &lt;dependency&gt;\n            &lt;groupId&gt;org.lwjgl&lt;/groupId&gt;\n            &lt;artifactId&gt;lwjgl-platform&lt;/artifactId&gt;\n            &lt;version&gt;${lwjgl.version}&lt;/version&gt;\n            &lt;classifier&gt;${native.target}&lt;/classifier&gt;\n        &lt;/dependency&gt;\n</code></pre> <p>\u6b64\u5916\uff0c\u6bcf\u4e2a\u9879\u76ee\u4f1a\u751f\u6210\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684jar\u6587\u4ef6\uff08\u53ef\u901a\u8fc7<code>java -jar jar\u6587\u4ef6\u540d.jar</code>\u547d\u4ee4\u6267\u884c\uff09\u3002\u8fd9\u662f\u901a\u8fc7maven-jar-plugin\u5b9e\u73b0\u7684\uff0c\u5b83\u4f1a\u521b\u5efa\u4e00\u4e2a\u5305\u542b<code>MANIFEST.MF</code>\u6587\u4ef6\u7684jar\u6587\u4ef6\uff0c\u5176\u4e2d\u8bbe\u7f6e\u4e86\u6b63\u786e\u7684\u5c5e\u6027\u503c\u3002\u8be5\u6587\u4ef6\u6700\u91cd\u8981\u7684\u5c5e\u6027\u662f<code>Main-Class</code>\uff0c\u5b83\u6307\u5b9a\u4e86\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002\u540c\u65f6\uff0c\u6240\u6709\u4f9d\u8d56\u9879\u90fd\u4f1a\u4f5c\u4e3a<code>Class-Path</code>\u5c5e\u6027\u7684\u6761\u76ee\u5199\u5165\u8be5\u6587\u4ef6\u3002\u8981\u5728\u5176\u4ed6\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\uff0c\u53ea\u9700\u590d\u5236\u4e3bjar\u6587\u4ef6\u548ctarget\u76ee\u5f55\u4e0b\u7684lib\u6587\u4ef6\u5939\uff08\u5305\u542b\u6240\u6709jar\u6587\u4ef6\uff09\u3002</p> <p>\u5305\u542bLWJGL\u7c7b\u7684jar\u6587\u4ef6\u4e5f\u5305\u542b\u4e86\u539f\u751f\u5e93\u3002LWJGL\u4f1a\u81ea\u52a8\u89e3\u538b\u8fd9\u4e9b\u5e93\u5e76\u5c06\u5176\u6dfb\u52a0\u5230JVM\u7684\u5e93\u641c\u7d22\u8def\u5f84\u4e2d\u3002</p> <p>\u672c\u7ae0\u7684\u6e90\u4ee3\u7801\u76f4\u63a5\u53d6\u81eaLWJGL\u5b98\u7f51\u7684\u5165\u95e8\u793a\u4f8b\uff1ahttp://www.lwjgl.org/guide\u3002\u5c3d\u7ba1\u5176\u6587\u6863\u975e\u5e38\u8be6\u7ec6\uff0c\u6211\u4eec\u4ecd\u5c06\u89e3\u6790\u4ee3\u7801\u5e76\u89e3\u91ca\u5173\u952e\u90e8\u5206\u3002\u4e3a\u4e86\u907f\u514d\u4ee3\u7801\u8fc7\u957f\u5f71\u54cd\u9605\u8bfb\uff0c\u6211\u4eec\u5c06\u5206\u6bb5\u5c55\u793a\u4ee3\u7801\u7247\u6bb5\u3002\u4e3a\u4e86\u5e2e\u52a9\u4f60\u7406\u89e3\u6bcf\u4e2a\u7247\u6bb5\u6240\u5c5e\u7684\u7c7b\uff0c\u6211\u4eec\u4f1a\u5728\u6bcf\u4e2a\u7247\u6bb5\u4e2d\u5305\u542b\u7c7b\u5934\u3002\u7528\u4e09\u4e2a\u70b9\uff08<code>...</code>\uff09\u8868\u793a\u7247\u6bb5\u524d\u540e\u8fd8\u6709\u5176\u4ed6\u4ee3\u7801\u3002\u793a\u4f8b\u4ee3\u7801\u5305\u542b\u5728\u4e00\u4e2a\u540d\u4e3a<code>HelloWorld</code>\u7684\u7c7b\u4e2d\uff0c\u5176\u5f00\u5934\u5982\u4e0b\uff1a <pre><code>package org.lwjglb;\n\nimport org.lwjgl.Version;\nimport org.lwjgl.glfw.*;\nimport org.lwjgl.opengl.GL;\nimport org.lwjgl.system.MemoryStack;\n\nimport java.nio.IntBuffer;\n\nimport static org.lwjgl.glfw.Callbacks.glfwFreeCallbacks;\nimport static org.lwjgl.glfw.GLFW.*;\nimport static org.lwjgl.opengl.GL11.*;\nimport static org.lwjgl.system.MemoryStack.stackPush;\nimport static org.lwjgl.system.MemoryUtil.NULL;\n\npublic class HelloWorld {\n\n    // \u7a97\u53e3\u53e5\u67c4\n    private long window;\n\n    public static void main(String[] args) {\n        new HelloWorld().run();\n    }\n    ...\n}\n</code></pre></p> <p>\u8be5\u7c7b\u4ec5\u5b58\u50a8\u4e86\u4e00\u4e2a\u7a97\u53e3\u53e5\u67c4\u7684\u5f15\u7528\uff08\u7a0d\u540e\u4f1a\u89e3\u91ca\u5176\u542b\u4e49\uff09\uff0c\u5728<code>main</code>\u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86<code>run</code>\u65b9\u6cd5\u3002\u8ba9\u6211\u4eec\u9010\u6b65\u89e3\u6790\u8fd9\u4e2a\u65b9\u6cd5\uff1a <pre><code>public class HelloWorld {\n    ...\n    public void run() {\n        System.out.println(\"Hello LWJGL \" + Version.getVersion() + \"!\");\n\n        init();\n        loop();\n\n        // \u91ca\u653e\u7a97\u53e3\u56de\u8c03\u5e76\u9500\u6bc1\u7a97\u53e3\n        glfwFreeCallbacks(window);\n        glfwDestroyWindow(window);\n\n        // \u7ec8\u6b62GLFW\u5e76\u91ca\u653e\u9519\u8bef\u56de\u8c03\n        glfwTerminate();\n        glfwSetErrorCallback(null).free();\n    }\n    ...\n}\n</code></pre> \u8be5\u65b9\u6cd5\u8c03\u7528\u4e86<code>init</code>\u65b9\u6cd5\u521d\u59cb\u5316\u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u8c03\u7528<code>loop</code>\u65b9\u6cd5\u8fdb\u5165\u6e32\u67d3\u7a97\u53e3\u7684\u65e0\u9650\u5faa\u73af\u3002\u5f53<code>loop</code>\u65b9\u6cd5\u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u9700\u8981\u91ca\u653e\u521d\u59cb\u5316\u65f6\u521b\u5efa\u7684\u8d44\u6e90\uff08GLFW\u7a97\u53e3\uff09\u3002\u8ba9\u6211\u4eec\u4ece<code>init</code>\u65b9\u6cd5\u5f00\u59cb\u3002</p> <pre><code>public class HelloWorld {\n    ...\n    private void init() {\n        // \u8bbe\u7f6e\u9519\u8bef\u56de\u8c03\u3002\u9ed8\u8ba4\u5b9e\u73b0\u4f1a\u5c06\u9519\u8bef\u4fe1\u606f\u6253\u5370\u5230System.err\u3002\n        GLFWErrorCallback.createPrint(System.err).set();\n\n        // \u521d\u59cb\u5316GLFW\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u5927\u591a\u6570GLFW\u51fd\u6570\u65e0\u6cd5\u5de5\u4f5c\u3002\n        if (!glfwInit())\n            throw new IllegalStateException(\"Unable to initialize GLFW\");\n\n        // \u914d\u7f6eGLFW\n        glfwDefaultWindowHints(); // \u53ef\u9009\uff0c\u5f53\u524d\u7a97\u53e3\u63d0\u793a\u5df2\u662f\u9ed8\u8ba4\u503c\n        glfwWindowHint(GLFW_VISIBLE, GLFW_FALSE); // \u7a97\u53e3\u521b\u5efa\u540e\u4fdd\u6301\u9690\u85cf\n        glfwWindowHint(GLFW_RESIZABLE, GLFW_TRUE); // \u7a97\u53e3\u53ef\u8c03\u6574\u5927\u5c0f\n\n        // \u521b\u5efa\u7a97\u53e3\n        window = glfwCreateWindow(300, 300, \"Hello World!\", NULL, NULL);\n        if (window == NULL)\n            throw new RuntimeException(\"Failed to create the GLFW window\");\n\n        // \u8bbe\u7f6e\u6309\u952e\u56de\u8c03\u3002\u6bcf\u6b21\u6309\u952e\u6309\u4e0b\u3001\u91cd\u590d\u6216\u91ca\u653e\u65f6\u90fd\u4f1a\u8c03\u7528\u3002\n        glfwSetKeyCallback(window, (window, key, scancode, action, mods) -&gt; {\n            if (key == GLFW_KEY_ESCAPE &amp;&amp; action == GLFW_RELEASE)\n                glfwSetWindowShouldClose(window, true); // \u6211\u4eec\u5c06\u5728\u6e32\u67d3\u5faa\u73af\u4e2d\u68c0\u6d4b\u6b64\u4e8b\u4ef6\n        });\n        ...\n    }\n    ...\n}\n</code></pre> \u6309\u952e\u56de\u8c03\u4e2d\u201cmods\u201d\u662f\u4ec0\u4e48 <p>mods\u53c2\u6570\u4f7f\u5f97\u5f00\u53d1\u8005\u80fd\u591f\u68c0\u6d4b\u7ec4\u5408\u952e\u64cd\u4f5c\uff08\u5982 Ctrl+C\u3001Shift+Click \u7b49\uff09</p> \u4fee\u9970\u952e\u5e38\u91cf \u503c\uff08\u5341\u516d\u8fdb\u5236\uff09 \u5bf9\u5e94\u6309\u952e <code>GLFW_MOD_SHIFT</code> <code>0x0001</code> Shift\u952e <code>GLFW_MOD_CONTROL</code> <code>0x0002</code> Ctrl\u952e <code>GLFW_MOD_ALT</code> <code>0x0004</code> Alt/Option\u952e <code>GLFW_MOD_SUPER</code> <code>0x0008</code> Windows/Command\u952e <code>GLFW_MOD_CAPS_LOCK</code> <code>0x0010</code> Caps Lock\u6fc0\u6d3b\u72b6\u6001 <code>GLFW_MOD_NUM_LOCK</code> <code>0x0020</code> Num Lock\u6fc0\u6d3b\u72b6\u6001 \u7ec4\u5408\u952e\u68c0\u6d4b\u4ee3\u7801 \u529f\u80fd\u63cf\u8ff0 <code>(mods &amp; GLFW_MOD_CONTROL) != 0</code> \u68c0\u6d4bCtrl\u952e\u662f\u5426\u6309\u4e0b <code>(mods &amp; (GLFW_MOD_CONTROL\\|GLFW_MOD_SHIFT)) == (GLFW_MOD_CONTROL\\|   GLFW_MOD_SHIFT)</code> \u7cbe\u786e\u68c0\u6d4bCtrl+Shift\u7ec4\u5408 <code>mods == GLFW_MOD_CONTROL</code> \u4ec5Ctrl\u952e\u6309\u4e0b\uff08\u65e0\u5176\u4ed6\u4fee\u9970\u952e\uff09 <p>\u6211\u4eec\u9996\u5148\u8c03\u7528GLFW\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u4ee5\u7b80\u5355\u65b9\u5f0f\u5904\u7406GUI\u7ec4\u4ef6\uff08\u7a97\u53e3\u7b49\uff09\u548c\u4e8b\u4ef6\uff08\u6309\u952e\u3001\u9f20\u6807\u79fb\u52a8\u7b49\uff09\u5e76\u9644\u52a0OpenGL\u4e0a\u4e0b\u6587\u7684\u5e93\u3002\u76ee\u524d\uff0c\u4f60\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528Swing\u6216AWT\u6e32\u67d3OpenGL\u3002\u5982\u679c\u60f3\u4f7f\u7528AWT\uff0c\u53ef\u4ee5\u67e5\u770blwjgl3-awt\uff0c\u4f46\u672c\u4e66\u5c06\u575a\u6301\u4f7f\u7528GLFW\u3002\u6211\u4eec\u9996\u5148\u521d\u59cb\u5316GLFW\u5e93\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e9b\u7a97\u53e3\u521d\u59cb\u5316\u53c2\u6570\uff08\u4f8b\u5982\u662f\u5426\u53ef\u8c03\u6574\u5927\u5c0f\uff09\u3002\u7a97\u53e3\u901a\u8fc7\u8c03\u7528<code>glfwCreateWindow</code>\u521b\u5efa\uff0c\u8be5\u51fd\u6570\u63a5\u6536\u7a97\u53e3\u7684\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u548c\u6807\u9898\uff0c\u8fd4\u56de\u4e00\u4e2a\u53e5\u67c4\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u8be5\u53e5\u67c4\u4ee5\u4fbf\u5728\u5176\u4ed6GLFW\u76f8\u5173\u51fd\u6570\u4e2d\u4f7f\u7528\u3002\u63a5\u7740\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u952e\u76d8\u56de\u8c03\u51fd\u6570\uff0c\u5f53\u6309\u952e\u88ab\u6309\u4e0b\u65f6\u4f1a\u8c03\u7528\u8be5\u51fd\u6570\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u4ec5\u68c0\u6d4b<code>ESC</code>\u952e\u662f\u5426\u88ab\u6309\u4e0b\u4ee5\u5173\u95ed\u7a97\u53e3\u3002\u8ba9\u6211\u4eec\u7ee7\u7eed\u770b<code>init</code>\u65b9\u6cd5\uff1a <pre><code>public class HelloWorld {\n    ...\n    private void init() {\n        ...\n        // \u83b7\u53d6\u7ebf\u7a0b\u6808\u5e76\u538b\u5165\u4e00\u4e2a\u65b0\u5e27\n        try (MemoryStack stack = stackPush()) {\n            IntBuffer pWidth = stack.mallocInt(1); // int*\n            IntBuffer pHeight = stack.mallocInt(1); // int*\n\n            // \u83b7\u53d6\u4f20\u9012\u7ed9glfwCreateWindow\u7684\u7a97\u53e3\u5c3a\u5bf8\n            glfwGetWindowSize(window, pWidth, pHeight);\n\n            // \u83b7\u53d6\u4e3b\u663e\u793a\u5668\u7684\u5206\u8fa8\u7387\n            GLFWVidMode vidmode = glfwGetVideoMode(glfwGetPrimaryMonitor());\n\n            // \u5c45\u4e2d\u7a97\u53e3\n            glfwSetWindowPos(\n                    window,\n                    (vidmode.width() - pWidth.get(0)) / 2,\n                    (vidmode.height() - pHeight.get(0)) / 2\n            );\n        } // \u6808\u5e27\u4f1a\u81ea\u52a8\u5f39\u51fa\n\n        // \u7ed1\u5b9aOpenGL\u4e0a\u4e0b\u6587\n        glfwMakeContextCurrent(window);\n        // \u542f\u7528\u5782\u76f4\u540c\u6b65\n        glfwSwapInterval(1);\n\n        // \u663e\u793a\u7a97\u53e3\n        glfwShowWindow(window);\n    }\n    ...\n}\n</code></pre></p> <p>\u5c3d\u7ba1\u6211\u4eec\u5c06\u5728\u540e\u7eed\u7ae0\u8282\u8be6\u7ec6\u89e3\u91ca\uff0c\u4f46\u8fd9\u91cc\u4f60\u4f1a\u770b\u5230LWJGL\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u7c7b<code>MemoryStack</code>\u3002\u5982\u524d\u6240\u8ff0\uff0cLWJGL\u662f\u5bf9\u672c\u5730\u5e93\uff08\u57fa\u4e8eC\u7684\u51fd\u6570\uff09\u7684\u5c01\u88c5\u3002Java\u6ca1\u6709\u6307\u9488\u7684\u6982\u5ff5\uff08\u81f3\u5c11\u4eceC\u7684\u89d2\u5ea6\u6765\u770b\uff09\uff0c\u56e0\u6b64\u5411C\u51fd\u6570\u4f20\u9012\u7ed3\u6784\u5e76\u975e\u6613\u4e8b\u3002\u4e3a\u4e86\u5171\u4eab\u8fd9\u4e9b\u7ed3\u6784\uff0c\u5e76\u5b9e\u73b0\u5f15\u7528\u4f20\u9012\u53c2\u6570\uff08\u5982\u4e0a\u9762\u7684\u793a\u4f8b\uff09\uff0c\u6211\u4eec\u9700\u8981\u5206\u914d\u53ef\u4ee5\u88ab\u672c\u5730\u4ee3\u7801\u8bbf\u95ee\u7684\u5185\u5b58\u3002LWJGL\u63d0\u4f9b\u4e86<code>MemoryStack</code>\u7c7b\uff0c\u5141\u8bb8\u6211\u4eec\u5206\u914d\u53ef\u88ab\u672c\u5730\u4ee3\u7801\u8bbf\u95ee\u7684\u5185\u5b58/\u7ed3\u6784\uff0c\u8fd9\u4e9b\u5185\u5b58\u4f1a\u5728<code>stackPush</code>\u65b9\u6cd5\u8c03\u7528\u7684\u4f5c\u7528\u57df\u7ed3\u675f\u65f6\u81ea\u52a8\u6e05\u7406\uff08\u5b9e\u9645\u4e0a\u662f\u8fd4\u56de\u5230\u4e00\u4e2a\u7c7b\u4f3c\u6c60\u7684\u7ed3\u6784\u4e2d\u4ee5\u4f9b\u91cd\u7528\uff09\u3002\u6240\u6709\u53ef\u88ab\u672c\u5730\u4ee3\u7801\u8bbf\u95ee\u7684\u5185\u5b58/\u7ed3\u6784\u90fd\u662f\u901a\u8fc7\u8fd9\u4e2a\u6808\u7c7b\u5b9e\u4f8b\u5316\u7684\u3002\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528<code>glfwGetWindowSize</code>\u83b7\u53d6\u7a97\u53e3\u5c3a\u5bf8\u3002\u8fd4\u56de\u503c\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u7684\u65b9\u5f0f\u8fd4\u56de\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5206\u914d\u4e24\u4e2aint\uff08\u4ee5\u4e24\u4e2a<code>IntBuffer</code>\u7684\u5f62\u5f0f\uff09\u3002\u901a\u8fc7\u8fd9\u4e9b\u4fe1\u606f\u548c\u663e\u793a\u5668\u7684\u5c3a\u5bf8\uff0c\u6211\u4eec\u53ef\u4ee5\u5c45\u4e2d\u7a97\u53e3\uff0c\u8bbe\u7f6eOpenGL\uff0c\u542f\u7528\u5782\u76f4\u540c\u6b65\uff08Vertical Synchronization\uff0c\u66f4\u591a\u5185\u5bb9\u89c1\u4e0b\u4e00\u7ae0\uff09\uff0c\u6700\u540e\u663e\u793a\u7a97\u53e3\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u6765\u6301\u7eed\u6e32\u67d3\u5185\u5bb9\uff1a<p></p> <pre><code>public class HelloWorld {\n    ...\n    private void loop() {\n        // \u8fd9\u4e00\u884c\u5bf9\u4e8eLWJGL\u4e0eGLFW\u7684OpenGL\u4e0a\u4e0b\u6587\uff08\u6216\u4efb\u4f55\u5916\u90e8\u7ba1\u7406\u7684\u4e0a\u4e0b\u6587\uff09\u7684\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\u3002\n        // LWJGL\u4f1a\u68c0\u6d4b\u5f53\u524d\u7ebf\u7a0b\u4e2d\u7684\u4e0a\u4e0b\u6587\uff0c\u521b\u5efaGLCapabilities\u5b9e\u4f8b\uff0c\u5e76\u4f7fOpenGL\u7ed1\u5b9a\u53ef\u7528\u3002\n        GL.createCapabilities();\n\n        // \u8bbe\u7f6e\u6e05\u9664\u989c\u8272\n        glClearColor(1.0f, 0.0f, 0.0f, 0.0f);\n\n        // \u8fd0\u884c\u6e32\u67d3\u5faa\u73af\uff0c\u76f4\u5230\u7528\u6237\u5c1d\u8bd5\u5173\u95ed\u7a97\u53e3\u6216\u6309\u4e0bESCAPE\u952e\u3002\n        while (!glfwWindowShouldClose(window)) {\n            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // \u6e05\u9664\u5e27\u7f13\u51b2\u533a\n\n            glfwSwapBuffers(window); // \u4ea4\u6362\u989c\u8272\u7f13\u51b2\u533a\n\n            // \u8f6e\u8be2\u7a97\u53e3\u4e8b\u4ef6\u3002\u4e0a\u9762\u7684\u6309\u952e\u56de\u8c03\u53ea\u4f1a\u5728\u6b64\u65f6\u88ab\u8c03\u7528\u3002\n            glfwPollEvents();\n        }\n    }\n    ...\n}\n</code></pre></p> openGL\u7ed1\u5b9a\u4e0a\u4e0b\u6587 \u4e8b\u4ef6\u8f6e\u8be2 <p>\u524d\u6587init\u521d\u59cb\u5316\u65f6\u6ce8\u518c\u4e86glfwSetKeyCallback</p> <p>\u6bcf\u6b21\u5faa\u73af\u90fd\u4f1a\u901a\u8fc7 glfwPollEvents() \u68c0\u67e5\u662f\u5426\u6709\u65b0\u4e8b\u4ef6\uff08\u5982 ESC \u952e\u91ca\u653e\uff09\uff0c\u82e5\u6709\u5219\u89e6\u53d1\u56de\u8c03\u51fd\u6570glfwSetKeyCallback</p> <p>\u6211\u4eec\u9996\u5148\u521b\u5efaOpenGL\u4e0a\u4e0b\u6587\uff0c\u8bbe\u7f6e\u6e05\u9664\u989c\u8272\uff0c\u5e76\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\u6267\u884c\u6e05\u9664\u64cd\u4f5c\uff08\u9488\u5bf9\u989c\u8272\u548c\u6df1\u5ea6\u7f13\u51b2\u533a\uff09\uff0c\u540c\u65f6\u8f6e\u8be2\u952e\u76d8\u4e8b\u4ef6\u4ee5\u68c0\u6d4b\u662f\u5426\u9700\u8981\u5173\u95ed\u7a97\u53e3\u3002\u6211\u4eec\u5c06\u5728\u540e\u7eed\u7ae0\u8282\u8be6\u7ec6\u89e3\u91ca\u8fd9\u4e9b\u6982\u5ff5\u3002\u4e0d\u8fc7\uff0c\u4e3a\u4e86\u5b8c\u6574\u6027\uff0c\u6e32\u67d3\u662f\u5728\u4e00\u4e2a\u76ee\u6807\u4e0a\u8fdb\u884c\u7684\uff0c\u672c\u4f8b\u4e2d\u662f\u4e00\u4e2a\u5305\u542b\u989c\u8272\u4fe1\u606f\u548c\u6df1\u5ea6\u503c\uff08\u7528\u4e8e3D\uff09\u7684\u7f13\u51b2\u533a\u3002\u5b8c\u6210\u6e32\u67d3\u540e\uff0c\u6211\u4eec\u53ea\u9700\u901a\u8fc7\u8c03\u7528<code>glfwSwapBuffers</code>\u901a\u77e5GLFW\u7f13\u51b2\u533a\u5df2\u51c6\u5907\u597d\u663e\u793a\u3002GLFW\u4f1a\u7ef4\u62a4\u591a\u4e2a\u7f13\u51b2\u533a\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u4e2a\u7f13\u51b2\u533a\u4e0a\u6267\u884c\u6e32\u67d3\u64cd\u4f5c\uff0c\u540c\u65f6\u53e6\u4e00\u4e2a\u7f13\u51b2\u533a\u663e\u793a\u5728\u7a97\u53e3\u4e2d\uff08\u5426\u5219\u4f1a\u51fa\u73b0\u95ea\u70c1\u95ee\u9898\uff09\u3002</p> <p>\u5982\u679c\u4f60\u7684\u73af\u5883\u914d\u7f6e\u6b63\u786e\uff0c\u8fd0\u884c\u4ee3\u7801\u540e\u5e94\u8be5\u80fd\u770b\u5230\u4e00\u4e2a\u7ea2\u8272\u80cc\u666f\u7684\u7a97\u53e3\u3002</p> <p></p> <p>\u672c\u7ae0\u7684\u6e90\u4ee3\u7801\u4f4d\u4e8e\u8fd9\u91cc\u3002</p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"01-first-steps/#opengl","title":"\u4e3a\u4ec0\u4e48\u8981\u7ed1\u5b9aopenGL\u4e0a\u4e0b\u6587","text":"<p>OpenGL\u672c\u8eab\u662f\u4e00\u4e2a\u5168\u5c40\u72b6\u6001\u673a\uff0c\u6240\u6709\u64cd\u4f5c\uff08\u5982\u7ed8\u5236\u3001\u7740\u8272\u5668\u3001\u7eb9\u7406\u7ed1\u5b9a\uff09\u90fd\u4f9d\u8d56\u4e8e\u5f53\u524d\u4e0a\u4e0b\u6587\u7684\u72b6\u6001\u3002</p> <p>\u4f8b\u5982\uff1a <pre><code>glClearColor(1.0f, 0.0f, 0.0f, 1.0f); // \u8bbe\u7f6e\u6e05\u9664\u989c\u8272\uff08\u5b58\u50a8\u5728\u4e0a\u4e0b\u6587\u4e2d\uff09\nglClear(GL_COLOR_BUFFER_BIT);         // \u4f7f\u7528\u5f53\u524d\u4e0a\u4e0b\u6587\u7684\u6e05\u9664\u989c\u8272\n</code></pre></p> <p>\u5982\u679c\u6ca1\u6709\u7ed1\u5b9a\u4e0a\u4e0b\u6587\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u4e0d\u77e5\u9053\u5e94\u8be5\u4fee\u6539\u54ea\u4e2a\u7a97\u53e3/\u6e32\u67d3\u76ee\u6807\u7684\u72b6\u6001\u3002</p>"},{"location":"01-first-steps/#glfwlwjgl","title":"GLFW\u4e0a\u4e0b\u6587\u7ed1\u5b9a\u4e0eLWJGL\u80fd\u529b\u52a0\u8f7d\u5206\u5de5\u5bf9\u6bd4","text":"\u529f\u80fd/\u7279\u6027 <code>glfwMakeContextCurrent(window)</code> <code>GL.createCapabilities()</code> \u6838\u5fc3\u804c\u8d23 \u5c06\u6307\u5b9a\u7a97\u53e3\u7684OpenGL\u4e0a\u4e0b\u6587\u7ed1\u5b9a\u5230\u5f53\u524d\u7ebf\u7a0b \u52a0\u8f7d \u5f53\u524d\u4e0a\u4e0b\u6587\u652f\u6301\u7684OpenGL\u51fd\u6570\u6307\u9488\u5230JVM \u8c03\u7528\u9636\u6bb5 \u4e0a\u4e0b\u6587\u7ed1\u5b9a\u9636\u6bb5 \u51fd   \u6570\u521d\u59cb\u5316\u9636\u6bb5 \u7ebf\u7a0b\u5173\u8054\u6027 \u8bbe\u7f6e\u5f53\u524d\u7ebf\u7a0b\u7684\u6e32\u67d3\u76ee\u6807\u7a97\u53e3 \u4e3a\u5f53 \u524d\u7ebf\u7a0b\u521d\u59cb\u5316OpenGL\u51fd\u6570\u8c03\u7528\u80fd\u529b \u662f\u5426\u52a0\u8f7dOpenGL\u51fd\u6570 \u5426 \u662f \u4f9d\u8d56\u5173\u7cfb \u5fc5\u987b\u5728<code>createCapabilities()</code>\u524d\u8c03\u7528 \u5fc5   \u987b\u5728\u6709\u6548\u7684\u4e0a\u4e0b\u6587\u7ed1\u5b9a\u540e\u8c03\u7528 \u5931\u8d25\u540e\u679c \u540e\u7eedOpenGL\u8c03\u7528\u65e0\u6548\u6216\u5d29\u6e83 \u8c03   \u7528OpenGL\u51fd\u6570\u4f1a\u629b\u51fa<code>UnsatisfiedLinkError</code> \u591a\u7a97\u53e3\u573a\u666f \u5207\u6362\u7a97\u53e3\u65f6\u9700\u8981\u91cd\u65b0\u8c03\u7528 \u6bcf\u4e2a \u65b0\u4e0a\u4e0b\u6587\u9700\u8981\u5355\u72ec\u8c03\u7528 \u5178\u578b\u8c03\u7528\u4f4d\u7f6e \u7a97\u53e3\u521b\u5efa\u540e/\u7ebf\u7a0b\u5207\u6362\u6e32\u67d3\u76ee\u6807\u65f6 \u4e0a\u4e0b\u6587    \u7ed1\u5b9a\u540e\u9996\u6b21\u4f7f\u7528OpenGL\u524d \u5e95\u5c42\u64cd\u4f5c \u9a71\u52a8\u7ea7\u4e0a\u4e0b\u6587\u5207\u6362 \u52a8   \u6001\u94fe\u63a5OpenGL\u51fd\u6570\u5730\u5740 \u7c7b\u6bd4\u8bf4\u660e \u6307\u5b9a\u5f53\u524d\u7ebf\u7a0b\u4f7f\u7528\u54ea\u4e2a\u753b\u5e03 \u51c6\u5907 \u5f53\u524d\u753b\u5e03\u53ef\u7528\u7684\u7ed8\u753b\u5de5\u5177"},{"location":"02-the-game-loop/","title":"\u7b2c02\u7ae0 - \u6e38\u620f\u5faa\u73af\uff08The Game Loop\uff09","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u521b\u5efa\u6e38\u620f\u5faa\u73af\u5f00\u59cb\u5f00\u53d1\u6211\u4eec\u7684\u6e38\u620f\u5f15\u64ce\u3002\u6e38\u620f\u5faa\u73af\u662f\u6bcf\u4e2a\u6e38\u620f\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002\u5b83\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u65e0\u5c3d\u7684\u5faa\u73af\uff0c\u8d1f\u8d23\u5468\u671f\u6027\u5730\u5904\u7406\u7528\u6237\u8f93\u5165\u3001\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u5e76\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u3002</p> <p>\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"02-the-game-loop/#_1","title":"\u57fa\u7840","text":"<p>\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u5c55\u793a\u4e86\u6e38\u620f\u5faa\u73af\u7684\u7ed3\u6784\uff1a</p> <pre><code>while (keepOnRunning) {\n    input();\n    update();\n    render();\n}\n</code></pre> <p><code>input</code>\u65b9\u6cd5\u8d1f\u8d23\u5904\u7406\u7528\u6237\u8f93\u5165\uff08\u6309\u952e\u3001\u9f20\u6807\u79fb\u52a8\u7b49\uff09\u3002<code>update</code>\u65b9\u6cd5\u8d1f\u8d23\u66f4\u65b0\u6e38\u620f\u72b6\u6001\uff08\u654c\u4eba\u4f4d\u7f6e\u3001\u4eba\u5de5\u667a\u80fd\u7b49\uff09\uff0c\u6700\u540e\u662f<code>render</code>\u65b9\u6cd5\u3002\u90a3\u4e48\uff0c\u8fd9\u5c31\u5168\u90e8\u7ed3\u675f\u4e86\u5417\uff1f\u6211\u4eec\u7684\u6e38\u620f\u5faa\u73af\u5b8c\u6210\u4e86\u5417\uff1f\u8fd8\u6ca1\u6709\u3002\u4e0a\u8ff0\u4ee3\u7801\u7247\u6bb5\u5b58\u5728\u8bb8\u591a\u95ee\u9898\u3002\u9996\u5148\uff0c\u6e38\u620f\u5faa\u73af\u8fd0\u884c\u7684\u901f\u5ea6\u5c06\u6839\u636e\u8fd0\u884c\u7684\u673a\u5668\u4e0d\u540c\u800c\u4e0d\u540c\u3002\u5982\u679c\u673a\u5668\u8db3\u591f\u5feb\uff0c\u7528\u6237\u751a\u81f3\u65e0\u6cd5\u770b\u6e05\u695a\u6e38\u620f\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u800c\u4e14\uff0c\u8fd9\u6837\u7684\u6e38\u620f\u5faa\u73af\u5c06\u8017\u5c3d\u6240\u6709\u7684\u673a\u5668\u8d44\u6e90\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u5206\u522b\u63a7\u5236\u6e38\u620f\u72b6\u6001\u66f4\u65b0\u548c\u6e32\u67d3\u5230\u5c4f\u5e55\u7684\u5468\u671f\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\uff1f\u4ee5\u6052\u5b9a\u901f\u7387\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u66f4\u91cd\u8981\uff0c\u5c24\u5176\u662f\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e86\u67d0\u79cd\u7269\u7406\u5f15\u64ce\u3002\u76f8\u53cd\uff0c\u5982\u679c\u6e32\u67d3\u672a\u80fd\u53ca\u65f6\u5b8c\u6210\uff0c\u5904\u7406\u6e38\u620f\u5faa\u73af\u65f6\u6e32\u67d3\u65e7\u5e27\u5c31\u6beb\u65e0\u610f\u4e49\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u7075\u6d3b\u5730\u8df3\u8fc7\u67d0\u4e9b\u5e27\u3002</p>"},{"location":"02-the-game-loop/#_2","title":"\u5b9e\u73b0","text":"<p>\u5728\u68c0\u67e5\u6e38\u620f\u5faa\u73af\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u521b\u5efa\u4e00\u4e9b\u652f\u6301\u7c7b\uff0c\u8fd9\u4e9b\u7c7b\u5c06\u6784\u6210\u5f15\u64ce\u7684\u6838\u5fc3\u3002\u6211\u4eec\u9996\u5148\u5c06\u521b\u5efa\u4e00\u4e2a\u63a5\u53e3\u6765\u5c01\u88c5\u6e38\u620f\u903b\u8f91\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u6211\u4eec\u7684\u6e38\u620f\u5f15\u64ce\u5728\u4e0d\u540c\u7ae0\u8282\u4e4b\u95f4\u53ef\u91cd\u7528\u3002\u8be5\u63a5\u53e3\u5c06\u5305\u542b\u521d\u59cb\u5316\u6e38\u620f\u8d44\u6e90\uff08<code>init</code>\uff09\u3001\u5904\u7406\u7528\u6237\u8f93\u5165\uff08<code>input</code>\uff09\u3001\u66f4\u65b0\u6e38\u620f\u72b6\u6001\uff08<code>update</code>\uff09\u548c\u6e05\u7406\u8d44\u6e90\uff08<code>cleanup</code>\uff09\u7684\u65b9\u6cd5\u3002</p> <pre><code>package org.lwjglb.engine;\n\nimport org.lwjglb.engine.graph.Render;\nimport org.lwjglb.engine.scene.Scene;\n\npublic interface IAppLogic {\n\n    void cleanup();\n\n    void init(Window window, Scene scene, Render render);\n\n    void input(Window window, Scene scene, long diffTimeMillis);\n\n    void update(Window window, Scene scene, long diffTimeMillis);\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6709\u4e00\u4e9b\u5b9e\u4f8b\u7c7b\u5c1a\u672a\u5b9a\u4e49\uff08<code>Window</code>\u3001<code>Scene</code>\u548c<code>Render</code>\uff09\uff0c\u4ee5\u53ca\u4e00\u4e2a\u540d\u4e3a<code>diffTimeMillis</code>\u7684\u53c2\u6570\uff0c\u5b83\u4fdd\u5b58\u4e86\u8fd9\u4e9b\u65b9\u6cd5\u8c03\u7528\u4e4b\u95f4\u7ecf\u8fc7\u7684\u6beb\u79d2\u6570\u3002</p> <p>\u8ba9\u6211\u4eec\u4ece<code>Window</code>\u7c7b\u5f00\u59cb\u3002\u6211\u4eec\u5c06\u5728\u6b64\u7c7b\u4e2d\u5c01\u88c5\u6240\u6709\u5bf9GLFW\u5e93\u7684\u8c03\u7528\uff0c\u4ee5\u521b\u5efa\u548c\u7ba1\u7406\u7a97\u53e3\uff0c\u5176\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine;\n\nimport org.lwjgl.glfw.GLFWVidMode;\nimport org.lwjgl.system.MemoryUtil;\nimport org.tinylog.Logger;\n\nimport java.util.concurrent.Callable;\n\nimport static org.lwjgl.glfw.Callbacks.glfwFreeCallbacks;\nimport static org.lwjgl.glfw.GLFW.*;\nimport static org.lwjgl.opengl.GL11.*;\nimport static org.lwjgl.system.MemoryUtil.NULL;\n\npublic class Window {\n\n    private final long windowHandle;\n    private int height;\n    private Callable&lt;Void&gt; resizeFunc;\n    private int width;\n    ...\n    ...\n    public static class WindowOptions {\n        public boolean compatibleProfile;\n        public int fps;\n        public int height;\n        public int ups = Engine.TARGET_UPS;\n        public int width;\n    }\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5c5e\u6027\u6765\u5b58\u50a8\u7a97\u53e3\u53e5\u67c4\u3001\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u4ee5\u53ca\u5728\u7a97\u53e3\u5927\u5c0f\u6539\u53d8\u65f6\u8c03\u7528\u7684\u56de\u8c03\u51fd\u6570\u3002\u5b83\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5185\u90e8\u7c7b\u6765\u8bbe\u7f6e\u4e00\u4e9b\u7528\u4e8e\u63a7\u5236\u7a97\u53e3\u521b\u5efa\u7684\u9009\u9879\uff1a</p> <ul> <li><code>compatibleProfile</code>\uff1a\u8fd9\u63a7\u5236\u6211\u4eec\u662f\u5426\u5e0c\u671b\u4f7f\u7528\u65e7\u7248\u672c\u4e2d\u7684\u51fd\u6570\uff08\u5df2\u5f03\u7528\u7684\u51fd\u6570\uff09\u3002</li> <li><code>fps</code>\uff1a\u5b9a\u4e49\u76ee\u6807\u5e27\u7387\uff08FPS\uff09\u3002\u5982\u679c\u5176\u503c\u5c0f\u4e8e\u6216\u7b49\u4e8e\u96f6\uff0c\u5219\u610f\u5473\u7740\u6211\u4eec\u4e0d\u8bbe\u7f6e\u76ee\u6807\u5e27\u7387\uff0c\u800c\u662f\u4f7f\u7528\u663e\u793a\u5668\u7684\u5237\u65b0\u7387\u4f5c\u4e3a\u76ee\u6807\u5e27\u7387\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5782\u76f4\u540c\u6b65\uff0c\u4e5f\u5c31\u662f\u4ece\u8c03\u7528<code>glfwSwapBuffers</code>\u8d77\u7b49\u5f85\u7684\u5c4f\u5e55\u5237\u65b0\u6b21\u6570\u3002</li> <li><code>height</code>\uff1a\u671f\u671b\u7684\u7a97\u53e3\u9ad8\u5ea6\u3002</li> <li><code>width</code>\uff1a\u671f\u671b\u7684\u7a97\u53e3\u5bbd\u5ea6\u3002</li> <li><code>ups</code>\uff1a\u5b9a\u4e49\u6bcf\u79d2\u66f4\u65b0\u6b21\u6570\u7684\u76ee\u6807\u503c\uff08\u521d\u59cb\u5316\u4e3a\u9ed8\u8ba4\u503c\uff09\u3002</li> </ul> <p>\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b<code>Window</code>\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff1a</p> <pre><code>public class Window {\n    ...\n    public Window(String title, WindowOptions opts, Callable&lt;Void&gt; resizeFunc) {\n        this.resizeFunc = resizeFunc;\n        if (!glfwInit()) {\n            throw new IllegalStateException(\"Unable to initialize GLFW\");\n        }\n\n        glfwDefaultWindowHints();\n        glfwWindowHint(GLFW_VISIBLE, GL_FALSE);\n        glfwWindowHint(GLFW_RESIZABLE, GL_TRUE);\n\n        glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);\n        glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2);\n\n        //\u8fd9\u4e2a\u4e0d\u91cd\u8981\n        if (opts.compatibleProfile) {\n            glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_COMPAT_PROFILE);//\u517c\u5bb9\u6a21\u5f0f\n        } else {\n            glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);//\u6838\u5fc3\u6a21\u5f0f\n            glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);\n        }\n\n        if (opts.width &gt; 0 &amp;&amp; opts.height &gt; 0) {\n            this.width = opts.width;\n            this.height = opts.height;\n        } else {\n            glfwWindowHint(GLFW_MAXIMIZED, GLFW_TRUE);\n            GLFWVidMode vidMode = glfwGetVideoMode(glfwGetPrimaryMonitor());\n            width = vidMode.width();\n            height = vidMode.height();\n        }\n\n        windowHandle = glfwCreateWindow(width, height, title, NULL, NULL);\n        if (windowHandle == NULL) {\n            throw new RuntimeException(\"Failed to create the GLFW window\");\n        }\n\n        //\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5f53\u7a97\u53e3\u7684\u200b\u5e27\u7f13\u51b2\u533a\u5927\u5c0f\u200b\uff08\u5b9e\u9645\u6e32\u67d3\u533a\u57df\uff09\u53d1\u751f\u53d8\u5316\u65f6\uff08\u5982\u7a97\u53e3\u7f29\u653e\u3001\u5168\u5c4f\u5207\u6362\uff09\uff0c\u81ea\u52a8\u8c03\u7528\u8be5\u51fd\u6570\n        glfwSetFramebufferSizeCallback(windowHandle, (window, w, h) -&gt; resized(w, h));\n\n        // \u200b\u200bGLFW \u9519\u8bef\u56de\u8c03\u7684\u8bbe\u7f6e\u200b\u200b\uff0c\u7528\u4e8e\u6355\u83b7\u5e76\u5904\u7406 GLFW \u5e93\u8fd0\u884c\u65f6\u7684\u9519\u8bef\u4fe1\u606f\n        //\u200b\u200b\u5fc5\u987b\u5728 glfwInit() \u4e4b\u524d\u8bbe\u7f6e\u200b\u200b\uff0c\u5426\u5219\u65e9\u671f\u9519\u8bef\uff08\u5982\u5e93\u52a0\u8f7d\u5931\u8d25\uff09\u65e0\u6cd5\u88ab\u6355\u83b7\n        glfwSetErrorCallback((int errorCode, long msgPtr) -&gt;\n                Logger.error(\"Error code [{}], msg [{}]\", errorCode, MemoryUtil.memUTF8(msgPtr))\n        );\n\n        //\u6309\u952e\u56de\u8c03\uff0c\u6b64\u5904\u76d1\u542cESC\u6309\u952e\n        glfwSetKeyCallback(windowHandle, (window, key, scancode, action, mods) -&gt; {\n            keyCallBack(key, action);\n        });\n\n        //\u7ed1\u5b9a\u4e0a\u4e0b\u6587\n        glfwMakeContextCurrent(windowHandle);\n\n        if (opts.fps &gt; 0) {\n            glfwSwapInterval(0);\n        } else {\n            glfwSwapInterval(1);\n        }\n\n        glfwShowWindow(windowHandle);\n\n        int[] arrWidth = new int[1];\n        int[] arrHeight = new int[1];\n        glfwGetFramebufferSize(windowHandle, arrWidth, arrHeight);\n        width = arrWidth[0];\n        height = arrHeight[0];\n    }\n    ...\n    public void keyCallBack(int key, int action) {\n        if (key == GLFW_KEY_ESCAPE &amp;&amp; action == GLFW_RELEASE) {\n            glfwSetWindowShouldClose(windowHandle, true); // \u6211\u4eec\u5c06\u5728\u6e32\u67d3\u5faa\u73af\u4e2d\u68c0\u6d4b\u5230\u8fd9\u4e00\u70b9\n        }\n    }\n    ...\n}\n</code></pre> \u4e3a\u4ec0\u4e48arrWidth\uff0carrHeight\u8981\u7528\u6570\u7ec4 <p>GLFW \u7684 C \u8bed\u8a00\u8bbe\u8ba1\uff1a GLFW \u662f C \u5e93\uff0c\u901a\u8fc7\u6307\u9488\u53c2\u6570\u8fd4\u56de\u591a\u4e2a\u503c\uff08\u7c7b\u4f3c void glfwGetFramebufferSize  ..., int width, int height\uff09\u3002</p> <p>\u6211\u4eec\u9996\u5148\u8bbe\u7f6e\u4e00\u4e9b\u7a97\u53e3\u63d0\u793a\u6765\u9690\u85cf\u7a97\u53e3\u5e76\u8bbe\u7f6e\u4e3a\u53ef\u8c03\u6574\u5927\u5c0f\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u8bbe\u7f6eOpenGL\u7248\u672c\uff0c\u5e76\u6839\u636e\u7a97\u53e3\u9009\u9879\u9009\u62e9\u6838\u5fc3\u6216\u517c\u5bb9\u914d\u7f6e\u6587\u4ef6\u3002\u7136\u540e\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u9996\u9009\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u6211\u4eec\u83b7\u53d6\u4e3b\u663e\u793a\u5668\u7684\u5c3a\u5bf8\u6765\u8bbe\u7f6e\u7a97\u53e3\u5927\u5c0f\u3002\u968f\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528<code>glfwCreateWindow</code>\u521b\u5efa\u7a97\u53e3\uff0c\u5e76\u5728\u7a97\u53e3\u5927\u5c0f\u6539\u53d8\u6216\u68c0\u6d4b\u5230\u7a97\u53e3\u7ec8\u6b62\uff08\u6309\u4e0b<code>ESC</code>\u952e\uff09\u65f6\u8bbe\u7f6e\u56de\u8c03\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u60f3\u624b\u52a8\u8bbe\u7f6e\u76ee\u6807FPS\uff0c\u5219\u8c03\u7528<code>glfwSwapInterval(0)</code>\u6765\u7981\u7528\u5782\u76f4\u540c\u6b65\uff0c\u6700\u540e\u663e\u793a\u7a97\u53e3\u5e76\u83b7\u53d6\u5e27\u7f13\u51b2\u533a\u5927\u5c0f\uff08\u7528\u4e8e\u6e32\u67d3\u7684\u7a97\u53e3\u90e8\u5206\uff09\u3002</p> <p><code>Window</code>\u7c7b\u7684\u5176\u4f59\u65b9\u6cd5\u7528\u4e8e\u6e05\u7406\u8d44\u6e90\u3001\u5904\u7406\u7a97\u53e3\u5927\u5c0f\u8c03\u6574\u56de\u8c03\u3001\u83b7\u53d6\u7a97\u53e3\u5927\u5c0f\u7684getter\u65b9\u6cd5\uff0c\u4ee5\u53ca\u8f6e\u8be2\u4e8b\u4ef6\u548c\u68c0\u67e5\u7a97\u53e3\u662f\u5426\u5e94\u5173\u95ed\u7684\u65b9\u6cd5\u3002</p> <pre><code>public class Window {\n    ...\n    public void cleanup() {\n        glfwFreeCallbacks(windowHandle);\n        glfwDestroyWindow(windowHandle);\n        glfwTerminate();\n        GLFWErrorCallback callback = glfwSetErrorCallback(null);\n        if (callback != null) {\n            callback.free();\n        }\n    }\n\n    public int getHeight() {\n        return height;\n    }\n\n    public int getWidth() {\n        return width;\n    }\n\n    public long getWindowHandle() {\n        return windowHandle;\n    }\n\n    public boolean isKeyPressed(int keyCode) {\n        return glfwGetKey(windowHandle, keyCode) == GLFW_PRESS;\n    }\n\n    public void pollEvents() {\n        glfwPollEvents();\n    }\n\n    protected void resized(int width, int height) {\n        this.width = width;\n        this.height = height;\n        try {\n            resizeFunc.call();\n        } catch (Exception excp) {\n            Logger.error(\"Error calling resize callback\", excp);\n        }\n    }\n\n    public void update() {\n        glfwSwapBuffers(windowHandle);\n    }\n\n    public boolean windowShouldClose() {\n        return glfwWindowShouldClose(windowHandle);\n    }\n    ...\n}\n</code></pre> <p><code>Scene</code>\u7c7b\u5c06\u7528\u4e8e\u4fdd\u5b58\u672a\u67653D\u573a\u666f\u5143\u7d20\uff08\u6a21\u578b\u7b49\uff09\u3002\u76ee\u524d\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u7a7a\u7684\u5360\u4f4d\u7b26\uff1a</p> <pre><code>package org.lwjglb.engine.scene;\n\npublic class Scene {\n\n    public Scene() {\n    }\n\n    public void cleanup() {\n        // \u76ee\u524d\u8fd9\u91cc\u65e0\u9700\u505a\u4efb\u4f55\u5904\u7406\n    }\n}\n</code></pre> <p><code>Render</code>\u7c7b\u73b0\u5728\u4e5f\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u53ea\u662f\u6e05\u9664\u5c4f\u5e55\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjgl.opengl.GL;\nimport org.lwjglb.engine.Window;\nimport org.lwjglb.engine.scene.Scene;\n\nimport static org.lwjgl.opengl.GL11.*;\n\npublic class Render {\n\n    public Render() {\n        GL.createCapabilities();\n    }\n\n    public void cleanup() {\n        // \u76ee\u524d\u8fd9\u91cc\u65e0\u9700\u505a\u4efb\u4f55\u5904\u7406\n    }\n\n    public void render(Window window, Scene scene) {\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n    }\n}\n</code></pre> <p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u4e2a\u540d\u4e3a<code>Engine</code>\u7684\u65b0\u7c7b\u4e2d\u5b9e\u73b0\u6e38\u620f\u5faa\u73af\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine;\n\nimport org.lwjglb.engine.graph.Render;\nimport org.lwjglb.engine.scene.Scene;\n\npublic class Engine {\n\n    public static final int TARGET_UPS = 30;\n    private final IAppLogic appLogic;\n    private final Window window;\n    private Render render;\n    private boolean running;\n    private Scene scene;\n    private int targetFps;\n    private int targetUps;\n\n    public Engine(String windowTitle, Window.WindowOptions opts, IAppLogic appLogic) {\n        window = new Window(windowTitle, opts, () -&gt; {\n            resize();\n            return null;\n        });\n        targetFps = opts.fps;\n        targetUps = opts.ups;\n        this.appLogic = appLogic;\n        render = new Render();\n        scene = new Scene();\n        appLogic.init(window, scene, render);\n        running = true;\n    }\n\n    private void cleanup() {\n        appLogic.cleanup();\n        render.cleanup();\n        scene.cleanup();\n        window.cleanup();\n    }\n\n    private void resize() {\n        // \u76ee\u524d\u8fd9\u91cc\u65e0\u9700\u505a\u4efb\u4f55\u5904\u7406\n    }\n    ...\n}\n</code></pre> <p><code>Engine</code>\u7c7b\u5728\u6784\u9020\u51fd\u6570\u4e2d\u63a5\u6536\u7a97\u53e3\u6807\u9898\u3001\u7a97\u53e3\u9009\u9879\u4ee5\u53ca<code>IAppLogic</code>\u63a5\u53e3\u7684\u5b9e\u73b0\u5f15\u7528\u3002\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u5b83\u521b\u5efa\u4e86<code>Window</code>\u3001<code>Render</code>\u548c<code>Scene</code>\u7c7b\u7684\u5b9e\u4f8b\u3002<code>cleanup</code>\u65b9\u6cd5\u53ea\u662f\u8c03\u7528\u5176\u4ed6\u7c7b\u7684\u6e05\u7406\u8d44\u6e90\u65b9\u6cd5\u3002\u6e38\u620f\u5faa\u73af\u5728<code>run</code>\u65b9\u6cd5\u4e2d\u5b9a\u4e49\uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>public class Engine {\n    ...\n    private void run() {\n        long initialTime = System.currentTimeMillis();\n        float timeU = 1000.0f / targetUps;\n        float timeR = targetFps &gt; 0 ? 1000.0f / targetFps : 0;\n        float deltaUpdate = 0;\n        float deltaFps = 0;\n\n        long updateTime = initialTime;\n        while (running &amp;&amp; !window.windowShouldClose()) {\n            window.pollEvents();\n\n            long now = System.currentTimeMillis();\n            deltaUpdate += (now - initialTime) / timeU;\n            deltaFps += (now - initialTime) / timeR;\n\n            if (targetFps &lt;= 0 || deltaFps &gt;= 1) {\n                appLogic.input(window, scene, now - initialTime);\n            }\n\n            if (deltaUpdate &gt;= 1) {\n                long diffTimeMillis = now - updateTime;\n                appLogic.update(window, scene, diffTimeMillis);\n                updateTime = now;\n                deltaUpdate--;\n            }\n\n            if (targetFps &lt;= 0 || deltaFps &gt;= 1) {\n                render.render(window, scene);\n                deltaFps--;\n                window.update();\n            }\n            initialTime = now;\n        }\n\n        cleanup();\n    }\n    ...\n}\n</code></pre> <p>\u5faa\u73af\u5f00\u59cb\u65f6\u8ba1\u7b97\u4e24\u4e2a\u53c2\u6570\uff1a<code>timeU</code>\u548c<code>timeR</code>\uff0c\u5b83\u4eec\u5206\u522b\u63a7\u5236\u66f4\u65b0\uff08<code>timeU</code>\uff09\u548c\u6e32\u67d3\uff08<code>timeR</code>\uff09\u8c03\u7528\u4e4b\u95f4\u7684\u6700\u5927\u65f6\u95f4\u95f4\u9694\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u5982\u679c\u8fd9\u4e9b\u65f6\u95f4\u95f4\u9694\u88ab\u6d88\u8017\u5b8c\uff0c\u6211\u4eec\u5c31\u9700\u8981\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u6216\u8fdb\u884c\u6e32\u67d3\u3002\u5982\u679c\u76ee\u6807FPS\u8bbe\u7f6e\u4e3a0\uff0c\u6211\u4eec\u5c06\u4f9d\u8d56\u4e8e\u5782\u76f4\u540c\u6b65\uff08Vertical Synchronization\uff09\u5237\u65b0\u7387\uff0c\u56e0\u6b64\u5c06\u8be5\u503c\u8bbe\u4e3a<code>0</code>\u3002\u5faa\u73af\u5f00\u59cb\u65f6\u8f6e\u8be2\u7a97\u53e3\u4e8b\u4ef6\uff0c\u4e4b\u540e\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u7136\u540e\u8ba1\u7b97\u81ea\u4e0a\u6b21\u66f4\u65b0\u548c\u6e32\u67d3\u8c03\u7528\u4ee5\u6765\u7684\u65f6\u95f4\u5dee\u3002\u5982\u679c\u8d85\u8fc7\u4e86\u6e32\u67d3\u6700\u5927\u65f6\u95f4\u95f4\u9694\uff08\u6216\u4f9d\u8d56\u4e8e\u5782\u76f4\u540c\u6b65\uff09\uff0c\u5219\u8c03\u7528<code>appLogic.input</code>\u5904\u7406\u7528\u6237\u8f93\u5165\u3002\u5982\u679c\u8d85\u8fc7\u4e86\u66f4\u65b0\u6700\u5927\u65f6\u95f4\u95f4\u9694\uff0c\u5219\u8c03\u7528<code>appLogic.update</code>\u66f4\u65b0\u6e38\u620f\u72b6\u6001\u3002\u5982\u679c\u53c8\u8d85\u8fc7\u4e86\u6e32\u67d3\u6700\u5927\u65f6\u95f4\u95f4\u9694\uff08\u6216\u4f9d\u8d56\u4e8e\u5782\u76f4\u540c\u6b65\uff09\uff0c\u5219\u8c03\u7528<code>render.render</code>\u8fdb\u884c\u6e32\u67d3\u3002</p> <p>\u5faa\u73af\u7ed3\u675f\u65f6\u8c03\u7528<code>cleanup</code>\u65b9\u6cd5\u91ca\u653e\u8d44\u6e90\u3002</p> <p>\u6700\u540e\uff0c<code>Engine</code>\u7c7b\u5b8c\u6210\u5982\u4e0b\uff1a</p> <pre><code>public class Engine {\n    ...\n    public void start() {\n        running = true;\n        run();\n    }\n\n    public void stop() {\n        running = false;\n    }\n}\n</code></pre> <p>\u5173\u4e8e\u7ebf\u7a0b\u7684\u7b80\u8981\u8bf4\u660e\u3002GLFW\u8981\u6c42\u4ece\u4e3b\u7ebf\u7a0b\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4e8b\u4ef6\u8f6e\u8be2\u4e5f\u5e94\u8be5\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u3002\u56e0\u6b64\uff0c\u4e0e\u901a\u5e38\u5728\u6e38\u620f\u4e2d\u4f1a\u770b\u5230\u521b\u5efa\u5355\u72ec\u7ebf\u7a0b\u8fd0\u884c\u6e38\u620f\u5faa\u73af\u7684\u65b9\u5f0f\u4e0d\u540c\uff0c\u6211\u4eec\u5c06\u6240\u6709\u5185\u5bb9\u90fd\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728<code>start</code>\u65b9\u6cd5\u4e2d\u6ca1\u6709\u521b\u5efa\u65b0<code>Thread</code>\u7684\u539f\u56e0\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u5c06<code>Main</code>\u7c7b\u7b80\u5316\u4e3a\u5982\u4e0b\u5185\u5bb9\uff1a</p> <pre><code>package org.lwjglb.game;\n\nimport org.lwjglb.engine.*;\nimport org.lwjglb.engine.graph.Render;\nimport org.lwjglb.engine.scene.Scene;\n\npublic class Main implements IAppLogic {\n\n    public static void main(String[] args) {\n        Main main = new Main();\n        Engine gameEng = new Engine(\"chapter-02\", new Window.WindowOptions(), main);\n        gameEng.start();\n    }\n\n    @Override\n    public void cleanup() {\n        // \u76ee\u524d\u8fd9\u91cc\u65e0\u9700\u505a\u4efb\u4f55\u5904\u7406\n    }\n\n    @Override\n    public void init(Window window, Scene scene, Render render) {\n        // \u76ee\u524d\u8fd9\u91cc\u65e0\u9700\u505a\u4efb\u4f55\u5904\u7406\n    }\n\n    @Override\n    public void input(Window window, Scene scene, long diffTimeMillis) {\n        // \u76ee\u524d\u8fd9\u91cc\u65e0\u9700\u505a\u4efb\u4f55\u5904\u7406\n    }\n\n    @Override\n    public void update(Window window, Scene scene, long diffTimeMillis) {\n        // \u76ee\u524d\u8fd9\u91cc\u65e0\u9700\u505a\u4efb\u4f55\u5904\u7406\n    }\n}\n</code></pre> <p>\u6211\u4eec\u53ea\u9700\u5728<code>main</code>\u65b9\u6cd5\u4e2d\u521b\u5efa<code>Engine</code>\u5b9e\u4f8b\u5e76\u542f\u52a8\u5b83\u3002<code>Main</code>\u7c7b\u8fd8\u5b9e\u73b0\u4e86<code>IAppLogic</code>\u63a5\u53e3\uff0c\u76ee\u524d\u63a5\u53e3\u65b9\u6cd5\u90fd\u4e3a\u7a7a\u3002</p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"03-our-first-triangle/","title":"\u7b2c03\u7ae0 - \u4f60\u7684\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\uff08our first triangle\uff09","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u5c4f\u5e55\u6e32\u67d3\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c\u5e76\u4ecb\u7ecd\u53ef\u7f16\u7a0b\u56fe\u5f62\u7ba1\u7ebf\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u9996\u5148\u89e3\u91ca\u5750\u6807\u7cfb\u7684\u57fa\u7840\u6982\u5ff5\uff0c\u5c1d\u8bd5\u7528\u7b80\u5355\u7684\u65b9\u5f0f\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u7840\u6570\u5b66\u6982\u5ff5\uff0c\u4e3a\u540e\u7eed\u7ae0\u8282\u8981\u8ba8\u8bba\u7684\u6280\u672f\u548c\u4e3b\u9898\u5960\u5b9a\u57fa\u7840\u3002\u51fa\u4e8e\u53ef\u8bfb\u6027\u8003\u8651\uff0c\u6211\u4eec\u4f1a\u8fdb\u884c\u4e00\u4e9b\u7b80\u5316\u5904\u7406\uff0c\u53ef\u80fd\u727a\u7272\u90e8\u5206\u7cbe\u786e\u6027\u3002</p> <p>\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"03-our-first-triangle/#_1","title":"\u5750\u6807\u7cfb\u7b80\u4ecb","text":"<p>\u6211\u4eec\u901a\u8fc7\u6307\u5b9a\u5750\u6807\u6765\u5b9a\u4f4d\u7a7a\u95f4\u4e2d\u7684\u7269\u4f53\u3002\u60f3\u8c61\u4e00\u5f20\u5730\u56fe\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u7ecf\u5ea6\u548c\u7eac\u5ea6\u6765\u6807\u8bb0\u5730\u56fe\u4e0a\u7684\u67d0\u4e2a\u70b9\u3002\u4ec5\u9700\u4e00\u5bf9\u6570\u5b57\u5c31\u80fd\u7cbe\u786e\u5b9a\u4f4d\u4e00\u4e2a\u70b9\uff0c\u8fd9\u5bf9\u6570\u5b57\u5c31\u662f\u70b9\u7684\u5750\u6807\uff08\u73b0\u5b9e\u4e2d\u60c5\u51b5\u7a0d\u590d\u6742\uff0c\u56e0\u4e3a\u5730\u56fe\u662f\u5730\u7403\u8fd9\u4e2a\u975e\u5b8c\u7f8e\u692d\u7403\u4f53\u7684\u6295\u5f71\uff0c\u9700\u8981\u66f4\u591a\u6570\u636e\uff0c\u4f46\u8fd9\u4e2a\u7c7b\u6bd4\u5f88\u5408\u9002\uff09\u3002</p> <p>\u5750\u6807\u7cfb\u662f\u4e00\u4e2a\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u5b57\uff08\u5373\u4e00\u4e2a\u6216\u591a\u4e2a\u5206\u91cf\uff09\u6765\u552f\u4e00\u786e\u5b9a\u70b9\u4f4d\u7f6e\u7684\u7cfb\u7edf\u3002\u5b58\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u5750\u6807\u7cfb\uff08\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u3001\u6781\u5750\u6807\u7cfb\u7b49\uff09\uff0c\u4e14\u53ef\u4ee5\u5728\u4e0d\u540c\u5750\u6807\u7cfb\u95f4\u8f6c\u6362\u5750\u6807\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff08Cartesian coordinate system\uff09\u3002</p> <p>\u5728\u4e8c\u7ef4\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e2d\uff0c\u5750\u6807\u7531\u4e24\u4e2a\u6570\u5b57\u5b9a\u4e49\uff0c\u5206\u522b\u8868\u793a\u5230\u4e24\u6761\u5782\u76f4\u8f74\uff08x\u8f74\u548cy\u8f74\uff09\u7684\u6709\u7b26\u53f7\u8ddd\u79bb\u3002</p> <p></p> <p>\u7ee7\u7eed\u4ee5\u5730\u56fe\u4e3a\u4f8b\uff0c\u5750\u6807\u7cfb\u9700\u8981\u5b9a\u4e49\u539f\u70b9\u3002\u5730\u7406\u5750\u6807\u7cfb\u5c06\u539f\u70b9\u8bbe\u5728\u8d64\u9053\u4e0e\u672c\u521d\u5b50\u5348\u7ebf\u7684\u4ea4\u70b9\u3002\u6839\u636e\u539f\u70b9\u8bbe\u7f6e\u7684\u4e0d\u540c\uff0c\u540c\u4e00\u4e2a\u70b9\u7684\u5750\u6807\u4e5f\u4f1a\u4e0d\u540c\u3002\u5750\u6807\u7cfb\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u8f74\u7684\u65b9\u5411\u3002\u4e0a\u56fe\u4e2d\uff0cx\u5750\u6807\u5411\u53f3\u589e\u5927\uff0cy\u5750\u6807\u5411\u4e0a\u589e\u5927\u3002\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u53e6\u4e00\u4e2a\u8f74\u65b9\u5411\u4e0d\u540c\u7684\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff0c\u4ece\u800c\u5f97\u5230\u4e0d\u540c\u7684\u5750\u6807\u3002</p> <p></p> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e9b\u4efb\u610f\u53c2\u6570\uff08\u5982\u539f\u70b9\u548c\u8f74\u65b9\u5411\uff09\u6765\u8d4b\u4e88\u6784\u6210\u5750\u6807\u7684\u6570\u5b57\u5bf9\u7279\u5b9a\u542b\u4e49\u3002\u6211\u4eec\u5c06\u5e26\u6709\u8fd9\u7ec4\u4efb\u610f\u53c2\u6570\u7684\u5750\u6807\u7cfb\u79f0\u4e3a\u5750\u6807\u7a7a\u95f4\uff08coordinate space\uff09\u3002\u8981\u4f7f\u7528\u4e00\u7ec4\u5750\u6807\uff0c\u5fc5\u987b\u5728\u540c\u4e00\u5750\u6807\u7a7a\u95f4\u4e2d\u8fdb\u884c\u64cd\u4f5c\u3002\u597d\u6d88\u606f\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e73\u79fb\u548c\u65cb\u8f6c\u5c06\u5750\u6807\u4ece\u4e00\u4e2a\u7a7a\u95f4\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u7a7a\u95f4\u3002</p> <p>\u5bf9\u4e8e\u4e09\u7ef4\u5750\u6807\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0\u4e00\u4e2az\u8f74\u3002\u4e09\u7ef4\u5750\u6807\u7531\u4e09\u4e2a\u6570\u5b57\uff08x, y, z\uff09\u7ec4\u6210\u3002</p> <p></p> <p>\u4e0e\u4e8c\u7ef4\u7b1b\u5361\u5c14\u5750\u6807\u7a7a\u95f4\u4e00\u6837\uff0c\u5728\u4e09\u7ef4\u5750\u6807\u7a7a\u95f4\u4e2d\u53ea\u8981\u4fdd\u6301\u8f74\u5782\u76f4\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u8f74\u7684\u65b9\u5411\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u53e6\u4e00\u4e2a\u4e09\u7ef4\u5750\u6807\u7a7a\u95f4\u3002</p> <p></p> <p>\u4e09\u7ef4\u5750\u6807\u53ef\u5206\u4e3a\u4e24\u7c7b\uff1a\u5de6\u624b\u7cfb\u548c\u53f3\u624b\u7cfb\u3002\u5982\u4f55\u5224\u65ad\u5c5e\u4e8e\u54ea\u4e00\u7c7b\uff1f\u4f38\u51fa\u4f60\u7684\u624b\uff0c\u7528\u62c7\u6307\u548c\u98df\u6307\u6446\u51fa\"L\"\u5f62\uff0c\u4e2d\u6307\u5e94\u5782\u76f4\u4e8e\u53e6\u5916\u4e24\u6307\u3002\u62c7\u6307\u6307\u5411x\u8f74\u589e\u5927\u7684\u65b9\u5411\uff0c\u98df\u6307\u6307\u5411y\u8f74\u589e\u5927\u7684\u65b9\u5411\uff0c\u4e2d\u6307\u6307\u5411z\u8f74\u589e\u5927\u7684\u65b9\u5411\u3002\u5982\u679c\u80fd\u7528\u5de6\u624b\u505a\u5230\uff0c\u5c31\u662f\u5de6\u624b\u7cfb\uff1b\u82e5\u9700\u7528\u53f3\u624b\uff0c\u5219\u662f\u53f3\u624b\u7cfb\u3002</p> <p> </p> <p>\u4e8c\u7ef4\u5750\u6807\u7a7a\u95f4\u90fd\u662f\u7b49\u4ef7\u7684\uff0c\u56e0\u4e3a\u901a\u8fc7\u65cb\u8f6c\u53ef\u4ee5\u5728\u5b83\u4eec\u4e4b\u95f4\u8f6c\u6362\u3002\u800c\u4e09\u7ef4\u5750\u6807\u7a7a\u95f4\u5219\u4e0d\u5c3d\u76f8\u540c\u3002\u53ea\u6709\u5f53\u4e24\u4e2a\u7a7a\u95f4\u5177\u6709\u76f8\u540c\u7684\u624b\u6027\uff08\u5373\u540c\u4e3a\u5de6\u624b\u7cfb\u6216\u53f3\u624b\u7cfb\uff09\u65f6\uff0c\u624d\u80fd\u901a\u8fc7\u65cb\u8f6c\u8fdb\u884c\u8f6c\u6362\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\uff0c\u63a5\u4e0b\u6765\u8c08\u8c083D\u56fe\u5f62\u5904\u7406\u4e2d\u5e38\u7528\u7684\u672f\u8bed\u3002\u5728\u540e\u6587\u8bb2\u89e3\u5982\u4f55\u6e32\u67d33D\u6a21\u578b\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u4f7f\u7528\u4e86\u4e0d\u540c\u76843D\u5750\u6807\u7a7a\u95f4\uff0c\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e2a\u5750\u6807\u7a7a\u95f4\u90fd\u6709\u5176\u7279\u5b9a\u7684\u4e0a\u4e0b\u6587\u548c\u7528\u9014\u3002\u4e00\u7ec4\u5750\u6807\u9664\u975e\u6709\u6240\u6307\u4ee3\uff0c\u5426\u5219\u6beb\u65e0\u610f\u4e49\u3002\u5f53\u4f60\u770b\u5230\u5750\u6807\uff0840.438031, -3.676626\uff09\u65f6\uff0c\u53ef\u80fd\u4e0d\u77e5\u6240\u4e91\u3002\u4f46\u5982\u679c\u6211\u8bf4\u8fd9\u662f\u5730\u7406\u5750\u6807\uff08\u7eac\u5ea6\u548c\u7ecf\u5ea6\uff09\uff0c\u4f60\u5c31\u4f1a\u77e5\u9053\u8fd9\u662f\u9a6c\u5fb7\u91cc\u67d0\u5730\u7684\u5750\u6807\u3002</p> <p>\u52a0\u8f7d3D\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u7ec43D\u5750\u6807\u3002\u8fd9\u4e9b\u5750\u6807\u8868\u793a\u5728\u79f0\u4e3a\u7269\u4f53\u5750\u6807\u7a7a\u95f4\u76843D\u5750\u6807\u7a7a\u95f4\u4e2d\u3002\u56fe\u5f62\u8bbe\u8ba1\u5e08\u5728\u521b\u5efa\u8fd9\u4e9b3D\u6a21\u578b\u65f6\uff0c\u5e76\u4e0d\u77e5\u6653\u6a21\u578b\u5c06\u663e\u793a\u5728\u4ec0\u4e483D\u573a\u666f\u4e2d\uff0c\u56e0\u6b64\u53ea\u80fd\u7528\u4ec5\u4e0e\u6a21\u578b\u76f8\u5173\u7684\u5750\u6807\u7a7a\u95f4\u6765\u5b9a\u4e49\u5750\u6807\u3002</p> <p>\u7ed8\u52363D\u573a\u666f\u65f6\uff0c\u6240\u67093D\u5bf9\u8c61\u90fd\u5c06\u76f8\u5bf9\u4e8e\u6240\u8c13\u7684\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u3002\u6211\u4eec\u9700\u8981\u5c063D\u7269\u4f53\u7a7a\u95f4\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u3002\u6709\u4e9b\u5bf9\u8c61\u9700\u8981\u65cb\u8f6c\u3001\u62c9\u4f38\u3001\u653e\u5927\u6216\u5e73\u79fb\u624d\u80fd\u57283D\u573a\u666f\u4e2d\u6b63\u786e\u663e\u793a\u3002</p> <p>\u6211\u4eec\u8fd8\u9700\u8981\u9650\u5236\u663e\u793a\u76843D\u7a7a\u95f4\u8303\u56f4\uff0c\u8fd9\u7c7b\u4f3c\u4e8e\u57283D\u7a7a\u95f4\u4e2d\u79fb\u52a8\u6444\u50cf\u673a\u3002\u7136\u540e\u9700\u8981\u5c06\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u8f6c\u6362\u4e3a\u6444\u50cf\u673a\u6216\u89c6\u56fe\u7a7a\u95f4\u5750\u6807\u3002\u6700\u540e\uff0c\u8fd9\u4e9b\u5750\u6807\u9700\u8981\u8f6c\u6362\u4e3a\u5c4f\u5e55\u5750\u6807\uff082D\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c063D\u89c6\u56fe\u5750\u6807\u6295\u5f71\u52302D\u5c4f\u5e55\u5750\u6807\u7a7a\u95f4\u3002</p> <p>\u4e0b\u56fe\u5c55\u793a\u4e86OpenGL\u7684\u5750\u6807\uff08z\u8f74\u5782\u76f4\u4e8e\u5c4f\u5e55\uff09\uff0c\u5750\u6807\u8303\u56f4\u5728-1\u5230+1\u4e4b\u95f4\u3002</p> <p></p>"},{"location":"03-our-first-triangle/#_2","title":"\u4f60\u7684\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62","text":"<p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u5b66\u4e60\u4f7f\u7528OpenGL\u6e32\u67d3\u573a\u666f\u7684\u8fc7\u7a0b\u3002\u5982\u679c\u4f60\u719f\u6089\u65e7\u7248OpenGL\uff08\u5373\u56fa\u5b9a\u529f\u80fd\u7ba1\u7ebf\uff09\uff0c\u53ef\u80fd\u4f1a\u5728\u672c\u7ae0\u7ed3\u675f\u65f6\u7591\u60d1\u4e3a\u4f55\u9700\u8981\u5982\u6b64\u590d\u6742\u3002\u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u5728\u5c4f\u5e55\u4e0a\u7ed8\u5236\u4e00\u4e2a\u7b80\u5355\u5f62\u72b6\u4e0d\u5e94\u9700\u8981\u8fd9\u4e48\u591a\u6982\u5ff5\u548c\u4ee3\u7801\u3002\u8ba9\u6211\u7ed9\u6709\u8fd9\u79cd\u60f3\u6cd5\u7684\u8bfb\u8005\u4e00\u4e2a\u5efa\u8bae\uff1a\u73b0\u4ee3openGL\u5b9e\u9645\u4e0a\u66f4\u7b80\u5355\u4e14\u7075\u6d3b\u5f97\u591a\u3002\u4f60\u53ea\u9700\u7ed9\u5b83\u4e00\u4e2a\u673a\u4f1a\uff0c\u73b0\u4ee3OpenGL\u8ba9\u4f60\u53ef\u4ee5\u4e00\u6b21\u53ea\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u5e76\u4ee5\u66f4\u7b26\u5408\u903b\u8f91\u7684\u65b9\u5f0f\u7ec4\u7ec7\u4ee3\u7801\u548c\u6d41\u7a0b\u3002</p> <p>\u5c063D\u8868\u793a\u7ed8\u5236\u52302D\u5c4f\u5e55\u4e0a\u7684\u6b65\u9aa4\u5e8f\u5217\u79f0\u4e3a\u56fe\u5f62\u7ba1\u7ebf\uff08graphics pipeline\uff09\u3002\u65e9\u671f\u7248\u672c\u7684OpenGL\u91c7\u7528\u79f0\u4e3a\u56fa\u5b9a\u529f\u80fd\u7ba1\u7ebf\uff08fixed-function pipeline\uff09\u7684\u6a21\u578b\u3002\u8be5\u6a21\u578b\u5728\u6e32\u67d3\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4e00\u7ec4\u56fa\u5b9a\u64cd\u4f5c\u6b65\u9aa4\u3002\u7a0b\u5e8f\u5458\u53d7\u9650\u4e8e\u6bcf\u4e2a\u6b65\u9aa4\u53ef\u7528\u7684\u51fd\u6570\u96c6\uff0c\u53ea\u80fd\u8bbe\u7f6e\u4e00\u4e9b\u53c2\u6570\u8fdb\u884c\u8c03\u6574\u3002\u56e0\u6b64\uff0c\u53ef\u5e94\u7528\u7684\u6548\u679c\u548c\u64cd\u4f5c\u53d7API\u672c\u8eab\u9650\u5236\uff08\u4f8b\u5982\"\u8bbe\u7f6e\u96fe\u6548\"\u6216\"\u6dfb\u52a0\u5149\u6e90\"\uff0c\u4f46\u8fd9\u4e9b\u51fd\u6570\u7684\u5b9e\u73b0\u662f\u56fa\u5b9a\u7684\uff0c\u65e0\u6cd5\u66f4\u6539\uff09\u3002</p> <p>\u56fe\u5f62\u7ba1\u7ebf\u7531\u4ee5\u4e0b\u6b65\u9aa4\u7ec4\u6210\uff1a</p> \u4e2d\u6587\u82f1\u6587 <p></p> <p></p> <p>OpenGL 2.0\u5f15\u5165\u4e86\u53ef\u7f16\u7a0b\u7ba1\u7ebf\uff08programmable pipeline\uff09\u7684\u6982\u5ff5\u3002\u5728\u8be5\u6a21\u578b\u4e2d\uff0c\u7ec4\u6210\u56fe\u5f62\u7ba1\u7ebf\u7684\u4e0d\u540c\u6b65\u9aa4\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e00\u7ec4\u79f0\u4e3a\u7740\u8272\u5668\uff08shaders\uff09\u7684\u7279\u5b9a\u7a0b\u5e8f\u6765\u63a7\u5236\u6216\u7f16\u7a0b\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u7b80\u5316\u7248\u7684OpenGL\u53ef\u7f16\u7a0b\u7ba1\u7ebf\uff1a</p> \u4e2d\u6587\u82f1\u6587 <p></p> <p></p> <p>\u6e32\u67d3\u5f00\u59cb\u65f6\uff0c\u4ee5\u9876\u70b9\u7f13\u51b2\u533a\uff08Vertex Buffers\uff09\u5f62\u5f0f\u7684\u9876\u70b9\u5217\u8868\u4f5c\u4e3a\u8f93\u5165\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u662f\u9876\u70b9\uff1f\u9876\u70b9\u662f\u53ef\u7528\u4e8e\u6e32\u67d3\u573a\u666f\u7684\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u3002\u73b0\u5728\u4f60\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u63cf\u8ff02D\u62163D\u7a7a\u95f4\u4e2d\u70b9\u7684\u7ed3\u6784\u3002\u5982\u4f55\u57283D\u7a7a\u95f4\u4e2d\u63cf\u8ff0\u4e00\u4e2a\u70b9\uff1f\u901a\u8fc7\u6307\u5b9a\u5176x\u3001y\u548cz\u5750\u6807\u3002\u4ec0\u4e48\u662f\u9876\u70b9\u7f13\u51b2\u533a\uff1f\u9876\u70b9\u7f13\u51b2\u533a\u662f\u53e6\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u6253\u5305\u4e86\u9700\u8981\u6e32\u67d3\u7684\u6240\u6709\u9876\u70b9\uff08\u4f7f\u7528\u9876\u70b9\u6570\u7ec4\uff09\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4fe1\u606f\u63d0\u4f9b\u7ed9\u56fe\u5f62\u7ba1\u7ebf\u4e2d\u7684\u7740\u8272\u5668\u3002</p> <p>\u8fd9\u4e9b\u9876\u70b9\u7531\u9876\u70b9\u7740\u8272\u5668\uff08vertex shader\uff09\u5904\u7406\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u5728\u5c4f\u5e55\u7a7a\u95f4\u4e2d\u7684\u6295\u5f71\u4f4d\u7f6e\u3002\u8be5\u7740\u8272\u5668\u8fd8\u53ef\u4ee5\u751f\u6210\u4e0e\u989c\u8272\u6216\u7eb9\u7406\u76f8\u5173\u7684\u5176\u4ed6\u8f93\u51fa\uff0c\u4f46\u5176\u4e3b\u8981\u76ee\u6807\u662f\u5c06\u9876\u70b9\u6295\u5f71\u5230\u5c4f\u5e55\u7a7a\u95f4\uff0c\u5373\u751f\u6210\u70b9\u3002</p> <p>\u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff08geometry processing stage\uff09\u5c06\u9876\u70b9\u7740\u8272\u5668\u8f6c\u6362\u540e\u7684\u9876\u70b9\u8fde\u63a5\u8d77\u6765\u5f62\u6210\u4e09\u89d2\u5f62\u3002\u5b83\u901a\u8fc7\u8003\u8651\u9876\u70b9\u5b58\u50a8\u7684\u987a\u5e8f\u5e76\u4f7f\u7528\u4e0d\u540c\u6a21\u578b\u5bf9\u5b83\u4eec\u8fdb\u884c\u5206\u7ec4\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u4e3a\u4ec0\u4e48\u662f\u4e09\u89d2\u5f62\uff1f\u4e09\u89d2\u5f62\u5c31\u50cf\u662f\u56fe\u5f62\u5361\u7684\u57fa\u672c\u5de5\u4f5c\u5355\u5143\u3002\u5b83\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u53ef\u4ee5\u7ec4\u5408\u548c\u53d8\u6362\u4ee5\u6784\u5efa\u590d\u6742\u76843D\u573a\u666f\u3002\u6b64\u9636\u6bb5\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7279\u5b9a\u7740\u8272\u5668\u6765\u5206\u7ec4\u9876\u70b9\u3002</p> <p>\u5149\u6805\u5316\u9636\u6bb5\uff08rasterization stage\uff09\u63a5\u6536\u524d\u4e00\u9636\u6bb5\u751f\u6210\u7684\u4e09\u89d2\u5f62\uff0c\u5bf9\u5176\u8fdb\u884c\u88c1\u526a\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u50cf\u7d20\u5927\u5c0f\u7684\u7247\u6bb5\u3002\u8fd9\u4e9b\u7247\u6bb5\u5728\u7247\u6bb5\u5904\u7406\u9636\u6bb5\uff08fragment processing stage\uff09\u7531\u7247\u6bb5\u7740\u8272\u5668\uff08fragment shader\uff09\u4f7f\u7528\uff0c\u901a\u8fc7\u4e3a\u6bcf\u4e2a\u7247\u6bb5\u5206\u914d\u6700\u7ec8\u989c\u8272\u6765\u751f\u6210\u50cf\u7d20\uff0c\u8fd9\u4e9b\u989c\u8272\u5c06\u88ab\u5199\u5165\u5e27\u7f13\u51b2\u533a\uff08framebuffer\uff09\u3002\u5e27\u7f13\u51b2\u533a\u662f\u56fe\u5f62\u7ba1\u7ebf\u7684\u6700\u7ec8\u7ed3\u679c\u3002\u5b83\u4fdd\u5b58\u5e94\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u7684\u6bcf\u4e2a\u50cf\u7d20\u7684\u503c\u3002</p> <p>\u8bf7\u8bb0\u4f4f\uff0c3D\u5361\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u5e76\u884c\u5316\u4e0a\u8ff0\u6240\u6709\u64cd\u4f5c\u3002\u8f93\u5165\u6570\u636e\u88ab\u5e76\u884c\u5904\u7406\u4ee5\u751f\u6210\u6700\u7ec8\u573a\u666f\u3002</p> <p>\u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u5199\u7b2c\u4e00\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u3002\u7740\u8272\u5668\u4f7f\u7528\u57fa\u4e8eANSI C\u7684GLSL\u8bed\u8a00\u7f16\u5199\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u5728<code>resources\\shaders</code>\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\"<code>scene.vert</code>\"\u7684\u6587\u4ef6\uff08\u6269\u5c55\u540d\u8868\u793a\u9876\u70b9\u7740\u8272\u5668\uff09\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>#version 330\n\nlayout (location=0) in vec3 inPosition;\n\nvoid main()\n{\n    gl_Position = vec4(inPosition, 1.0);\n}\n</code></pre> <p>\u7b2c\u4e00\u884c\u662f\u6307\u4ee4\uff0c\u58f0\u660e\u6211\u4eec\u4f7f\u7528\u7684GLSL\u8bed\u8a00\u7248\u672c\u3002\u4e0b\u8868\u5217\u51fa\u4e86GLSL\u7248\u672c\u3001\u5bf9\u5e94\u7684OpenGL\u7248\u672c\u53ca\u5e94\u4f7f\u7528\u7684\u6307\u4ee4\uff08\u7ef4\u57fa\u767e\u79d1\uff1ahttps://en.wikipedia.org/wiki/OpenGL_Shading_Language#Versions\uff09\u3002</p> GLSL\u7248\u672c OpenGL\u7248\u672c \u7740\u8272\u5668\u9884\u5904\u7406\u5668 1.10.59 2.0 #version 110 1.20.8 2.1 #version 120 1.30.10 3.0 #version 130 1.40.08 3.1 #version 140 1.50.11 3.2 #version 150 3.30.6 3.3 #version 330 4.00.9 4.0 #version 400 4.10.6 4.1 #version 410 4.20.11 4.2 #version 420 4.30.8 4.3 #version 430 4.40 4.4 #version 440 4.50 4.5 #version 450 <p>\u7b2c\u4e8c\u884c\u6307\u5b9a\u4e86\u8be5\u7740\u8272\u5668\u7684\u8f93\u5165\u683c\u5f0f\u3002OpenGL\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u662f\u4efb\u4f55\u6211\u4eec\u60f3\u8981\u7684\u5f62\u5f0f\uff0c\u5373\u8be5\u8bed\u8a00\u4e0d\u5f3a\u5236\u4f60\u4f20\u9012\u5177\u6709\u9884\u5b9a\u4e49\u8bed\u4e49\u7684\u7279\u5b9a\u6570\u636e\u7ed3\u6784\u3002\u4ece\u7740\u8272\u5668\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u671f\u671b\u63a5\u6536\u5e26\u6709\u6570\u636e\u7684\u7f13\u51b2\u533a\u3002\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u4f4d\u7f6e\u3001\u5e26\u6709\u9644\u52a0\u4fe1\u606f\u7684\u4f4d\u7f6e\u6216\u4efb\u4f55\u6211\u4eec\u60f3\u8981\u7684\u5185\u5bb9\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u4ece\u9876\u70b9\u7740\u8272\u5668\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u53ea\u662f\u63a5\u6536\u4e00\u4e2a\u6d6e\u70b9\u6570\u6570\u7ec4\u3002\u5f53\u6211\u4eec\u586b\u5145\u7f13\u51b2\u533a\u65f6\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u5c06\u7531\u7740\u8272\u5668\u5904\u7406\u7684\u7f13\u51b2\u533a\u5757\u3002</p> <p>\u56e0\u6b64\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5c06\u8be5\u5757\u8f6c\u6362\u4e3a\u5bf9\u6211\u4eec\u6709\u610f\u4e49\u7684\u5185\u5bb9\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u8868\u793a\u4ece\u4f4d\u7f6e0\u5f00\u59cb\uff0c\u671f\u671b\u63a5\u6536\u4e00\u4e2a\u75313\u4e2a\u5c5e\u6027\uff08x, y, z\uff09\u7ec4\u6210\u7684\u5411\u91cf\u3002</p> <p>\u7740\u8272\u5668\u6709\u4e00\u4e2a\u50cf\u4efb\u4f55\u5176\u4ed6C\u7a0b\u5e8f\u4e00\u6837\u7684main\u5757\uff0c\u5728\u672c\u4f8b\u4e2d\u975e\u5e38\u7b80\u5355\u3002\u5b83\u53ea\u662f\u5c06\u63a5\u6536\u5230\u7684\u4f4d\u7f6e\u8fd4\u56de\u5230\u8f93\u51fa\u53d8\u91cf<code>gl_Position</code>\u4e2d\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u53d8\u6362\u3002\u4f60\u73b0\u5728\u53ef\u80fd\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e09\u4e2a\u5c5e\u6027\u7684\u5411\u91cf\u88ab\u8f6c\u6362\u4e3a\u56db\u4e2a\u5c5e\u6027\u7684\u5411\u91cf\uff08vec4\uff09\u3002\u8fd9\u662f\u56e0\u4e3a<code>gl_Position</code>\u671f\u671b\u7ed3\u679c\u4ee5vec4\u683c\u5f0f\u8868\u793a\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u7684\u662f\u9f50\u6b21\u5750\u6807\uff08homogeneous coordinates\uff09\u3002\u5373\u5b83\u671f\u671b\u7684\u5f62\u5f0f\u4e3a\uff08x, y, z, w\uff09\uff0c\u5176\u4e2dw\u4ee3\u8868\u4e00\u4e2a\u989d\u5916\u7684\u7ef4\u5ea6\u3002\u4e3a\u4ec0\u4e48\u8981\u589e\u52a0\u4e00\u4e2a\u7ef4\u5ea6\uff1f\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u4f60\u4f1a\u770b\u5230\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u5927\u591a\u6570\u64cd\u4f5c\u90fd\u57fa\u4e8e\u5411\u91cf\u548c\u77e9\u9635\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u989d\u5916\u7684\u7ef4\u5ea6\uff0c\u5176\u4e2d\u4e00\u4e9b\u64cd\u4f5c\u5c31\u65e0\u6cd5\u7ec4\u5408\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u65e0\u6cd5\u7ec4\u5408\u65cb\u8f6c\u548c\u5e73\u79fb\u64cd\u4f5c\u3002\uff08\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u8fd9\u4e2a\u989d\u5916\u7684\u7ef4\u5ea6\u5141\u8bb8\u6211\u4eec\u7ec4\u5408\u4eff\u5c04\u548c\u7ebf\u6027\u53d8\u6362\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u9605\u8bfbFletcher Dunn\u548cIan Parberry\u7684\u4f18\u79c0\u8457\u4f5c\u300a3D Math Primer for Graphics and Game Development\u300b\u6765\u4e86\u89e3\u66f4\u591a\u3002\uff09</p> <p>\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b\u7b2c\u4e00\u4e2a\u7247\u6bb5\u7740\u8272\u5668\u3002\u6211\u4eec\u5c06\u5728resources\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\"<code>scene.frag</code>\"\u7684\u6587\u4ef6\uff08\u6269\u5c55\u540d\u8868\u793a\u7247\u6bb5\u7740\u8272\u5668\uff09\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>#version 330\n\nout vec4 fragColor;\n\nvoid main()\n{\n    fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n</code></pre> <p>\u7ed3\u6784\u4e0e\u9876\u70b9\u7740\u8272\u5668\u975e\u5e38\u76f8\u4f3c\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u4e3a\u6bcf\u4e2a\u7247\u6bb5\u8bbe\u7f6e\u56fa\u5b9a\u989c\u8272\u3002\u7b2c\u4e8c\u884c\u5b9a\u4e49\u4e86\u8f93\u51fa\u53d8\u91cf\uff0c\u5e76\u8bbe\u7f6e\u4e3avec4 fragColor\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u7740\u8272\u5668\uff0c\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u5462\uff1f\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>ShaderProgram</code>\u7684\u65b0\u7c7b\uff0c\u5b83\u57fa\u672c\u4e0a\u63a5\u6536\u4e0d\u540c\u7740\u8272\u5668\u6a21\u5757\uff08\u9876\u70b9\u3001\u7247\u6bb5\uff09\u7684\u6e90\u4ee3\u7801\uff0c\u7f16\u8bd1\u5b83\u4eec\u5e76\u5c06\u5b83\u4eec\u94fe\u63a5\u5728\u4e00\u8d77\u4ee5\u751f\u6210\u7740\u8272\u5668\u7a0b\u5e8f\u3002 \u4ee5\u4e0b\u662f\u9700\u8981\u9075\u5faa\u7684\u6b65\u9aa4\u5e8f\u5217\uff1a 1.    \u521b\u5efa\u4e00\u4e2aOpenGL\u7a0b\u5e8f\u3002 2.    \u52a0\u8f7d\u7740\u8272\u5668\u7a0b\u5e8f\u6a21\u5757\uff08\u9876\u70b9\u6216\u7247\u6bb5\u7740\u8272\u5668\uff09\u3002 3.    \u4e3a\u6bcf\u4e2a\u7740\u8272\u5668\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7740\u8272\u5668\u6a21\u5757\u5e76\u6307\u5b9a\u5176\u7c7b\u578b\uff08\u9876\u70b9\u3001\u7247\u6bb5\uff09\u3002 4.    \u7f16\u8bd1\u7740\u8272\u5668\u3002 5.    \u5c06\u7740\u8272\u5668\u9644\u52a0\u5230\u7a0b\u5e8f\u4e2d\u3002 6.    \u94fe\u63a5\u7a0b\u5e8f\u3002</p> <p>\u6700\u540e\uff0c\u7740\u8272\u5668\u7a0b\u5e8f\u5c06\u88ab\u52a0\u8f7d\u5230GPU\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u7528\u6807\u8bc6\u7b26\uff08\u7a0b\u5e8f\u6807\u8bc6\u7b26\uff09\u6765\u4f7f\u7528\u5b83\u3002</p> \u65e0\u6ce8\u91ca\u6709\u6ce8\u91ca <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjgl.opengl.GL30;\nimport org.lwjglb.engine.Utils;\n\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class ShaderProgram {\n\n    private final int programId;\n\n    public ShaderProgram(List&lt;ShaderModuleData&gt; shaderModuleDataList) {\n        programId = glCreateProgram();\n        if (programId == 0) {\n            throw new RuntimeException(\"Could not create Shader\");\n        }\n\n        List&lt;Integer&gt; shaderModules = new ArrayList&lt;&gt;();\n        shaderModuleDataList.forEach(s -&gt; shaderModules.add(createShader(Utils.readFile(s.shaderFile), s.shaderType)));\n\n        link(shaderModules);\n    }\n\n    public void bind() {\n        glUseProgram(programId);\n    }\n\n    public void cleanup() {\n        unbind();\n        if (programId != 0) {\n            glDeleteProgram(programId);\n        }\n    }\n\n    protected int createShader(String shaderCode, int shaderType) {\n        int shaderId = glCreateShader(shaderType);\n        if (shaderId == 0) {\n            throw new RuntimeException(\"Error creating shader. Type: \" + shaderType);\n        }\n\n        glShaderSource(shaderId, shaderCode);\n        glCompileShader(shaderId);\n\n        if (glGetShaderi(shaderId, GL_COMPILE_STATUS) == 0) {\n            throw new RuntimeException(\"Error compiling Shader code: \" + glGetShaderInfoLog(shaderId, 1024));\n        }\n\n        glAttachShader(programId, shaderId);\n\n        return shaderId;\n    }\n\n    public int getProgramId() {\n        return programId;\n    }\n\n    private void link(List&lt;Integer&gt; shaderModules) {\n        glLinkProgram(programId);\n        if (glGetProgrami(programId, GL_LINK_STATUS) == 0) {\n            throw new RuntimeException(\"Error linking Shader code: \" + glGetProgramInfoLog(programId, 1024));\n        }\n\n        shaderModules.forEach(s -&gt; glDetachShader(programId, s));\n        shaderModules.forEach(GL30::glDeleteShader);\n    }\n\n    public void unbind() {\n        glUseProgram(0);\n    }\n\n    public void validate() {\n        glValidateProgram(programId);\n        if (glGetProgrami(programId, GL_VALIDATE_STATUS) == 0) {\n            throw new RuntimeException(\"Error validating Shader code: \" + glGetProgramInfoLog(programId, 1024));\n        }\n    }\n\n    public record ShaderModuleData(String shaderFile, int shaderType) {\n    }\n}\n</code></pre> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjgl.opengl.GL30;\nimport org.lwjglb.engine.Utils;\n\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class ShaderProgram {\n\n    private final int programId;//\u5b58\u50a8\u7740\u8272\u5668\u7a0b\u5e8fid\n\n    public ShaderProgram(List&lt;ShaderModuleData&gt; shaderModuleDataList) {\n        //\u63a5\u6536\u7740\u8272\u5668\u6a21\u5757\u6570\u636e\u5217\u8868(\u6587\u4ef6\u8def\u5f84\u548c\u7c7b\u578b)\n        programId = glCreateProgram();\n        if (programId == 0) {\n            throw new RuntimeException(\"Could not create Shader\");\n        }\n\n        List&lt;Integer&gt; shaderModules = new ArrayList&lt;&gt;();//\u521b\u5efa\u65b0\u7684OpenGL\u7740\u8272\u5668\u7a0b\u5e8f\n        //\u68c0\u67e5\u65b0\u521b\u5efa\u7684OpenGL\u7740\u8272\u5668\u7a0b\u5e8f\u9519\u8bef\n        shaderModuleDataList.forEach(s -&gt; shaderModules.add(createShader(Utils.readFile(s.shaderFile), s.shaderType)));\n\n        link(shaderModules);\n    }\n\n    //\u6fc0\u6d3b\u6b64\u7740\u8272\u5668\u7a0b\u5e8f\u7528\u4e8e\u6e32\u67d3\n    public void bind() {\n        glUseProgram(programId);\n    }\n\n    //\u91ca\u653e\u8d44\u6e90\uff1a\u89e3\u7ed1\u5e76\u5220\u9664\u7a0b\u5e8f\n    public void cleanup() {\n        unbind();\n        if (programId != 0) {\n            glDeleteProgram(programId);\n        }\n    }\n\n    //\u521b\u5efa\u5355\u4e2a\u7740\u8272\u5668(\u9876\u70b9\u3001\u7247\u6bb5\u7b49)\n    protected int createShader(String shaderCode, int shaderType) {\n        //\u521b\u5efa\u7740\u8272\u5668\u5e76\u68c0\u67e5\u9519\u8bef\n        int shaderId = glCreateShader(shaderType);\n        if (shaderId == 0) {\n            throw new RuntimeException(\"Error creating shader. Type: \" + shaderType);\n        }\n\n        //\u8bbe\u7f6e\u7740\u8272\u5668\u6e90\u4ee3\u7801\u5e76\u7f16\u8bd1\n        glShaderSource(shaderId, shaderCode);\n        glCompileShader(shaderId);\n\n        //\u68c0\u67e5\u7f16\u8bd1\u72b6\u6001\uff0c\u5931\u8d25\u65f6\u83b7\u53d6\u9519\u8bef\u65e5\u5fd7\n        if (glGetShaderi(shaderId, GL_COMPILE_STATUS) == 0) {\n            throw new RuntimeException(\"Error compiling Shader code: \" + glGetShaderInfoLog(shaderId, 1024));\n        }\n\n        //\u5c06\u7740\u8272\u5668\u9644\u52a0\u5230\u7a0b\u5e8f\u5e76\u8fd4\u56de\u5176ID\n        glAttachShader(programId, shaderId);\n        return shaderId;\n    }\n\n    public int getProgramId() {\n        return programId;\n    }\n\n    //\u5c06\u6240\u6709\u9644\u52a0\u7684\u7740\u8272\u5668\u94fe\u63a5\u6210\u5b8c\u6574\u7a0b\u5e8f\n    private void link(List&lt;Integer&gt; shaderModules) {\n        //\u94fe\u63a5\u7a0b\u5e8f\u5e76\u68c0\u67e5\u9519\u8bef\n        glLinkProgram(programId);\n        if (glGetProgrami(programId, GL_LINK_STATUS) == 0) {\n            throw new RuntimeException(\"Error linking Shader code: \" + glGetProgramInfoLog(programId, 1024));\n        }\n\n        //\u94fe\u63a5\u540e\u6e05\u7406\u7740\u8272\u5668\u5bf9\u8c61\n        shaderModules.forEach(s -&gt; glDetachShader(programId, s));\n        shaderModules.forEach(GL30::glDeleteShader);\n    }\n\n    //\u94fe\u63a5\u540e\u89e3\u7ed1\u7740\u8272\u5668\u5bf9\u8c61\n    public void unbind() {\n        glUseProgram(0);\n    }\n\n    //\u9a8c\u8bc1\u7740\u8272\u5668\u7a0b\u5e8f\u7684\u6709\u6548\u6027\n    public void validate() {\n        glValidateProgram(programId);\n        if (glGetProgrami(programId, GL_VALIDATE_STATUS) == 0) {\n            throw new RuntimeException(\"Error validating Shader code: \" + glGetProgramInfoLog(programId, 1024));\n        }\n    }\n\n    public record ShaderModuleData(String shaderFile, int shaderType) {\n    }\n}\n</code></pre> <p><code>ShaderProgram</code>\u7684\u6784\u9020\u51fd\u6570\u63a5\u6536\u4e00\u4e2a<code>ShaderModuleData</code>\u5b9e\u4f8b\u5217\u8868\uff0c\u8fd9\u4e9b\u5b9e\u4f8b\u5b9a\u4e49\u4e86\u7740\u8272\u5668\u6a21\u5757\u7c7b\u578b\uff08\u9876\u70b9\u3001\u7247\u6bb5\u7b49\uff09\u548c\u5305\u542b\u7740\u8272\u5668\u6a21\u5757\u4ee3\u7801\u7684\u6e90\u6587\u4ef6\u8def\u5f84\u3002\u6784\u9020\u51fd\u6570\u9996\u5148\u901a\u8fc7\u7f16\u8bd1\u6bcf\u4e2a\u7740\u8272\u5668\u6a21\u5757\uff08\u901a\u8fc7\u8c03\u7528<code>createShader</code>\u65b9\u6cd5\uff09\u521b\u5efa\u4e00\u4e2a\u65b0\u7684OpenGL\u7740\u8272\u5668\u7a0b\u5e8f\uff0c\u6700\u540e\u5c06\u5b83\u4eec\u5168\u90e8\u94fe\u63a5\u5728\u4e00\u8d77\uff08\u901a\u8fc7\u8c03\u7528<code>link</code>\u65b9\u6cd5\uff09\u3002\u4e00\u65e6\u7740\u8272\u5668\u7a0b\u5e8f\u88ab\u94fe\u63a5\uff0c\u7f16\u8bd1\u540e\u7684\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u5c31\u53ef\u4ee5\u88ab\u91ca\u653e\uff08\u901a\u8fc7\u8c03\u7528<code>glDetachShader</code>\uff09\u3002</p> <p><code>validate</code>\u65b9\u6cd5\u8c03\u7528\u4e86<code>glValidateProgram</code>\u51fd\u6570\u3002\u6b64\u51fd\u6570\u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\u76ee\u7684\uff0c\u5f53\u4f60\u7684\u6e38\u620f\u8fdb\u5165\u751f\u4ea7\u9636\u6bb5\u65f6\u4e0d\u5e94\u4f7f\u7528\u5b83\u3002\u8be5\u65b9\u6cd5\u5c1d\u8bd5\u9a8c\u8bc1\u7740\u8272\u5668\u5728\u5f53\u524dOpenGL\u72b6\u6001\u4e0b\u662f\u5426\u6b63\u786e\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5373\u4f7f\u7740\u8272\u5668\u662f\u6b63\u786e\u7684\uff0c\u7531\u4e8e\u5f53\u524d\u72b6\u6001\u4e0d\u8db3\u4ee5\u8fd0\u884c\u7740\u8272\u5668\uff08\u67d0\u4e9b\u6570\u636e\u53ef\u80fd\u5c1a\u672a\u4e0a\u4f20\uff09\uff0c\u9a8c\u8bc1\u6709\u65f6\u4e5f\u4f1a\u5931\u8d25\u3002\u4f60\u5e94\u5728\u6240\u6709\u5fc5\u9700\u7684\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u6b63\u786e\u7ed1\u5b9a\u65f6\u8c03\u7528\u5b83\uff08\u6700\u597d\u5728\u6267\u884c\u4efb\u4f55\u7ed8\u5236\u8c03\u7528\u4e4b\u524d\uff09\u3002</p> <p><code>ShaderProgram</code>\u8fd8\u63d0\u4f9b\u4e86\u7528\u4e8e\u6e32\u67d3\u65f6\u4f7f\u7528\u6b64\u7a0b\u5e8f\u7684\u65b9\u6cd5\uff0c\u5373\u7ed1\u5b9a\u5b83\uff0c\u53e6\u4e00\u4e2a\u65b9\u6cd5\u7528\u4e8e\u89e3\u7ed1\uff08\u5f53\u6211\u4eec\u5b8c\u6210\u65f6\uff09\uff0c\u6700\u540e\u662f\u4e00\u4e2acleanup\u65b9\u6cd5\uff0c\u7528\u4e8e\u5728\u4e0d\u518d\u9700\u8981\u65f6\u91ca\u653e\u6240\u6709\u8d44\u6e90\u3002</p> <p>\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>Utils</code>\u7684\u5b9e\u7528\u7c7b\uff0c\u5728\u672c\u4f8b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u516c\u5171\u65b9\u6cd5\uff0c\u7528\u4e8e\u5c06\u6587\u4ef6\u52a0\u8f7d\u5230<code>String</code>\u4e2d\uff1a</p> <pre><code>package org.lwjglb.engine;\n\nimport java.io.IOException;\nimport java.nio.file.*;\n\npublic class Utils {\n\n    private Utils() {\n    }\n\n    public static String readFile(String filePath) {\n        String str;\n        try {\n            str = new String(Files.readAllBytes(Paths.get(filePath)));\n        } catch (IOException excp) {\n            throw new RuntimeException(\"Error reading file [\" + filePath + \"]\", excp);\n        }\n        return str;\n    }\n}\n</code></pre> <p>\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u65b0\u7c7b<code>Scene</code>\uff0c\u5b83\u5c06\u4fdd\u5b58\u6211\u4eec\u76843D\u573a\u666f\u7684\u503c\uff0c\u5982\u6a21\u578b\u3001\u706f\u5149\u7b49\u3002\u76ee\u524d\u5b83\u53ea\u5b58\u50a8\u6211\u4eec\u8981\u7ed8\u5236\u7684\u6a21\u578b\u7684\u7f51\u683c\uff08\u9876\u70b9\u96c6\uff09\u3002\u4ee5\u4e0b\u662f\u8be5\u7c7b\u7684\u6e90\u4ee3\u7801\uff1a</p> \u65e0\u6ce8\u91ca\u6709\u6ce8\u91ca <pre><code>package org.lwjglb.engine.scene;\n\nimport org.lwjglb.engine.graph.Mesh;\nimport java.util.*;\npublic class Scene {\n\n    private Map&lt;String, Mesh&gt; meshMap;\n\n    public Scene() {\n        meshMap = new HashMap&lt;&gt;();\n    }\n\n    public void addMesh(String meshId, Mesh mesh) {\n        meshMap.put(meshId, mesh);\n    }\n\n    public void cleanup() {\n        meshMap.values().forEach(Mesh::cleanup);\n    }\n\n    public Map&lt;String, Mesh&gt; getMeshMap() {\n        return meshMap;\n    }\n}\n</code></pre> <pre><code>package org.lwjglb.engine.scene;\n\nimport org.lwjglb.engine.graph.Mesh;\nimport java.util.*;\npublic class Scene {\n    //\u4f7f\u7528Map\u6765\u5b58\u50a8\u573a\u666f\u4e2d\u7684\u6240\u6709\u7f51\u683c\u5bf9\u8c61\n    //\u952e(String): \u7f51\u683c\u7684\u552f\u4e00\u6807\u8bc6\u7b26(ID)\n    //\u503c(Mesh): \u5b9e\u9645\u7684\u7f51\u683c\u5bf9\u8c61\n    private Map&lt;String, Mesh&gt; meshMap;\n\n    public Scene() {\n        meshMap = new HashMap&lt;&gt;();\n    }\n\n    public void addMesh(String meshId, Mesh mesh) {\n        meshMap.put(meshId, mesh);\n    }\n\n    public void cleanup() {\n        meshMap.values().forEach(Mesh::cleanup);\n    }\n\n    public Map&lt;String, Mesh&gt; getMeshMap() {\n        return meshMap;\n    }\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u5b83\u53ea\u662f\u5c06<code>Mesh</code>\u5b9e\u4f8b\u5b58\u50a8\u5728Map\u4e2d\uff0c\u7a0d\u540e\u7528\u4e8e\u7ed8\u5236\u3002\u4f46\u4ec0\u4e48\u662f<code>Mesh</code>\uff1f\u5b83\u662f\u6211\u4eec\u5c06\u9876\u70b9\u6570\u636e\u52a0\u8f7d\u5230GPU\u4e2d\u4ee5\u4f9b\u6e32\u67d3\u7684\u65b9\u5f0f\u3002\u5728\u8be6\u7ec6\u63cf\u8ff0<code>Mesh</code>\u7c7b\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u5728<code>Main</code>\u7c7b\u4e2d\u4f7f\u7528\u5b83\uff1a <pre><code>public class Main implements IAppLogic {\n\n    public static void main(String[] args) {\n        Main main = new Main();\n        Engine gameEng = new Engine(\"chapter-03\", new Window.WindowOptions(), main);\n        gameEng.start();\n    }\n    ...\n    @Override\n    public void init(Window window, Scene scene, Render render) {\n        float[] positions = new float[]{\n                0.0f, 0.5f, 0.0f,\n                -0.5f, -0.5f, 0.0f,\n                0.5f, -0.5f, 0.0f\n        };\n        Mesh mesh = new Mesh(positions, 3);\n        scene.addMesh(\"triangle\", mesh);\n    }\n    ...\n}\n</code></pre></p> <p>\u5728<code>init</code>\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6d6e\u70b9\u6570\u6570\u7ec4\uff0c\u5176\u4e2d\u5305\u542b\u4e09\u89d2\u5f62\u9876\u70b9\u7684\u5750\u6807\u3002\u5982\u4f60\u6240\u89c1\uff0c\u8be5\u6570\u7ec4\u4e2d\u6ca1\u6709\u7ed3\u6784\uff0c\u6211\u4eec\u53ea\u662f\u5c06\u6240\u6709\u5750\u6807\u8f6c\u50a8\u5728\u90a3\u91cc\u3002\u76ee\u524d\uff0cOpenGL\u65e0\u6cd5\u77e5\u9053\u8be5\u6570\u636e\u7684\u7ed3\u6784\u3002\u5b83\u53ea\u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\u5e8f\u5217\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u6211\u4eec\u5750\u6807\u7cfb\u4e2d\u7684\u4e09\u89d2\u5f62\u3002</p> <p></p> <p>\u5b9a\u4e49\u8be5\u6570\u636e\u7ed3\u6784\u5e76\u5c06\u5176\u52a0\u8f7d\u5230GPU\u4e2d\u7684\u7c7b\u662f<code>Mesh</code>\u7c7b\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \u65e0\u6ce8\u91ca\u6709\u6ce8\u91ca <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjgl.opengl.GL30;\nimport org.lwjgl.system.MemoryStack;\n\nimport java.nio.FloatBuffer;\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class Mesh {\n\n    private int numVertices;\n    private int vaoId;\n    private List&lt;Integer&gt; vboIdList;\n\n    public Mesh(float[] positions, int numVertices) {\n        this.numVertices = numVertices;\n        vboIdList = new ArrayList&lt;&gt;();\n\n        vaoId = glGenVertexArrays();\n        glBindVertexArray(vaoId);\n\n        // Positions VBO\n        int vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer positionsBuffer = MemoryUtil.memCallocFloat(positions.length);\n        positionsBuffer.put(0, positions);\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, positionsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(0);\n        glVertexAttribPointer(0, 3, GL_FLOAT, false, 0, 0);\n\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n        glBindVertexArray(0);\n\n        MemoryUtil.memFree(positionsBuffer);\n    }\n\n    public void cleanup() {\n        vboIdList.forEach(GL30::glDeleteBuffers);\n        glDeleteVertexArrays(vaoId);\n    }\n\n    public int getNumVertices() {\n        return numVertices;\n    }\n\n    public final int getVaoId() {\n        return vaoId;\n    }\n}\n</code></pre> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjgl.opengl.GL30;\nimport org.lwjgl.system.MemoryStack;\n\nimport java.nio.FloatBuffer;\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class Mesh {\n\n    private int numVertices;//\u5b58\u50a8\u7f51\u683c\u4e2d\u9876\u70b9\u7684\u6570\u91cf\n    private int vaoId;//\u5b58\u50a8OpenGL\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61(VAO)\u7684ID\n    private List&lt;Integer&gt; vboIdList;//\u5b58\u50a8\u6240\u6709\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(VBO)ID\u7684\u5217\u8868\n\n    //\u6784\u9020\u51fd\u6570\u63a5\u6536\u9876\u70b9\u4f4d\u7f6e\u6570\u7ec4\u548c\u9876\u70b9\u6570\u91cf\n    public Mesh(float[] positions, int numVertices) {\n        //\u521d\u59cb\u5316\u9876\u70b9\u6570\u91cf\u548cVBO\u5217\u8868\n        this.numVertices = numVertices;\n        vboIdList = new ArrayList&lt;&gt;();\n\n        //\u751f\u6210\u5e76\u7ed1\u5b9aVAO\n        vaoId = glGenVertexArrays();\n        glBindVertexArray(vaoId);\n\n        //\u751f\u6210VBO\u5e76\u6dfb\u52a0\u5230\u5217\u8868\n        int vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        //\u521b\u5efa\u5e76\u586b\u5145\u9876\u70b9\u4f4d\u7f6e\u7f13\u51b2\n        FloatBuffer positionsBuffer = MemoryUtil.memCallocFloat(positions.length);\n        positionsBuffer.put(0, positions);\n        //\u7ed1\u5b9aVBO\u5e76\u4e0a\u4f20\u6570\u636e\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, positionsBuffer, GL_STATIC_DRAW);\n        //\u542f\u7528\u9876\u70b9\u5c5e\u6027\u5e76\u8bbe\u7f6e\u5c5e\u6027\u6307\u9488(\u4f4d\u7f6e\u5c5e\u6027)\n        glEnableVertexAttribArray(0);\n        glVertexAttribPointer(0, 3, GL_FLOAT, false, 0, 0);\n\n        //\u89e3\u7ed1VBO\u548cVAO\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n        glBindVertexArray(0);\n\n        //\u91ca\u653e\u4e34\u65f6\u7f13\u51b2\n        MemoryUtil.memFree(positionsBuffer);\n    }\n\n    //\u6e05\u7406\u65b9\u6cd5\uff0c\u5220\u9664\u6240\u6709VBO\u548cVAO\n    public void cleanup() {\n        vboIdList.forEach(GL30::glDeleteBuffers);\n        glDeleteVertexArrays(vaoId);\n    }\n\n    //\u83b7\u53d6\u9876\u70b9\u6570\u91cf\u7684\u65b9\u6cd5\n    public int getNumVertices() {\n        return numVertices;\n    }\n\n    //\u83b7\u53d6VAO ID\u7684\u65b9\u6cd5\n    public final int getVaoId() {\n        return vaoId;\n    }\n}\n</code></pre> <p>\u6211\u4eec\u73b0\u5728\u4ecb\u7ecd\u4e24\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Objects\uff0cVAOs\uff09\u548c\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Objects\uff0cVBOs\uff09\u3002\u5982\u679c\u4f60\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u8ff7\u5931\u4e86\u65b9\u5411\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u6700\u7ec8\u6240\u505a\u7684\u662f\u5c06\u5efa\u6a21\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u7684\u5bf9\u8c61\u7684\u6570\u636e\u53d1\u9001\u5230\u663e\u5361\u5185\u5b58\u4e2d\u3002\u5f53\u6211\u4eec\u5b58\u50a8\u5b83\u65f6\uff0c\u4f1a\u83b7\u5f97\u4e00\u4e2a\u6807\u8bc6\u7b26\uff0c\u7a0d\u540e\u5728\u7ed8\u5236\u65f6\u7528\u5b83(\u6807\u8bc6\u7b26)\u6765\u5f15\u7528\u5b83(\u5bf9\u8c61\u6570\u636e)\u3002</p> <p>\u8ba9\u6211\u4eec\u9996\u5148\u4ece\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08VBOs\uff09\u5f00\u59cb\u3002VBO\u53ea\u662f\u5b58\u50a8\u5728\u663e\u5361\u5185\u5b58\u4e2d\u7684\u5185\u5b58\u7f13\u51b2\u533a\uff0c\u7528\u4e8e\u5b58\u50a8\u9876\u70b9\u3002\u8fd9\u662f\u6211\u4eec\u4f20\u8f93\u5efa\u6a21\u4e09\u89d2\u5f62\u7684\u6d6e\u70b9\u6570\u6570\u7ec4\u7684\u5730\u65b9\u3002\u5982\u524d\u6240\u8ff0\uff0cOpenGL\u5bf9\u6211\u4eec\u7684\u6570\u636e\u7ed3\u6784\u4e00\u65e0\u6240\u77e5\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u4fdd\u5b58\u5750\u6807\uff0c\u8fd8\u53ef\u4ee5\u4fdd\u5b58\u5176\u4ed6\u4fe1\u606f\uff0c\u5982\u7eb9\u7406\u3001\u989c\u8272\u7b49\u3002\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08VAOs\uff09\u662f\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2aVBO\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e9bVBO\u901a\u5e38\u79f0\u4e3a\u5c5e\u6027\u5217\u8868\u3002\u6bcf\u4e2a\u5c5e\u6027\u5217\u8868\u53ef\u4ee5\u4fdd\u5b58\u4e00\u79cd\u7c7b\u578b\u7684\u6570\u636e\uff1a\u4f4d\u7f6e\u3001\u989c\u8272\u3001\u7eb9\u7406\u7b49\u3002\u4f60\u53ef\u4ee5\u81ea\u7531\u5730\u5728\u6bcf\u4e2a\u69fd\u4e2d\u5b58\u50a8\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u5185\u5bb9\u3002</p> <p>VAO\u5c31\u50cf\u4e00\u4e2a\u5305\u88c5\u5668\uff0c\u5b83\u5206\u7ec4\u4e86\u5c06\u8981\u5b58\u50a8\u5728\u663e\u5361\u4e2d\u7684\u6570\u636e\u7684\u4e00\u7ec4\u5b9a\u4e49\u3002\u5f53\u6211\u4eec\u521b\u5efaVAO\u65f6\uff0c\u4f1a\u83b7\u5f97\u4e00\u4e2a\u6807\u8bc6\u7b26\u3002\u6211\u4eec\u4f7f\u7528\u8be5\u6807\u8bc6\u7b26\u6765\u6e32\u67d3\u5b83\u53ca\u5176\u5305\u542b\u7684\u5143\u7d20\uff0c\u901a\u8fc7\u6211\u4eec\u5728\u521b\u5efa\u65f6\u6307\u5b9a\u7684\u5b9a\u4e49\u3002</p> <p>\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u4e0a\u9762\u7684\u4ee3\u7801\u3002\u6211\u4eec\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u521b\u5efaVAO\uff08\u901a\u8fc7\u8c03\u7528<code>glGenVertexArrays</code>\u51fd\u6570\uff09\u5e76\u7ed1\u5b9a\u5b83\uff08\u901a\u8fc7\u8c03\u7528<code>glBindVertexArray</code>\u51fd\u6570\uff09\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efaVBO\uff08\u901a\u8fc7\u8c03\u7528<code>glGenBuffers</code>\uff09\u5e76\u5c06\u6570\u636e\u653e\u5165\u5176\u4e2d\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u6d6e\u70b9\u6570\u6570\u7ec4\u5b58\u50a8\u5230<code>FloatBuffer</code>\u4e2d\u3002\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u4e0e\u57fa\u4e8eC\u7684OpenGL\u5e93\u63a5\u53e3\uff0c\u56e0\u6b64\u5fc5\u987b\u5c06\u6d6e\u70b9\u6570\u6570\u7ec4\u8f6c\u6362\u4e3a\u53ef\u7531\u5e93\u7ba1\u7406\u7684\u5185\u5bb9\u3002</p> <p>\u6211\u4eec\u5c06\u4f7f\u7528<code>MemoryUtil</code>\u7c7b\u5728\u5806\u5916\u5185\u5b58\u4e2d\u521b\u5efa\u7f13\u51b2\u533a\uff0c\u4ee5\u4fbfOpenGL\u5e93\u53ef\u4ee5\u8bbf\u95ee\u5b83\u3002\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7<code>put</code>\u65b9\u6cd5\u5b58\u50a8\u4e86\u6570\u636e\u3002\u8bf7\u8bb0\u4f4f\uff0cJava\u5bf9\u8c61\u662f\u5206\u914d\u5728\u5806\u4e2d\u7684\u3002\u5806\u662fJVM\u8fdb\u7a0b\u5185\u5b58\u4e2d\u9884\u7559\u7684\u4e00\u5927\u5757\u5185\u5b58\u3002\u5806\u4e2d\u5b58\u50a8\u7684\u5185\u5b58\u65e0\u6cd5\u88ab\u672c\u5730\u4ee3\u7801\u8bbf\u95ee\uff08JNI\uff0c\u5373\u5141\u8bb8\u4eceJava\u8c03\u7528\u672c\u5730\u4ee3\u7801\u7684\u673a\u5236\uff0c\u4e0d\u5141\u8bb8\u8fd9\u6837\u505a\uff09\u3002\u5728Java\u548c\u672c\u5730\u4ee3\u7801\u4e4b\u95f4\u5171\u4eab\u5185\u5b58\u6570\u636e\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u76f4\u63a5\u5728Java\u4e2d\u5206\u914d\u5185\u5b58\u3002</p> <p>\u5982\u679c\u4f60\u6765\u81ea\u4ee5\u524d\u7684LWJGL\u7248\u672c\uff0c\u5f3a\u8c03\u51e0\u4e2a\u4e3b\u9898\u5f88\u91cd\u8981\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u6211\u4eec\u4e0d\u4f7f\u7528<code>BufferUtils</code>\u5b9e\u7528\u7c7b\u6765\u521b\u5efa\u7f13\u51b2\u533a\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u4f7f\u7528<code>MemoryUtil</code>\u7c7b\u3002\u8fd9\u662f\u56e0\u4e3a<code>BufferUtils</code>\u6548\u7387\u4e0d\u9ad8\uff0c\u4ec5\u4e3a\u4e86\u5411\u540e\u517c\u5bb9\u800c\u4fdd\u7559\u3002\u76f8\u53cd\uff0cLWJGL 3\u63d0\u51fa\u4e86\u4e24\u79cd\u7f13\u51b2\u533a\u7ba1\u7406\u65b9\u6cd5\uff1a</p> <ul> <li>\u81ea\u52a8\u7ba1\u7406\u7684\u7f13\u51b2\u533a\uff0c\u5373\u7531\u5783\u573e\u6536\u96c6\u5668\u81ea\u52a8\u6536\u96c6\u7684\u7f13\u51b2\u533a\u3002\u8fd9\u4e9b\u7f13\u51b2\u533a\u4e3b\u8981\u7528\u4e8e\u77ed\u671f\u64cd\u4f5c\uff0c\u6216\u7528\u4e8e\u4f20\u8f93\u5230GPU\u4e14\u4e0d\u9700\u8981\u5b58\u5728\u4e8e\u8fdb\u7a0b\u5185\u5b58\u4e2d\u7684\u6570\u636e\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528<code>org.lwjgl.system.MemoryStack</code>\u7c7b\u5b9e\u73b0\u7684\u3002</li> <li>\u624b\u52a8\u7ba1\u7406\u7684\u7f13\u51b2\u533a\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u5728\u5b8c\u6210\u540e\u5c0f\u5fc3\u91ca\u653e\u5b83\u4eec\u3002\u8fd9\u4e9b\u7f13\u51b2\u533a\u7528\u4e8e\u957f\u65f6\u95f4\u64cd\u4f5c\u6216\u5927\u91cf\u6570\u636e\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528<code>MemoryUtil</code>\u7c7b\u5b9e\u73b0\u7684\u3002</li> </ul> <p>\u4f60\u53ef\u4ee5\u5728\u6b64\u5904\u67e5\u9605\u8be6\u7ec6\u4fe1\u606f\uff1ahttps://blog.lwjgl.org/memory-management-in-lwjgl-3/\u3002</p> <p>\u5728\u672c\u4f8b\u4e2d\uff0c\u4f4d\u7f6e\u6570\u636e\u662f\u77ed\u671f\u7684\uff0c\u4e00\u65e6\u6211\u4eec\u52a0\u8f7d\u4e86\u6570\u636e\uff0c\u5c31\u5b8c\u6210\u4e86\u8be5\u7f13\u51b2\u533a\u3002\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u7528<code>org.lwjgl.system.MemoryStack</code>\u7c7b\u5417\uff1f\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff08<code>MemoryUtil</code>\u7c7b\uff09\u7684\u539f\u56e0\u662fLWJGL\u7684\u5806\u6808\u662f\u6709\u9650\u7684\u3002\u5982\u679c\u4f60\u6700\u7ec8\u52a0\u8f7d\u4e86\u5927\u91cf\u6a21\u5f0f\uff0c\u53ef\u80fd\u4f1a\u6d88\u8017\u6240\u6709\u53ef\u7528\u7a7a\u95f4\u5e76\u83b7\u5f97\"\u5806\u6808\u7a7a\u95f4\u4e0d\u8db3\"\u5f02\u5e38\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u7f3a\u70b9\u662f\u6211\u4eec\u9700\u8981\u5728\u5b8c\u6210\u540e\u624b\u52a8\u91ca\u653e\u5185\u5b58\uff0c\u901a\u8fc7\u8c03\u7528<code>MemoryUtil.memFree</code>\u3002</p> <p>\u4e4b\u540e\uff0c\u6211\u4eec\u7ed1\u5b9aVBO\uff08\u901a\u8fc7\u8c03\u7528<code>glBindBuffer</code>\uff09\u5e76\u5c06\u6570\u636e\u52a0\u8f7d\u5230\u5176\u4e2d\uff08\u901a\u8fc7\u8c03\u7528<code>glBufferData</code>\u51fd\u6570\uff09\u3002\u73b0\u5728\u662f\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u6570\u636e\u7684\u7ed3\u6784\u5e76\u5c06\u5176\u5b58\u50a8\u5728VAO\u7684\u4e00\u4e2a\u5c5e\u6027\u5217\u8868\u4e2d\u3002\u8fd9\u662f\u901a\u8fc7\u4ee5\u4e0b\u884c\u5b8c\u6210\u7684\u3002</p> <pre><code>glVertexAttribPointer(0, 3, GL_FLOAT, false, 0, 0);\n</code></pre> <p>\u53c2\u6570\u662f\uff1a</p> <ul> <li>index\uff1a\u6307\u5b9a\u7740\u8272\u5668\u671f\u671b\u6b64\u6570\u636e\u7684\u4f4d\u7f6e\u3002</li> <li>size\uff1a\u6307\u5b9a\u6bcf\u4e2a\u9876\u70b9\u5c5e\u6027\u7684\u7ec4\u4ef6\u6570\uff08\u4ece1\u52304\uff09\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f20\u90123D\u5750\u6807\uff0c\u56e0\u6b64\u5e94\u4e3a3\u3002</li> <li>type\uff1a\u6307\u5b9a\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u7ec4\u4ef6\u7684\u7c7b\u578b\uff0c\u672c\u4f8b\u4e2d\u4e3afloat\u3002</li> <li>normalized\uff1a\u6307\u5b9a\u503c\u662f\u5426\u5e94\u88ab\u6807\u51c6\u5316\u3002</li> <li>stride\uff1a\u6307\u5b9a\u8fde\u7eed\u901a\u7528\u9876\u70b9\u5c5e\u6027\u4e4b\u95f4\u7684\u5b57\u8282\u504f\u79fb\u91cf\u3002\uff08\u6211\u4eec\u7a0d\u540e\u4f1a\u89e3\u91ca\uff09\u3002</li> <li>offset\uff1a\u6307\u5b9a\u7f13\u51b2\u533a\u4e2d\u7b2c\u4e00\u4e2a\u7ec4\u4ef6\u7684\u504f\u79fb\u91cf\u3002</li> </ul> <p>\u5b8c\u6210VBO\u548cVAO\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u7ed1\u5b83\u4eec\uff08\u5c06\u5b83\u4eec\u7ed1\u5b9a\u52300\uff09\u3002</p> <p>\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u81ea\u52a8\u7ba1\u7406\u7684\u7f13\u51b2\u533a\uff0c\u4e00\u65e6<code>try</code> / <code>catch</code>\u5757\u5b8c\u6210\uff0c\u7f13\u51b2\u533a\u5c31\u4f1a\u81ea\u52a8\u6e05\u7406\u3002</p> <p><code>Mesh</code>\u7c7b\u901a\u8fc7<code>cleanup</code>\u65b9\u6cd5\u5b8c\u6210\uff0c\u8be5\u65b9\u6cd5\u57fa\u672c\u4e0a\u91ca\u653eVAO\u548cVBO\uff0c\u4ee5\u53ca\u4e00\u4e9bgetter\u65b9\u6cd5\u6765\u83b7\u53d6\u7f51\u683c\u7684\u9876\u70b9\u6570\u548cVAO\u7684id\u3002\u5728\u6e32\u67d3\u8fd9\u4e9b\u5143\u7d20\u65f6\uff0c\u6211\u4eec\u5c06\u5728\u4f7f\u7528\u7ed8\u5236\u64cd\u4f5c\u65f6\u4f7f\u7528VAO id\u3002</p> <p>\u73b0\u5728\u8ba9\u6211\u4eec\u5c06\u6240\u6709\u5185\u5bb9\u4ed8\u8bf8\u5b9e\u8df5\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>SceneRender</code>\u7684\u65b0\u7c7b\uff0c\u5b83\u5c06\u6267\u884c\u573a\u666f\u4e2d\u6240\u6709\u6a21\u578b\u7684\u6e32\u67d3\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjglb.engine.Window;\nimport org.lwjglb.engine.scene.Scene;\n\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class SceneRender {\n\n    private ShaderProgram shaderProgram;\n\n    public SceneRender() {\n        List&lt;ShaderProgram.ShaderModuleData&gt; shaderModuleDataList = new ArrayList&lt;&gt;();\n        shaderModuleDataList.add(new ShaderProgram.ShaderModuleData(\"resources/shaders/scene.vert\", GL_VERTEX_SHADER));\n        shaderModuleDataList.add(new ShaderProgram.ShaderModuleData(\"resources/shaders/scene.frag\", GL_FRAGMENT_SHADER));\n        shaderProgram = new ShaderProgram(shaderModuleDataList);\n    }\n\n    public void cleanup() {\n        shaderProgram.cleanup();\n    }\n\n    public void render(Scene scene) {\n        shaderProgram.bind();\n\n        scene.getMeshMap().values().forEach(mesh -&gt; {\n                    glBindVertexArray(mesh.getVaoId());\n                    glDrawArrays(GL_TRIANGLES, 0, mesh.getNumVertices());\n                }\n        );\n\n        glBindVertexArray(0);\n\n        shaderProgram.unbind();\n    }\n}\n</code></pre></p> <p>\u5982\u4f60\u6240\u89c1\uff0c\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a<code>ShaderModuleData</code>\u5b9e\u4f8b\uff08\u4e00\u4e2a\u7528\u4e8e\u9876\u70b9\u7740\u8272\u5668\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u7247\u6bb5\u7740\u8272\u5668\uff09\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a\u7740\u8272\u5668\u7a0b\u5e8f\u3002\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a<code>cleanup</code>\u65b9\u6cd5\u6765\u91ca\u653e\u8d44\u6e90\uff08\u5728\u672c\u4f8b\u4e2d\u662f\u7740\u8272\u5668\u7a0b\u5e8f\uff09\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6267\u884c\u7ed8\u5236\u7684<code>render</code>\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u9996\u5148\u901a\u8fc7\u8c03\u7528\u5176<code>bind</code>\u65b9\u6cd5\u4f7f\u7528\u7740\u8272\u5668\u7a0b\u5e8f\u3002\u7136\u540e\uff0c\u6211\u4eec\u8fed\u4ee3\u5b58\u50a8\u5728<code>Scene</code>\u5b9e\u4f8b\u4e2d\u7684\u7f51\u683c\uff0c\u7ed1\u5b9a\u5b83\u4eec\uff08\u901a\u8fc7\u8c03\u7528<code>glBindVertexArray</code>\u51fd\u6570\uff09\u5e76\u7ed8\u5236VAO\u7684\u9876\u70b9\uff08\u901a\u8fc7\u8c03\u7528<code>glDrawArrays</code>\u51fd\u6570\uff09\u3002\u6700\u540e\uff0c\u6211\u4eec\u89e3\u7ed1VAO\u548c\u7740\u8272\u5668\u7a0b\u5e8f\u4ee5\u6062\u590d\u72b6\u6001\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0<code>Render</code>\u7c7b\u4ee5\u4f7f\u7528<code>SceneRender</code>\u7c7b\u3002 <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjgl.opengl.GL;\nimport org.lwjglb.engine.Window;\nimport org.lwjglb.engine.scene.Scene;\n\npublic class Render {\n\n    private SceneRender sceneRender;\n\n    public Render() {\n        GL.createCapabilities();\n        sceneRender = new SceneRender();\n    }\n\n    public void cleanup() {\n        sceneRender.cleanup();\n    }\n\n    public void render(Window window, Scene scene) {\n        ...\n        glViewport(0, 0, window.getWidth(), window.getHeight());\n        sceneRender.render(scene);\n    }\n}\n</code></pre></p> <p><code>render</code>\u65b9\u6cd5\u9996\u5148\u6e05\u9664\u5e27\u7f13\u51b2\u533a\u5e76\u5c06\u89c6\u53e3\uff08\u901a\u8fc7\u8c03\u7528<code>glViewport</code>\u65b9\u6cd5\uff09\u8bbe\u7f6e\u4e3a\u7a97\u53e3\u5c3a\u5bf8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u6e32\u67d3\u533a\u57df\u8bbe\u7f6e\u4e3a\u8fd9\u4e9b\u5c3a\u5bf8\uff08\u8fd9\u4e0d\u9700\u8981\u6bcf\u5e27\u90fd\u505a\uff0c\u4f46\u5982\u679c\u6211\u4eec\u60f3\u652f\u6301\u7a97\u53e3\u8c03\u6574\u5927\u5c0f\uff0c\u53ef\u4ee5\u8fd9\u6837\u505a\u4ee5\u9002\u5e94\u6bcf\u5e27\u4e2d\u7684\u6f5c\u5728\u53d8\u5316\uff09\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u9700\u5728<code>SceneRender</code>\u5b9e\u4f8b\u4e0a\u8c03\u7528<code>render</code>\u65b9\u6cd5\u3002\u5c31\u662f\u8fd9\u6837\uff01\u5982\u679c\u4f60\u4ed4\u7ec6\u6309\u7167\u6b65\u9aa4\u64cd\u4f5c\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a</p> <p></p> <p>\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\uff01\u4f60\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u8fd9\u4e0d\u4f1a\u8fdb\u5165\u6e38\u620f\u524d\u5341\u540d\uff0c\u4f60\u5b8c\u5168\u6b63\u786e\u3002\u4f60\u53ef\u80fd\u8fd8\u8ba4\u4e3a\u7ed8\u5236\u4e00\u4e2a\u65e0\u804a\u7684\u4e09\u89d2\u5f62\u5de5\u4f5c\u91cf\u592a\u5927\u4e86\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u6b63\u5728\u4ecb\u7ecd\u5173\u952e\u6982\u5ff5\uff0c\u5e76\u4e3a\u505a\u66f4\u590d\u6742\u7684\u4e8b\u60c5\u51c6\u5907\u57fa\u7840\u67b6\u6784\u3002\u8bf7\u8010\u5fc3\u5e76\u7ee7\u7eed\u9605\u8bfb\u3002</p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"04-Render-a-quad/","title":"\u6e32\u67d3\u4e00\u4e2a\u56db\u8fb9\u5f62(Render a quad)","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u8ba8\u8bbaOpenGL\u662f\u5982\u4f55\u6e32\u67d3\u5185\u5bb9\u7684\u3002\u6211\u4eec\u5c06\u7ed8\u5236\u4e00\u4e2a\u56db\u8fb9\u5f62\u800c\u4e0d\u662f\u4e09\u89d2\u5f62\uff0c\u5e76\u5411\u7f51\u683c\uff08Mesh\uff09\u8bbe\u7f6e\u989d\u5916\u7684\u6570\u636e\uff0c\u6bd4\u5982\u7ed9\u6bcf\u4e2a\u9876\u70b9\u8bbe\u7f6e\u4e00\u4e2a\u989c\u8272\u3002</p> <p>\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"04-Render-a-quad/#_1","title":"\u7f51\u683c\u4fee\u6539","text":"<p>\u6b63\u5982\u6211\u4eec\u4e00\u5f00\u59cb\u6240\u8bf4\u7684\uff0c\u6211\u4eec\u60f3\u8981\u7ed8\u5236\u4e00\u4e2a\u56db\u8fb9\u5f62\u3002\u4e00\u4e2a\u56db\u8fb9\u5f62\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e24\u4e2a\u4e09\u89d2\u5f62\u6784\u5efa\u51fa\u6765\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6bcf\u4e2a\u4e09\u89d2\u5f62\u90fd\u662f\u7531\u4e09\u4e2a\u9876\u70b9\u7ec4\u6210\u7684\u3002\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u7531\u9876\u70b9V1\u3001V2\u548cV4\u6784\u6210\uff08\u6a59\u8272\u7684\u90a3\u4e2a\uff09\uff0c\u7b2c\u4e8c\u4e2a\u4e09\u89d2\u5f62\u7531\u9876\u70b9V4\u3001V2\u548cV3\u6784\u6210\uff08\u7eff\u8272\u7684\u90a3\u4e2a\uff09\u3002\u9876\u70b9\u662f\u4ee5\u9006\u65f6\u9488\u987a\u5e8f\u6307\u5b9a\u7684\uff0c\u56e0\u6b64\u4f20\u9012\u7684\u6d6e\u70b9\u6570\u7ec4\u5c06\u662f[V1, V2, V4, V4, V2, V3]\u3002\u56e0\u6b64\uff0c\u8be5\u5f62\u72b6\u7684\u6570\u636e\u53ef\u4ee5\u662f\uff1a</p> <pre><code>float[] positions = new float[] {\n    -0.5f,  0.5f, 0.0f,\n    -0.5f, -0.5f, 0.0f,\n     0.5f,  0.5f, 0.0f,\n     0.5f,  0.5f, 0.0f,\n    -0.5f, -0.5f, 0.0f,\n     0.5f, -0.5f, 0.0f,\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u4ecd\u7136\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\u3002\u4e3a\u4e86\u8868\u793a\u56db\u8fb9\u5f62\uff0c\u6211\u4eec\u91cd\u590d\u4e86\u9876\u70b9\u5750\u6807\u3002\u6211\u4eec\u628aV2\u548cV4\u7684\u5750\u6807\u4f20\u9012\u4e86\u4e24\u6b21\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u5c0f\u5f62\u72b6\u6765\u8bf4\u4f3c\u4e4e\u95ee\u9898\u4e0d\u5927\uff0c\u4f46\u60f3\u8c61\u4e00\u4e0b\u4e00\u4e2a\u66f4\u52a0\u590d\u6742\u7684\u4e09\u7ef4\u6a21\u578b\u3002\u6211\u4eec\u5c06\u4f1a\u591a\u6b21\u91cd\u590d\u5750\u6807\uff0c\u5c31\u50cf\u4e0b\u9762\u7684\u56fe\u6240\u793a\uff08\u5176\u4e2d\u4e00\u4e2a\u9876\u70b9\u53ef\u4ee5\u88ab\u516d\u4e2a\u4e09\u89d2\u5f62\u5171\u4eab\uff09\u3002</p> <p></p> <p>\u6700\u7ec8\u6211\u4eec\u5c06\u9700\u8981\u66f4\u591a\u7684\u5185\u5b58\uff0c\u56e0\u4e3a\u5b58\u5728\u8fd9\u4e9b\u91cd\u590d\u7684\u4fe1\u606f\u3002\u4f46\u66f4\u5927\u7684\u95ee\u9898\u4e0d\u5728\u4e8e\u6b64\uff0c\u6700\u5927\u7684\u95ee\u9898\u662f\u6211\u4eec\u5c06\u5728\u7740\u8272\u5668\u4e2d\u4e3a\u76f8\u540c\u7684\u9876\u70b9\u91cd\u590d\u5904\u7406\u3002\u8fd9\u65f6\u5019\uff0c\u7d22\u5f15\u7f13\u51b2\u5c31\u80fd\u6d3e\u4e0a\u7528\u573a\u4e86\u3002\u4e3a\u4e86\u7ed8\u5236\u56db\u8fb9\u5f62\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6307\u5b9a\u6bcf\u4e2a\u9876\u70b9\u4e00\u6b21\uff1aV1\u3001V2\u3001V3\u3001V4\u3002\u6bcf\u4e2a\u9876\u70b9\u5728\u6570\u7ec4\u4e2d\u90fd\u6709\u4e00\u4e2a\u4f4d\u7f6e\u3002V1\u7684\u4f4d\u7f6e\u662f0\uff0cV2\u662f1\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff1a</p> V1 V2 V3 V4 0 1 2 3 <p>\u7136\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u5f15\u7528\u5b83\u4eec\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u6765\u6307\u5b9a\u7ed8\u5236\u8fd9\u4e9b\u9876\u70b9\u7684\u987a\u5e8f\uff1a</p> 0 1 3 3 1 2 V1 V2 V4 V4 V2 V3 <p>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fee\u6539\u6211\u4eec\u7684<code>Mesh</code>\u7c7b\uff0c\u6765\u63a5\u53d7\u53e6\u4e00\u4e2a\u53c2\u6570\uff1a\u7d22\u5f15\u6570\u7ec4\uff0c\u5e76\u4e14\u73b0\u5728\u8981\u7ed8\u5236\u7684\u9876\u70b9\u6570\u91cf\u5c06\u662f\u7d22\u5f15\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u8fd8\u8981\u8bb0\u4f4f\uff0c\u73b0\u5728\u6211\u4eec\u4ec5\u4f7f\u7528\u4e09\u4e2a\u6d6e\u70b9\u6570\u6765\u8868\u793a\u4e00\u4e2a\u9876\u70b9\u7684\u4f4d\u7f6e\uff0c\u4f46\u6211\u4eec\u8fd8\u60f3\u4e3a\u6bcf\u4e2a\u9876\u70b9\u5173\u8054\u989c\u8272\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u8fd9\u6837\u4fee\u6539<code>Mesh</code>\u7c7b\uff1a</p> \u65e0\u6ce8\u91ca\u6709\u6ce8\u91ca <pre><code>public class Mesh {\n    ...\n    public Mesh(float[] positions, float[] colors, int[] indices) {\n        numVertices = indices.length;\n        ...\n        // \u989c\u8272VBO\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer colorsBuffer = MemoryUtil.memCallocFloat(colors.length);\n        colorsBuffer.put(0, colors);\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, colorsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(1);\n        glVertexAttribPointer(1, 3, GL_FLOAT, false, 0, 0);\n\n        // \u7d22\u5f15VBO\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        IntBuffer indicesBuffer = MemoryUtil.memCallocInt(indices.length);\n        indicesBuffer.put(0, indices);\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indicesBuffer, GL_STATIC_DRAW);\n        ...\n        MemoryUtil.memFree(colorsBuffer);\n        MemoryUtil.memFree(indicesBuffer);\n    }\n    ...\n}           \n</code></pre> <pre><code>public class Mesh {\n    ...\n    public Mesh(float[] positions, float[] colors, int[] indices) {\n        numVertices = indices.length;//\u8bbe\u7f6e\u9876\u70b9\u6570\u91cf\n        ...\n        // \u989c\u8272VBO\n        vboId = glGenBuffers();//\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u533a\u5bf9\u8c61ID\u5e76\u5b58\u50a8\u5728vboId\u4e2d\n        vboIdList.add(vboId);\n        FloatBuffer colorsBuffer = MemoryUtil.memCallocFloat(colors.length);//\u5206\u914d\u4e00\u4e2a\u8db3\u591f\u5927\u7684FloatBuffer\u6765\u5b58\u50a8\u989c\u8272\u6570\u636e\n        colorsBuffer.put(0, colors);//\u5c06 colors \u6570\u7ec4\u7684\u6570\u636e\u590d\u5236\u5230colorsBuffer\u4e2d\uff0c\u4ece\u7d22\u5f150\u5f00\u59cb\u5b58\u653e\u3002\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);//\u7ed1\u5b9aopenGL\u4e0a\u4e0b\u6587\n        glBufferData(GL_ARRAY_BUFFER, colorsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(1);//\u542f\u7528\u9876\u70b9\u5c5e\u6027\u7d22\u5f151\uff08\u901a\u5e380\u662f\u4f4d\u7f6e\uff0c1\u662f\u989c\u8272\uff0c2\u662f\u7eb9\u7406\u5750\u6807\uff09\n        glVertexAttribPointer(1, 3, GL_FLOAT, false, 0, 0);\n\n        // \u7d22\u5f15VBO\n        vboId = glGenBuffers();//\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u533a\u5bf9\u8c61ID\n        vboIdList.add(vboId);\n        IntBuffer indicesBuffer = MemoryUtil.memCallocInt(indices.length);//\u5206\u914d\u4e00\u4e2a\u8db3\u591f\u5927\u7684IntBuffer\u6765\u5b58\u50a8\u989c\u8272\u6570\u636e\n        indicesBuffer.put(0, indices);//\u5c06 colors \u6570\u7ec4\u7684\u6570\u636e\u590d\u5236\u5230indicesBuffer\u4e2d\uff0c\u4ece\u7d22\u5f150\u5f00\u59cb\u5b58\u653e\u3002\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indicesBuffer, GL_STATIC_DRAW);\n        ...\n        //\u91ca\u653e\u4e4b\u524d\u5206\u914d\u7684\uff08\u672c\u5730\u5185\u5b58\uff09\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\n        MemoryUtil.memFree(colorsBuffer);\n        MemoryUtil.memFree(indicesBuffer);\n    }\n    ...\n}           \n</code></pre> \u4e3a\u4ec0\u4e48\u8981\u624b\u52a8\u91ca\u653e\u5185\u5b58 <p>\u5728LWJGL\u4e2d\uff0c\u5f88\u591a\u5e95\u5c42\u64cd\u4f5c\uff08\u5982 OpenGL \u7f13\u51b2\u533a\u3001\u7eb9\u7406\u7b49\uff09\u9700\u8981\u76f4\u63a5\u64cd\u4f5c\u672c\u5730\u5185\u5b58\uff0c\u800c\u4e0d\u662f JVM \u7ba1\u7406\u7684\u5806\u5185\u5b58\u3002</p> <ul> <li> <p>MemoryUtil.memCalloc() \\/ MemoryUtil.memAlloc()\uff1a\u7528\u4e8e\u5206\u914d\u672c\u5730\u5185\u5b58\uff08\u7c7b\u4f3c C \u7684 malloc/calloc\uff09</p> </li> <li> <p>MemoryUtil.memFree()\uff1a\u7528\u4e8e\u91ca\u653e\u8fd9\u4e9b\u5185\u5b58\uff08\u7c7b\u4f3c C \u7684 free\uff09\u3002</p> </li> </ul> <p>\u5982\u679c\u4e0d\u624b\u52a8\u91ca\u653e\uff0c\u8fd9\u4e9b\u5185\u5b58\u4f1a\u4e00\u76f4\u5360\u7528\uff0c\u6700\u7ec8\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\uff08\u5373\u4f7f Java \u5bf9\u8c61\u88ab GC \u56de\u6536\uff0c\u672c\u5730\u5185\u5b58\u4e5f\u4e0d\u4f1a\u81ea\u52a8\u91ca\u653e\uff09\u3002</p> \u4e3a\u4f55opengl\u7ed1\u5b9a\u4e0a\u4e0b\u6587\u7ed1\u5b9a\u4e862\u6b21\uff1f\u4e0d\u662f\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a\u5417\uff1f <p>OpenGL\u7684\u4e0a\u4e0b\u6587\u5728\u540c\u4e00\u65f6\u95f4\u786e\u5b9e\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a\u7f13\u51b2\u533a\u5230\u67d0\u4e2a\u7279\u5b9a\u76ee\u6807\uff08\u5982 GL_ARRAY_BUFFER \u6216 GL_ELEMENT_ARRAY_BUFFER\uff09\uff0c\u4f46\u4ee5\u4e0a\u4ee3\u7801\u4e2d\u7684\u5199\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u539f\u56e0\u5982\u4e0b\uff1a</p> <ol> <li>OpenGL \u7ed1\u5b9a\u7684\u57fa\u672c\u89c4\u5219 \u6bcf\u4e2a\u76ee\u6807\uff08Target\uff09\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a\u7f13\u51b2\u533a \u4f8b\u5982\uff1a GL_ARRAY_BUFFER \u76ee\u6807\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a VBO\uff08\u5b58\u50a8\u9876\u70b9\u6570\u636e\uff09\u3002 GL_ELEMENT_ARRAY_BUFFER \u76ee\u6807\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a EBO\uff08\u5b58\u50a8\u7d22\u5f15\u6570\u636e\uff09\u3002 \u5176\u4ed6\u76ee\u6807\uff08\u5982 GL_TEXTURE_BUFFER\u3001GL_UNIFORM_BUFFER\uff09\u540c\u7406\u3002 \u7ed1\u5b9a\u662f\u5168\u5c40\u72b6\u6001 \u8c03\u7528 glBindBuffer(target, id) \u540e\uff0c\u540e\u7eed\u6240\u6709\u9488\u5bf9\u8be5\u76ee\u6807\u7684 OpenGL \u64cd\u4f5c\uff08\u5982 glBufferData\u3001glVertexAttribPointer\uff09\u90fd\u4f1a\u4f5c\u7528\u4e8e\u5f53\u524d\u7ed1\u5b9a\u7684\u7f13\u51b2\u533a\uff0c\u76f4\u5230\u518d\u6b21\u7ed1\u5b9a\u5176\u4ed6\u7f13\u51b2\u533a\u6216\u89e3\u7ed1\uff08\u7ed1\u5b9a 0\uff09\u3002</li> <li>\u4ee3\u7801\u4e2d\u7684\u7ed1\u5b9a\u903b\u8f91 \u5728\u4ee3\u7801\u4e2d\uff0c\u4e24\u6b21\u7ed1\u5b9a\u64cd\u4f5c\u7684\u76ee\u6807\u4e0d\u540c\uff0c\u56e0\u6b64\u4e0d\u4f1a\u51b2\u7a81\uff1a</li> </ol> <p><pre><code>// \u7ed1\u5b9a\u989c\u8272\u6570\u636e\u5230 GL_ARRAY_BUFFER\nglBindBuffer(GL_ARRAY_BUFFER, vboId);//\u7ed1\u5b9a\u989c\u8272 VBO\nglBufferData(GL_ARRAY_BUFFER, ...);//\u4e0a\u4f20\u989c\u8272\u6570\u636e\n\n// \u7ed1\u5b9a\u7d22\u5f15\u6570\u636e\u5230 GL_ELEMENT_ARRAY_BUFFER\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, vboId);//\u7ed1\u5b9a\u7d22\u5f15 VBO\nglBufferData(GL_ELEMENT_ARRAY_BUFFER, ...);//\u4e0a\u4f20\u7d22\u5f15\u6570\u636e\n</code></pre> GL_ARRAY_BUFFER \u548c GL_ELEMENT_ARRAY_BUFFER \u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u76ee\u6807\uff0c\u53ef\u4ee5\u540c\u65f6\u7ed1\u5b9a\u4e0d\u540c\u7684\u7f13\u51b2\u533a\u3002 \u5982\u679c\u4ee3\u7801\u5c1d\u8bd5\u5bf9\u540c\u4e00\u4e2a\u76ee\u6807\uff08\u5982\u4e24\u6b21 GL_ARRAY_BUFFER\uff09\u7ed1\u5b9a\u4e0d\u540c\u7684\u7f13\u51b2\u533a\uff0c\u540e\u4e00\u6b21\u7ed1\u5b9a\u4f1a\u8986\u76d6\u524d\u4e00\u6b21\u3002</p> <p>\u5728\u6211\u4eec\u521b\u5efa\u7528\u4e8e\u5b58\u50a8\u4f4d\u7f6e\u7684VBO\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u53e6\u4e00\u4e2a\u7528\u4e8e\u989c\u8272\u6570\u636e\u7684VBO\u3002\u7136\u540e\u6211\u4eec\u518d\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u7d22\u5f15\u7684VBO\u3002\u521b\u5efa\u7d22\u5f15VBO\u7684\u8fc7\u7a0b\u4e0e\u4e4b\u524d\u7c7b\u4f3c\uff0c\u4f46\u8981\u6ce8\u610f\u7c7b\u578b\u73b0\u5728\u662f<code>GL_ELEMENT_ARRAY_BUFFER</code>\u3002\u7531\u4e8e\u6211\u4eec\u6b63\u5728\u5904\u7406\u6574\u6570\uff0c\u6240\u4ee5\u9700\u8981\u521b\u5efa\u4e00\u4e2a<code>IntBuffer</code>\u800c\u4e0d\u662f<code>FloatBuffer</code>\u3002\u73b0\u5728\uff0c\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u5c06\u5305\u542b\u4e09\u4e2aVBO\uff1a\u4e00\u4e2a\u7528\u4e8e\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u7528\u4e8e\u989c\u8272\uff0c\u4e00\u4e2a\u7528\u4e8e\u7d22\u5f15\uff0c\u5e76\u4e14\u5c06\u5728\u6e32\u67d3\u65f6\u4f7f\u7528\u7d22\u5f15\u3002</p> <p>\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728<code>SceneRender</code>\u7c7b\u4e2d\u66f4\u6539\u7ed8\u5236\u8c03\u7528\u4ee5\u4f7f\u7528\u7d22\u5f15\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    public void render(Scene scene) {\n        ...\n        scene.getMeshMap().values().forEach(mesh -&gt; {\n                    glBindVertexArray(mesh.getVaoId());\n                    glDrawElements(GL_TRIANGLES, mesh.getNumVertices(), GL_UNSIGNED_INT, 0);\n                }\n        );\n        ...\n    }\n    ...\n}\n</code></pre> <p><code>glDrawElements</code>\u65b9\u6cd5\u7684\u53c2\u6570\u662f\uff1a</p> <ul> <li>mode\uff1a\u6307\u5b9a\u7ed8\u5236\u65f6\u7684\u56fe\u5143\u7c7b\u578b\uff0c\u8fd9\u91cc\u662f\u4e09\u89d2\u5f62\u3002\u8fd9\u91cc\u6ca1\u6709\u53d8\u5316\u3002</li> <li>count\uff1a\u6307\u5b9a\u8981\u6e32\u67d3\u7684\u5143\u7d20\u6570\u91cf\u3002</li> <li>type\uff1a\u6307\u5b9a\u7d22\u5f15\u6570\u636e\u4e2d\u503c\u7684\u7c7b\u578b\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684\u662f\u6574\u6570\u3002</li> <li>indices\uff1a\u6307\u5b9a\u5f00\u59cb\u6e32\u67d3\u65f6\u7d22\u5f15\u6570\u636e\u7684\u504f\u79fb\u91cf\u3002</li> </ul> <p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5728<code>Main</code>\u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Mesh\uff0c\u5e26\u6709\u989d\u5916\u7684\u9876\u70b9\u53c2\u6570\uff08\u989c\u8272\uff09\u548c\u7d22\u5f15\uff1a</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-04\", new Window.WindowOptions(), main);\n        ...\n    }\n    ...\n    public void init(Window window, Scene scene, Render render) {\n        float[] positions = new float[]{\n                -0.5f, 0.5f, 0.0f,\n                -0.5f, -0.5f, 0.0f,\n                0.5f, -0.5f, 0.0f,\n                0.5f, 0.5f, 0.0f,\n        };\n        float[] colors = new float[]{\n                0.5f, 0.0f, 0.0f,\n                0.0f, 0.5f, 0.0f,\n                0.0f, 0.0f, 0.5f,\n                0.0f, 0.5f, 0.5f,\n        };\n        int[] indices = new int[]{\n                0, 1, 3, 3, 1, 2,\n        };\n        Mesh mesh = new Mesh(positions, colors, indices);\n        scene.addMesh(\"quad\", mesh);\n    }\n    ...\n}\n</code></pre> colors <p>colors\u4f7f\u7528RGB\u8272\u5f69</p> <p>\u5728\u4e00\u4e9b\u56fe\u5f62\u5e94\u7528\u7f16\u7a0b\u63a5\u53e3\uff08API\uff09\u6216\u6e32\u67d3\u5f15\u64ce\u4e2d\uff0c\u989c\u8272\u53ef\u4ee5\u4ee5\u6d6e\u70b9\u6570\u7684\u5f62\u5f0f\u6765\u8868\u793a\uff0c\u5176\u8303\u56f4\u4ece0.0\u52301.0\u3002\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\u540c\u6837\u6db5\u76d6\u4e86\u4ece\u5b8c\u5168\u6ca1\u6709\u989c\u8272\u5f3a\u5ea6\u5230\u6700\u5927\u5f3a\u5ea6\u7684\u6574\u4e2a\u8303\u56f4</p> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u4fee\u6539\u7740\u8272\u5668\uff08shader\uff09\uff0c\u4e0d\u662f\u56e0\u4e3a\u7d22\u5f15\uff0c\u800c\u662f\u4e3a\u4e86\u4f7f\u7528\u6bcf\u4e2a\u9876\u70b9\u7684\u989c\u8272\u3002\u9876\u70b9\u7740\u8272\u5668\uff08<code>scene.vert</code>\uff09\u5982\u4e0b\u6240\u793a\uff1a</p> \u672c\u7ae0\u7684\u9876\u70b9\u7740\u8272\u5668\u4e0a\u4e00\u7ae0\u7684\u9876\u70b9\u7740\u8272\u5668 <pre><code>#version 330\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 color;\n\nout vec3 outColor;\n\nvoid main()\n{\n    gl_Position = vec4(position, 1.0);\n    outColor = color;\n}\n</code></pre> <pre><code>#version 330\n\nlayout (location=0) in vec3 inPosition;\n\nvoid main()\n{\ngl_Position = vec4(inPosition, 1.0);\n}\n</code></pre> <p>\u5728\u8f93\u5165\u53c2\u6570\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u63a5\u6536\u4e86\u4e00\u4e2a\u65b0\u7684<code>vec3</code>\u7c7b\u578b\u7684\u989c\u8272\u6570\u636e\uff0c\u5e76\u4e14\u6211\u4eec\u76f4\u63a5\u8fd4\u56de\u5b83\uff0c\u4f9b\u7247\u6bb5\u7740\u8272\u5668\uff08<code>scene.frag</code>\uff09\u4f7f\u7528\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> \u672c\u7ae0\u7684\u7247\u6bb5\u7740\u8272\u5668\u4e0a\u4e00\u7ae0\u7684\u7247\u6bb5\u7740\u8272\u5668 <pre><code>#version 330\n\nin  vec3 outColor;\nout vec4 fragColor;\n\nvoid main()\n{\n    fragColor = vec4(outColor, 1.0);\n}\n</code></pre> <pre><code>#version 330\n\nout vec4 fragColor;\n\nvoid main()\n{\nfragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n</code></pre> <p>\u6211\u4eec\u4ec5\u4f7f\u7528\u8f93\u5165\u7684\u989c\u8272\u53c2\u6570\u4f5c\u4e3a\u7247\u6bb5\u989c\u8272\u8fd4\u56de\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u65f6\uff0c\u989c\u8272\u503c\u5c06\u88ab\u63d2\u503c\uff0c\u56e0\u6b64\u7ed3\u679c\u4f1a\u50cf\u4e0b\u9762\u8fd9\u6837\u3002</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"05-perspective-projection/","title":"\u7b2c\u4e94\u7ae0 \u900f\u89c6\u6295\u5f71\uff08Perspective projection\uff09","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u4e24\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u900f\u89c6\u6295\u5f71\uff08Perspective Projection\uff09\uff08\u7528\u4e8e\u8ba9\u8fdc\u5904\u7684\u7269\u4f53\u770b\u8d77\u6765\u6bd4\u8fd1\u5904\u7684\u5c0f\uff09\u548c\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\uff08\u4e00\u79cd\u7c7b\u4f3c\u7f13\u51b2\u533a\u7684\u7ed3\u6784\uff0c\u7528\u4e8e\u5411\u7740\u8272\u5668\u4f20\u9012\u989d\u5916\u6570\u636e\uff09\u3002</p> <p>\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"05-perspective-projection/#_1","title":"\u900f\u89c6\u6295\u5f71","text":"<p>\u8ba9\u6211\u4eec\u56de\u5230\u4e0a\u7ae0\u4e2d\u521b\u5efa\u7684\u6f02\u4eae\u5f69\u8272\u56db\u8fb9\u5f62\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u56db\u8fb9\u5f62\u88ab\u626d\u66f2\u6210\u4e86\u4e00\u4e2a\u77e9\u5f62\u3002\u4f60\u751a\u81f3\u53ef\u4ee5\u628a\u7a97\u53e3\u5bbd\u5ea6\u4ece600\u50cf\u7d20\u6539\u6210900\u50cf\u7d20\uff0c\u626d\u66f2\u73b0\u8c61\u4f1a\u66f4\u52a0\u660e\u663e\u3002\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\u5462\uff1f</p> <p>\u5982\u679c\u4f60\u56de\u987e\u6211\u4eec\u7684\u9876\u70b9\u7740\u8272\u5668\u4ee3\u7801\uff0c\u4f60\u4f1a\u770b\u5230\u6211\u4eec\u53ea\u662f\u76f4\u63a5\u4f20\u9012\u4e86\u5750\u6807\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u4eec\u8bf4\u4e00\u4e2a\u9876\u70b9\u5728x\u5750\u6807\u4e3a0.5\u65f6\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u544a\u8bc9OpenGL\uff1a\u5728\u5c4f\u5e55\u4e0a\u7684x\u4f4d\u7f6e0.5\u5904\u7ed8\u5236\u5b83\u3002\u4e0b\u56fe\u5c55\u793a\u4e86OpenGL\u5750\u6807\u7cfb\uff08\u4ec5\u5c55\u793ax\u548cy\u8f74\uff09\u3002</p> <p></p> <p>\u8fd9\u4e9b\u5750\u6807\u4f1a\u6839\u636e\u7a97\u53e3\u5927\u5c0f\u6620\u5c04\u5230\u7a97\u53e3\u5750\u6807\uff08\u7a97\u53e3\u5750\u6807\u7684\u539f\u70b9\u4f4d\u4e8e\u4e0a\u56fe\u7684\u5de6\u4e0a\u89d2\uff09\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6211\u4eec\u7684\u7a97\u53e3\u5927\u5c0f\u662f900x580\uff0cOpenGL\u5750\u6807\uff081,0\uff09\u5c06\u88ab\u6620\u5c04\u5230\u7a97\u53e3\u5750\u6807\uff08900,0\uff09\uff0c\u4ece\u800c\u521b\u5efa\u4e86\u4e00\u4e2a\u77e9\u5f62\u800c\u4e0d\u662f\u4e00\u4e2a\u56db\u8fb9\u5f62\u3002</p> <p></p> <p>\u4f46\u95ee\u9898\u6bd4\u8fd9\u66f4\u4e25\u91cd\u3002\u5c06\u6211\u4eec\u56db\u8fb9\u5f62\u7684z\u5750\u6807\u4ece0.0\u6539\u62101.0\u548c-1.0\u3002\u4f60\u770b\u5230\u4e86\u4ec0\u4e48\uff1f\u65e0\u8bba\u5b83\u5728z\u8f74\u4e0a\u79fb\u52a8\u5230\u54ea\u91cc\uff0c\u56db\u8fb9\u5f62\u4ecd\u7136\u7ed8\u5236\u5728\u540c\u4e00\u4e2a\u5730\u65b9\u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\u8fdc\u79bb\u7684\u7269\u4f53\u5e94\u8be5\u88ab\u7ed8\u5236\u5f97\u66f4\u5c0f\u624d\u5bf9\u3002\u4f46\u6211\u4eec\u7ed8\u5236\u65f6\uff0cx\u548cy\u5750\u6807\u4fdd\u6301\u4e0d\u53d8\u3002</p> <p>\u4f46\u662f\u7b49\u7b49\u3002\u96be\u9053z\u5750\u6807\u4e0d\u5e94\u8be5\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f\u7b54\u6848\u662f\uff1a\u662f\u7684\uff0c\u4e5f\u662f\u201c\u4e0d\u5b8c\u5168\u662f\u201d\u3002z\u5750\u6807\u544a\u8bc9OpenGL\u7269\u4f53\u79bb\u6211\u4eec\u662f\u8fd1\u8fd8\u662f\u8fdc\uff0c\u4f46OpenGL\u5e76\u4e0d\u77e5\u9053\u7269\u4f53\u7684\u5b9e\u9645\u5927\u5c0f\u3002\u4f60\u53ef\u80fd\u6709\u4e24\u4e2a\u4e0d\u540c\u5c3a\u5bf8\u7684\u7269\u4f53\uff0c\u4e00\u4e2a\u8fd1\u4e00\u4e2a\u8fdc\uff0c\u4f46\u7531\u4e8e\u5927\u5c0f\u4e0d\u540c\uff0c\u5b83\u4eec\u53ef\u4ee5\u6295\u5f71\u5230\u5c4f\u5e55\u4e0a\u76f8\u540c\u7684\u5c3a\u5bf8\uff08\u5373\u5177\u6709\u76f8\u540c\u7684x\u548cy\u5750\u6807\uff0c\u4f46\u4e0d\u540c\u7684z\u5750\u6807\uff09\u3002OpenGL\u53ea\u662f\u4f7f\u7528\u6211\u4eec\u4f20\u9012\u7684\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u81ea\u884c\u6b63\u786e\u5730\u6295\u5f71\u8fd9\u4e9b\u5750\u6807\u3002</p> <p>\u65e2\u7136\u6211\u4eec\u53d1\u73b0\u4e86\u95ee\u9898\uff0c\u5e94\u8be5\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff08Perspective Projection Matrix\uff09\u3002\u900f\u89c6\u6295\u5f71\u77e9\u9635\u4f1a\u5904\u7406\u7ed8\u5236\u533a\u57df\u7684\u7eb5\u6a2a\u6bd4\uff08Aspect Ratio\uff09\uff08\u5373\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u7684\u5173\u7cfb\uff09\uff0c\u907f\u514d\u7269\u4f53\u88ab\u626d\u66f2\u3002\u540c\u65f6\u5b83\u4e5f\u4f1a\u6839\u636e\u8ddd\u79bb\u8c03\u6574\u7269\u4f53\u5927\u5c0f\uff0c\u4f7f\u8fdc\u5904\u7269\u4f53\u7ed8\u5236\u5f97\u66f4\u5c0f\u3002\u6295\u5f71\u77e9\u9635\u8fd8\u4f1a\u8003\u8651\u6211\u4eec\u7684\u89c6\u91ce\u89d2\uff08Field of View\uff09\u548c\u6700\u5927\u53ef\u663e\u793a\u8ddd\u79bb\u3002</p> <p>\u5982\u679c\u4f60\u4e0d\u719f\u6089\u77e9\u9635\uff0c\u77e9\u9635\u662f\u4e00\u79cd\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7531\u884c\u548c\u5217\u6392\u5217\u7684\u6570\u5b57\u7ec4\u6210\u3002\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u88ab\u79f0\u4e3a\u5143\u7d20\u3002\u77e9\u9635\u7684\u9636\u6570\u662f\u5176\u884c\u6570\u548c\u5217\u6570\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a2x2\u77e9\u9635\uff082\u884c2\u5217\uff09\u3002</p> <p></p> <p>\u77e9\u9635\u6709\u8bb8\u591a\u57fa\u672c\u8fd0\u7b97\uff08\u5982\u52a0\u6cd5\u3001\u4e58\u6cd5\u7b49\uff09\uff0c\u4f60\u53ef\u4ee5\u5728\u6570\u5b66\u4e66\u4e2d\u67e5\u9605\u3002\u4e0e3D\u56fe\u5f62\u76f8\u5173\u7684\u77e9\u9635\u7684\u4e3b\u8981\u7279\u70b9\u662f\uff0c\u5b83\u4eec\u975e\u5e38\u9002\u5408\u7528\u4e8e\u7a7a\u95f4\u4e2d\u70b9\u7684\u53d8\u6362\u3002</p> <p>\u4f60\u53ef\u4ee5\u628a\u6295\u5f71\u77e9\u9635\u60f3\u8c61\u6210\u4e00\u4e2a\u76f8\u673a\uff0c\u5b83\u6709\u89c6\u91ce\u8303\u56f4\u548c\u6700\u5c0f/\u6700\u5927\u8ddd\u79bb\u3002\u8be5\u76f8\u673a\u7684\u53ef\u89c6\u533a\u57df\u662f\u4e00\u4e2a\u88ab\u622a\u65ad\u7684\u91d1\u5b57\u5854\u3002\u4e0b\u9762\u7684\u56fe\u663e\u793a\u4e86\u4ece\u9876\u90e8\u89c6\u89d2\u770b\u5230\u7684\u90a3\u7247\u533a\u57df\u3002</p> <p></p> <p>\u6295\u5f71\u77e9\u9635\u5c06\u6b63\u786e\u5730\u6620\u5c043D\u5750\u6807\uff0c\u4ee5\u4fbf\u5b83\u4eec\u80fd\u57282D\u5c4f\u5e55\u4e0a\u6b63\u786e\u663e\u793a\u3002\u8fd9\u4e2a\u77e9\u9635\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u5982\u4e0b\uff08\u522b\u5bb3\u6015\uff09\u3002</p> <p></p> <p>\u5f53\u4f60\u770b\u5230\u8fd9\u884c\u5b57\u65f6\u8bb0\u5f97\u63d0\u9192\u6211\u66f4\u65b0\u8fd9\u5f20\u56fe\u7247</p> <p>\u5176\u4e2d\uff0c\u7eb5\u6a2a\u6bd4\u662f\u5c4f\u5e55\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u7684\u5173\u7cfb\uff08\\(a=width/height\\)\uff09\u3002\u4e3a\u4e86\u83b7\u5f97\u67d0\u4e2a\u70b9\u7684\u6295\u5f71\u5750\u6807\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u6295\u5f71\u77e9\u9635\u4e0e\u539f\u59cb\u5750\u6807\u76f8\u4e58\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u65b0\u7684\u5411\u91cf\uff0c\u5305\u542b\u4e86\u6295\u5f71\u540e\u7684\u5750\u6807\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u4e00\u4e9b\u6570\u5b66\u5b9e\u4f53\uff0c\u5982\u5411\u91cf\u3001\u77e9\u9635\uff0c\u5e76\u5305\u542b\u5b83\u4eec\u7684\u64cd\u4f5c\u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4ece\u96f6\u5f00\u59cb\u81ea\u5df1\u7f16\u5199\u6240\u6709\u4ee3\u7801\uff0c\u6216\u8005\u4f7f\u7528\u5df2\u6709\u7684\u5e93\u3002\u6211\u4eec\u9009\u62e9\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u8f7b\u91cf\u7ea7Java\u6e38\u620f\u5e93\u4e2d\u7684\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u6570\u5b66\u8fd0\u7b97\u7684\u5e93\uff0c\u53eb\u505aJava OpenGL\u6570\u5b66\u5e93\uff08Java OpenGL Math Library\uff0c\u7b80\u79f0JOML\uff09\u3002\u8981\u4f7f\u7528\u8be5\u5e93\uff0c\u53ea\u9700\u5728<code>pom.xml</code>\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u4f9d\u8d56\u3002</p> <pre><code>        &lt;dependency&gt;\n            &lt;groupId&gt;org.joml&lt;/groupId&gt;\n            &lt;artifactId&gt;joml&lt;/artifactId&gt;\n            &lt;version&gt;${joml.version}&lt;/version&gt;\n        &lt;/dependency&gt;\n</code></pre> <p>\u4e00\u5207\u51c6\u5907\u597d\u540e\uff0c\u6211\u4eec\u6765\u5b9a\u4e49\u6295\u5f71\u77e9\u9635\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>Projection</code>\u7684\u65b0\u7c7b\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.scene;\n\nimport org.joml.Matrix4f;\n\npublic class Projection {\n\n    private static final float FOV = (float) Math.toRadians(60.0f);\n    private static final float Z_FAR = 1000.f;\n    private static final float Z_NEAR = 0.01f;\n\n    private Matrix4f projMatrix;\n\n    public Projection(int width, int height) {\n        projMatrix = new Matrix4f();\n        updateProjMatrix(width, height);\n    }\n\n    public Matrix4f getProjMatrix() {\n        return projMatrix;\n    }\n\n    public void updateProjMatrix(int width, int height) {\n        projMatrix.setPerspective(FOV, (float) width / height, Z_NEAR, Z_FAR);\n    }\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u5b83\u4f9d\u8d56JOML\u5e93\u63d0\u4f9b\u7684<code>Matrix4f</code>\u7c7b\uff0c\u8be5\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a<code>setPerspective</code>\u7684\u65b9\u6cd5\u6765\u8bbe\u7f6e\u900f\u89c6\u6295\u5f71\u77e9\u9635\u3002\u8fd9\u4e2a\u65b9\u6cd5\u9700\u8981\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <ul> <li>\u89c6\u91ce\u89d2\uff08Field of View\uff09\uff1a\u4ee5\u5f27\u5ea6\u8868\u793a\u7684\u89c6\u91ce\u89d2\u5ea6\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528<code>FOV</code>\u5e38\u91cf\u3002</li> <li>\u7eb5\u6a2a\u6bd4\uff08Aspect Ratio\uff09\uff1a\u5373\u6e32\u67d3\u533a\u57df\u5bbd\u5ea6\u4e0e\u9ad8\u5ea6\u7684\u5173\u7cfb\u3002</li> <li>\u8fd1\u5e73\u9762\u8ddd\u79bb\uff08z-near\uff09\u3002</li> <li>\u8fdc\u5e73\u9762\u8ddd\u79bb\uff08z-far\uff09\u3002</li> </ul> <p>\u6211\u4eec\u5c06\u5728<code>Scene</code>\u7c7b\u4e2d\u5b58\u50a8\u4e00\u4e2a<code>Projection</code>\u7c7b\u5b9e\u4f8b\uff0c\u5e76\u5728\u6784\u9020\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u5b83\u3002\u6b64\u5916\uff0c\u5982\u679c\u7a97\u53e3\u5927\u5c0f\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff0c\u56e0\u6b64\u5728<code>Scene</code>\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u65b9\u6cd5<code>resize</code>\u3002</p> <pre><code>public class Scene {\n    ...\n    private Projection projection;\n\n    public Scene(int width, int height) {\n        ...\n        projection = new Projection(width, height);\n    }\n    ...\n    public Projection getProjection() {\n        return projection;\n    }\n\n    public void resize(int width, int height) {\n        projection.updateProjMatrix(width, height);\n    }    \n}\n</code></pre> <p>\u6211\u4eec\u8fd8\u9700\u8981\u66f4\u65b0<code>Engine</code>\u7c7b\uff0c\u4ee5\u9002\u5e94\u65b0\u7684<code>Scene</code>\u6784\u9020\u51fd\u6570\u53c2\u6570\uff0c\u5e76\u8c03\u7528<code>resize</code>\u65b9\u6cd5\u3002</p> <pre><code>public class Engine {\n    ...\n    public Engine(String windowTitle, Window.WindowOptions opts, IAppLogic appLogic) {\n        ...\n        scene = new Scene(window.getWidth(), window.getHeight());\n        ...\n    }\n    ...\n    private void resize() {\n        scene.resize(window.getWidth(), window.getHeight());\n    }\n    ...\n}\n</code></pre>"},{"location":"05-perspective-projection/#_2","title":"\u7edf\u4e00\u53d8\u91cf","text":"<p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u8ba1\u7b97\u900f\u89c6\u6295\u5f71\u77e9\u9635\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u63a5\u4e0b\u6765\u8981\u600e\u6837\u4f7f\u7528\u5b83\u5462\uff1f\u6211\u4eec\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u5b83\uff0c\u5e76\u5e94\u7528\u5230\u6240\u6709\u9876\u70b9\u4e0a\u3002\u6700\u521d\u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u50cf\u5750\u6807\u548c\u989c\u8272\u90a3\u6837\uff0c\u5c06\u5b83\u6253\u5305\u5230\u9876\u70b9\u8f93\u5165\u4e2d\u3002\u4f46\u8fd9\u6837\u4f1a\u6d6a\u8d39\u5927\u91cf\u7a7a\u95f4\uff0c\u56e0\u4e3a\u6295\u5f71\u77e9\u9635\u5bf9\u6240\u6709\u9876\u70b9\u662f\u4e00\u6837\u7684\u3002\u4f60\u4e5f\u53ef\u80fd\u60f3\u5230\u5728Java\u4ee3\u7801\u4e2d\u76f4\u63a5\u5c06\u9876\u70b9\u4e58\u4ee5\u77e9\u9635\u3002\u4f46\u8fd9\u6837\uff0c\u6211\u4eec\u7684VBO\uff08\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff09\u5c31\u5931\u53bb\u4e86\u610f\u4e49\uff0c\u4e5f\u4e0d\u4f1a\u5145\u5206\u5229\u7528\u663e\u5361\u7684\u5904\u7406\u80fd\u529b\u3002</p> <p>\u7b54\u6848\u662f\u4f7f\u7528\u201c\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u201d\u3002\u7edf\u4e00\u53d8\u91cf\u662fGLSL\u4e2d\u4e00\u79cd\u5168\u5c40\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\uff0c\u6211\u4eec\u5c06\u7528\u5b83\u6765\u4f20\u9012\u5bf9\u6240\u6709\u5143\u7d20\u6216\u6a21\u578b\u901a\u7528\u7684\u6570\u636e\u3002\u8ba9\u6211\u4eec\u4ece\u7740\u8272\u5668\u7a0b\u5e8f\u4e2d\u5982\u4f55\u4f7f\u7528\u7edf\u4e00\u53d8\u91cf\u5f00\u59cb\u3002\u6211\u4eec\u9700\u8981\u4fee\u6539\u9876\u70b9\u7740\u8272\u5668\u4ee3\u7801\uff0c\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u7edf\u4e00\u53d8\u91cf<code>projectionMatrix</code>\uff0c\u5e76\u7528\u5b83\u6765\u8ba1\u7b97\u6295\u5f71\u540e\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002</p> \u672c\u7ae0\u9876\u70b9\u7740\u8272\u5668\u4e0a\u4e00\u7ae0\u9876\u70b9\u7740\u8272\u5668 <pre><code>#version 330\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 color;\n\nout vec3 outColor;\n\nuniform mat4 projectionMatrix;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * vec4(position, 1.0);\n    outColor = color;\n}\n</code></pre> <pre><code>#version 330\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 color;\n\nout vec3 outColor;\n\nvoid main()\n{\n    gl_Position = vec4(position, 1.0);\n    outColor = color;\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u5c06<code>projectionMatrix</code>\u5b9a\u4e49\u4e3a\u4e00\u4e2a4x4\u77e9\u9635\uff0c\u9876\u70b9\u4f4d\u7f6e\u901a\u8fc7\u5c06\u539f\u5750\u6807\u4e0e\u6295\u5f71\u77e9\u9635\u76f8\u4e58\u5f97\u5230\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u628a\u6295\u5f71\u77e9\u9635\u7684\u503c\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>UniformsMap</code>\u7684\u65b0\u7c7b\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u521b\u5efa\u7edf\u4e00\u53d8\u91cf\u5f15\u7528\u5e76\u8bbe\u7f6e\u5b83\u4eec\u7684\u503c\u3002\u5b83\u7684\u8d77\u59cb\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.joml.Matrix4f;\nimport org.lwjgl.system.MemoryStack;\n\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL20.*;\n\npublic class UniformsMap {\n\n    private int programId;\n    private Map&lt;String, Integer&gt; uniforms;\n\n    public UniformsMap(int programId) {\n        this.programId = programId;\n        uniforms = new HashMap&lt;&gt;();\n    }\n\n    public void createUniform(String uniformName) {\n        int uniformLocation = glGetUniformLocation(programId, uniformName);\n        if (uniformLocation &lt; 0) {\n            throw new RuntimeException(\"Could not find uniform [\" + uniformName + \"] in shader program [\" +\n                    programId + \"]\");\n        }\n        uniforms.put(uniformName, uniformLocation);\n    }\n    ...\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6784\u9020\u51fd\u6570\u63a5\u6536\u7740\u8272\u5668\u7a0b\u5e8f\u7684\u6807\u8bc6\u7b26\uff0c\u5e76\u5b9a\u4e49\u4e86\u4e00\u4e2a<code>Map</code>\u6765\u5b58\u50a8\u7edf\u4e00\u53d8\u91cf\u7684\u5f15\u7528\uff08<code>Integer</code>\u5b9e\u4f8b\uff09\uff0c\u8fd9\u4e9b\u5f15\u7528\u901a\u8fc7<code>createUniform</code>\u65b9\u6cd5\u521b\u5efa\u3002\u7edf\u4e00\u53d8\u91cf\u5f15\u7528\u662f\u901a\u8fc7\u8c03\u7528<code>glGetUniformLocation</code>\u51fd\u6570\u83b7\u53d6\u7684\uff0c\u8be5\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a</p> <ul> <li>\u7740\u8272\u5668\u7a0b\u5e8f\u6807\u8bc6\u7b26\u3002</li> <li>\u7edf\u4e00\u53d8\u91cf\u540d\u79f0\uff08\u5e94\u4e0e\u7740\u8272\u5668\u4ee3\u7801\u4e2d\u5b9a\u4e49\u7684\u540d\u79f0\u4e00\u81f4\uff09\u3002</li> </ul> <p>\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u7edf\u4e00\u53d8\u91cf\u7684\u521b\u5efa\u4e0e\u5176\u6570\u636e\u7c7b\u578b\u65e0\u5173\u3002\u4f46\u8bbe\u7f6e\u6570\u636e\u65f6\uff0c\u4e0d\u540c\u7c7b\u578b\u9700\u8981\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\u73b0\u5728\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u65b9\u6cd5\u6765\u52a0\u8f7d4x4\u77e9\u9635\uff1a</p> <pre><code>public class UniformsMap {\n    ...\n    public void setUniform(String uniformName, Matrix4f value) {\n        try (MemoryStack stack = MemoryStack.stackPush()) {\n            Integer location = uniforms.get(uniformName);\n            if (location == null) {\n                throw new RuntimeException(\"Could not find uniform [\" + uniformName + \"]\");\n            }\n            glUniformMatrix4fv(location.intValue(), false, value.get(stack.mallocFloat(16)));\n        }\n    }\n}\n</code></pre> <p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5728<code>SceneRender</code>\u7c7b\u4e2d\u4f7f\u7528\u4e0a\u8ff0\u4ee3\u7801\u4e86\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    private UniformsMap uniformsMap;\n\n    public SceneRender() {\n        ...\n        createUniforms();\n    }\n    ...\n    private void createUniforms() {\n        uniformsMap = new UniformsMap(shaderProgram.getProgramId());\n        uniformsMap.createUniform(\"projectionMatrix\");\n    }\n    ...\n    public void render(Scene scene) {\n        ...\n        uniformsMap.setUniform(\"projectionMatrix\", scene.getProjection().getProjMatrix());\n        ...\n    }\n}\n</code></pre> <p>\u6211\u4eec\u5dee\u4e0d\u591a\u5b8c\u6210\u4e86\u3002\u73b0\u5728\u53ef\u4ee5\u6b63\u786e\u6e32\u67d3\u56db\u8fb9\u5f62\u4e86\u3002\u4e8e\u662f\u4f60\u542f\u52a8\u7a0b\u5e8f\uff0c\u7ed3\u679c\u53ea\u770b\u5230\u4e00\u4e2a\u9ed1\u8272\u80cc\u666f\uff0c\u5e76\u6ca1\u6709\u5f69\u8272\u56db\u8fb9\u5f62\u3002\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\uff1f\u6211\u4eec\u662f\u4e0d\u662f\u54ea\u91cc\u641e\u574f\u4e86\uff1f\u5176\u5b9e\u6ca1\u6709\u3002\u8bb0\u5f97\u6211\u4eec\u73b0\u5728\u6a21\u62df\u4e86\u4e00\u4e2a\u76f8\u673a\u770b\u5411\u573a\u666f\u7684\u6548\u679c\u3002\u800c\u4e14\u6211\u4eec\u8bbe\u7f6e\u4e86\u8fdc\u8fd1\u5e73\u9762\u8ddd\u79bb\uff081000f\u548c0.01f\uff09\u3002\u800c\u6211\u4eec\u7684\u9876\u70b9\u5750\u6807\u662f\uff1a</p> <pre><code>float[] positions = new float[]{\n    -0.5f,  0.5f, 0.0f,\n    -0.5f, -0.5f, 0.0f,\n     0.5f, -0.5f, 0.0f,\n     0.5f,  0.5f, 0.0f,\n};\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\uff0cz\u5750\u6807\u8d85\u51fa\u4e86\u53ef\u89c1\u533a\u57df\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u7684\u503c\u6539\u6210<code>-0.05f</code>\u3002\u6b64\u65f6\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u5de8\u5927\u65e0\u6bd4\u7684\u6b63\u65b9\u5f62\uff1a</p> <p></p> <p>\u8fd9\u65f6\u5176\u5b9e\u662f\u56e0\u4e3a\u6211\u4eec\u7ed8\u5236\u7684\u56db\u8fb9\u5f62\u592a\u9760\u8fd1\u76f8\u673a\uff0c\u76f8\u5f53\u4e8e\u653e\u5927\u4e86\u3002\u5982\u679c\u6211\u4eec\u628az\u5750\u6807\u6539\u4e3a<code>-1.0f</code>\uff0c\u5c31\u80fd\u770b\u5230\u6b63\u5e38\u5927\u5c0f\u7684\u5f69\u8272\u56db\u8fb9\u5f62\u4e86\u3002</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-05\", new Window.WindowOptions(), main);\n        ...\n    }\n    ...\n    public void init(Window window, Scene scene, Render render) {\n        float[] positions = new float[]{\n                -0.5f, 0.5f, -1.0f,\n                -0.5f, -0.5f, -1.0f,\n                0.5f, -0.5f, -1.0f,\n                0.5f, 0.5f, -1.0f,\n        };\n        ...\n    }\n    ...\n}\n</code></pre> <p></p> <p>\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u628a\u56db\u8fb9\u5f62\u5f80\u540e\u63a8\uff0c\u5b83\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\u3002\u6ce8\u610f\u5230\u56db\u8fb9\u5f62\u4e5f\u4e0d\u4f1a\u518d\u88ab\u626d\u66f2\u6210\u77e9\u5f62\u4e86\u3002</p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"06-going-3D/","title":"\u7b2c6\u7ae0 \u8fdb\u5165\u4e09\u7ef4\u4e16\u754c\uff08Going 3D\uff09","text":"<p>\u672c\u7ae0\u6211\u4eec\u5c06\u5efa\u7acb3D\u6a21\u578b\u7684\u57fa\u7840\u6846\u67b6\uff0c\u89e3\u91ca\u6a21\u578b\u53d8\u6362\u7684\u6982\u5ff5\uff0c\u5e76\u6e32\u67d3\u7b2c\u4e00\u4e2a3D\u56fe\u5f62\u2014\u2014\u4e00\u4e2a\u65cb\u8f6c\u7684\u7acb\u65b9\u4f53\u3002</p> <p>\u5b8c\u6574\u6e90\u4ee3\u7801\u53ef\u5728\u6b64\u5904\u83b7\u53d6\u3002</p>"},{"location":"06-going-3D/#_1","title":"\u6a21\u578b\u4e0e\u5b9e\u4f53","text":"<p>\u9996\u5148\u8ba9\u6211\u4eec\u5b9a\u4e493D\u6a21\u578b\u7684\u6982\u5ff5\u3002\u6b64\u524d\u6211\u4eec\u4e00\u76f4\u5728\u5904\u7406\u7f51\u683c\u3002\u6a21\u578b\u5219\u662f\u5c06\u9876\u70b9\u3001\u989c\u8272\u3001\u7eb9\u7406\u548c\u6750\u8d28\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u7ed3\u6784\u4f53\u3002\u4e00\u4e2a\u6a21\u578b\u53ef\u80fd\u7531\u591a\u4e2a\u7f51\u683c\u7ec4\u6210\uff0c\u5e76\u53ef\u4ee5\u88ab\u591a\u4e2a\u6e38\u620f\u5b9e\u4f53\u5171\u7528\u3002\u6e38\u620f\u5b9e\u4f53\u4ee3\u8868\u73a9\u5bb6\u3001\u654c\u4eba\u3001\u969c\u788d\u7269\u7b49\u4efb\u4f553D\u573a\u666f\u4e2d\u7684\u5143\u7d20\u3002\u672c\u4e66\u4e2d\u6211\u4eec\u5047\u5b9a\u5b9e\u4f53\u603b\u662f\u4e0e\u6a21\u578b\u76f8\u5173\u8054\uff08\u5c3d\u7ba1\u4f60\u53ef\u4ee5\u6709\u4e0d\u53c2\u4e0e\u6e32\u67d3\u7684\u65e0\u6a21\u578b\u5b9e\u4f53\uff09\u3002\u5b9e\u4f53\u5305\u542b\u7279\u5b9a\u6570\u636e\uff08\u5982\u4f4d\u7f6e\u4fe1\u606f\uff09\uff0c\u8fd9\u4e9b\u6570\u636e\u5728\u6e32\u67d3\u65f6\u9700\u8981\u4f7f\u7528\u3002\u7a0d\u540e\u4f60\u4f1a\u770b\u5230\uff0c\u6211\u4eec\u9996\u5148\u83b7\u53d6\u6a21\u578b\u6570\u636e\uff0c\u7136\u540e\u7ed8\u5236\u4e0e\u8be5\u6a21\u578b\u5173\u8054\u7684\u5b9e\u4f53\u3002\u8fd9\u79cd\u8bbe\u8ba1\u51fa\u4e8e\u6548\u7387\u8003\u8651\u2014\u2014\u7531\u4e8e\u591a\u4e2a\u5b9e\u4f53\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u6a21\u578b\uff0c\u6700\u597d\u5148\u8bbe\u7f6e\u6a21\u578b\u5171\u6709\u7684\u5143\u7d20\uff0c\u518d\u5904\u7406\u6bcf\u4e2a\u5b9e\u4f53\u7279\u6709\u7684\u6570\u636e\u3002</p> <p>\u8868\u793a\u6a21\u578b\u7684\u7c7b\u540d\u4e3a<code>Model</code>\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjglb.engine.scene.Entity;\n\nimport java.util.*;\n\npublic class Model {\n\n private final String id;\n private List&lt;Entity&gt; entitiesList;\n private List&lt;Mesh&gt; meshList;\n\n public Model(String id, List&lt;Mesh&gt; meshList) {\n  this.id = id;\n  this.meshList = meshList;\n  entitiesList = new ArrayList&lt;&gt;();\n }\n\n public void cleanup() {\n  meshList.forEach(Mesh::cleanup);\n }\n\n public List&lt;Entity&gt; getEntitiesList() {\n  return entitiesList;\n }\n\n public String getId() {\n  return id;\n }\n\n public List&lt;Mesh&gt; getMeshList() {\n  return meshList;\n }\n\n}\n</code></pre> <p>\u6a21\u578b\u76ee\u524d\u5b58\u50a8\u7f51\u683c\u5217\u8868\u5e76\u62e5\u6709\u552f\u4e00\u6807\u8bc6\u7b26\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5b58\u50a8\u4e0e\u8be5\u6a21\u578b\u5173\u8054\u7684\u6e38\u620f\u5b9e\u4f53\u5217\u8868\uff08\u7531<code>Entity</code>\u7c7b\u5efa\u6a21\uff09\u3002\u5982\u679c\u8981\u521b\u5efa\u5b8c\u6574\u5f15\u64ce\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u5728\u5176\u4ed6\u5730\u65b9\u5b58\u50a8\u8fd9\u4e9b\u5173\u7cfb\uff08\u800c\u975e\u6a21\u578b\u4e2d\uff09\uff0c\u4f46\u4e3a\u7b80\u5316\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u5173\u8054\u5b58\u50a8\u5728<code>Model</code>\u7c7b\u4e2d\uff0c\u8fd9\u6837\u6e32\u67d3\u6d41\u7a0b\u4f1a\u66f4\u7b80\u5355\u3002</p> <p>\u5728\u4e86\u89e3<code>Entity</code>\u7c7b\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u8ba8\u8bba\u6a21\u578b\u53d8\u6362\u3002\u4e3a\u4e86\u57283D\u573a\u666f\u4e2d\u8868\u793a\u4efb\u4f55\u6a21\u578b\uff0c\u6211\u4eec\u9700\u8981\u652f\u6301\u5bf9\u6a21\u578b\u8fdb\u884c\u4ee5\u4e0b\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li>\u5e73\u79fb\uff1a\u6cbf\u4efb\u610f\u8f74\u79fb\u52a8\u7269\u4f53</li> <li>\u65cb\u8f6c\uff1a\u7ed5\u4efb\u610f\u8f74\u65cb\u8f6c\u7269\u4f53</li> <li>\u7f29\u653e\uff1a\u8c03\u6574\u7269\u4f53\u5927\u5c0f</li> </ul> <p></p> <p>\u4e0a\u8ff0\u64cd\u4f5c\u79f0\u4e3a\u53d8\u6362\uff08transformations\uff09\u3002\u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u5750\u6807\u4e0e\u77e9\u9635\u76f8\u4e58\u6765\u5b9e\u73b0\u8fd9\u4e9b\u53d8\u6362\uff08\u4e00\u4e2a\u77e9\u9635\u7528\u4e8e\u5e73\u79fb\uff0c\u4e00\u4e2a\u7528\u4e8e\u65cb\u8f6c\uff0c\u4e00\u4e2a\u7528\u4e8e\u7f29\u653e\uff09\u3002\u8fd9\u4e09\u4e2a\u77e9\u9635\u5c06\u7ec4\u5408\u6210\u540d\u4e3a\u4e16\u754c\u77e9\u9635\u7684\u5355\u4e00\u77e9\u9635\uff0c\u4f5c\u4e3a\u7edf\u4e00\u53d8\u91cf\u4f20\u9012\u7ed9\u9876\u70b9\u7740\u8272\u5668\u3002</p> <p>\u4e4b\u6240\u4ee5\u79f0\u4e3a\u4e16\u754c\u77e9\u9635\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u8981\u5c06\u6a21\u578b\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u5750\u6807\u3002\u5f53\u4f60\u5b66\u4e60\u52a0\u8f7d3D\u6a21\u578b\u65f6\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e9b\u6a21\u578b\u5b9a\u4e49\u5728\u81ea\u5df1\u7684\u5750\u6807\u7cfb\u4e2d\u3002\u5b83\u4eec\u4e0d\u77e5\u9053\u4f60\u76843D\u7a7a\u95f4\u5927\u5c0f\uff0c\u9700\u8981\u88ab\u653e\u7f6e\u5176\u4e2d\u3002\u56e0\u6b64\u5f53\u6211\u4eec\u7528\u77e9\u9635\u4e58\u4ee5\u5750\u6807\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u8fdb\u884c\u5750\u6807\u7cfb\u8f6c\u6362\uff08\u4ece\u6a21\u578b\u5750\u6807\u7cfb\u52303D\u4e16\u754c\u5750\u6807\u7cfb\uff09\u3002</p> <p>\u4e16\u754c\u77e9\u9635\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff08\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u77e9\u9635\u4e58\u6cd5\u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff09\uff1a $$ \u4e16\u754c\u77e9\u9635 = [\u5e73\u79fb\u77e9\u9635\\rbrack  \\cdot \\lbrack\u65cb\u8f6c\u77e9\u9635\\rbrack  \\cdot \\lbrack\u7f29\u653e\u77e9\u9635] $$</p> <p>\u5982\u679c\u6211\u4eec\u5728\u53d8\u6362\u77e9\u9635\u4e2d\u5305\u542b\u6295\u5f71\u77e9\u9635\uff0c\u5219\u5982\u4e0b\uff1a $$ \\begin{array}{lcl} \u53d8\u6362\u77e9\u9635 &amp; = &amp; \\lbrack\u6295\u5f71\u77e9\u9635\\rbrack  \\cdot \\lbrack\u5e73\u79fb\u77e9\u9635\\rbrack  \\cdot \\lbrack\u65cb\u8f6c\u77e9\u9635\\rbrack  \\cdot \\lbrack\u7f29\u653e\u77e9\u9635\\rbrack \\  &amp; = &amp; \\lbrack\u6295\u5f71\u77e9\u9635\\rbrack  \\cdot \\lbrack\u4e16\u754c\u77e9\u9635\\rbrack \\end{array} $$</p> <p>\u5e73\u79fb\u77e9\u9635\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[ \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; dx \\\\ 0 &amp; 1 &amp; 0 &amp; dy \\\\ 0 &amp; 0 &amp; 1 &amp; dz \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\] <p>\u5e73\u79fb\u77e9\u9635\u53c2\u6570\uff1a</p> <ul> <li> <p>dx\uff1a\u6cbf x \u8f74\u7684\u4f4d\u79fb\u3002</p> </li> <li> <p>dy\uff1a\u6cbf y \u8f74\u7684\u4f4d\u79fb\u3002</p> </li> <li> <p>dz\uff1a\u6cbf z \u8f74\u7684\u4f4d\u79fb\u3002</p> </li> </ul> <p>\u7f29\u653e\u77e9\u9635\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[ \\begin{bmatrix} sx &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; sy &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; sz &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\] <p>\u7f29\u653e\u77e9\u9635\u53c2\u6570\uff1a</p> <ul> <li> <p>sx\uff1a\u6cbf x \u8f74\u7f29\u653e\u3002</p> </li> <li> <p>sy\uff1a\u6cbf y \u8f74\u7f29\u653e\u3002</p> </li> <li> <p>sz\uff1a\u6cbf z \u8f74\u7f29\u653e\u3002</p> </li> </ul> <p>\u65cb\u8f6c\u77e9\u9635\u66f4\u4e3a\u590d\u6742\u3002\u4f46\u8981\u8bb0\u4f4f\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u4e09\u4e2a\u5355\u8f74\u65cb\u8f6c\u77e9\u9635\u76f8\u4e58\u6784\u9020\uff0c\u6216\u901a\u8fc7\u5e94\u7528\u56db\u5143\u6570\uff08\u7a0d\u540e\u8be6\u8ff0\uff09\u6765\u5b9e\u73b0\u3002</p> <p><code>Entity</code>\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \u65e0\u6ce8\u91ca\u6709\u6ce8\u91ca <pre><code>package org.lwjglb.engine.scene;\n\nimport org.joml.*;\n\npublic class Entity {\n\n    private final String id;\n    private final String modelId;\n    private Matrix4f modelMatrix;\n    private Vector3f position;\n    private Quaternionf rotation;\n    private float scale;\n\n    public Entity(String id, String modelId) {\n        this.id = id;\n        this.modelId = modelId;\n        modelMatrix = new Matrix4f();\n        position = new Vector3f();\n        rotation = new Quaternionf();\n        scale = 1;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public String getModelId() {\n        return modelId;\n    }\n\n    public Matrix4f getModelMatrix() {\n        return modelMatrix;\n    }\n\n    public Vector3f getPosition() {\n        return position;\n    }\n\n    public Quaternionf getRotation() {\n        return rotation;\n    }\n\n    public float getScale() {\n        return scale;\n    }\n\n    public final void setPosition(float x, float y, float z) {\n    position.x = x;\n    position.y = y;\n    position.z = z;\n    }\n\n    public void setRotation(float x, float y, float z, float angle) {\n        this.rotation.fromAxisAngleRad(x, y, z, angle);\n    }\n\n    public void setScale(float scale) {\n        this.scale = scale;\n    }\n\n    public void updateModelMatrix() {\n        modelMatrix.translationRotateScale(position, rotation, scale);\n    }\n}\n</code></pre> <pre><code>package org.lwjglb.engine.scene;\n\nimport org.joml.*;\n\npublic class Entity {\n\n    private final String id;\n    private final String modelId;//\u5173\u8054\u7684\u6a21\u578b\u8d44\u6e90 ID\n    private Matrix4f modelMatrix;//\u6700\u7ec8\u7684\u6a21\u578b\u53d8\u6362\u77e9\u9635\uff08\u7ec4\u5408\u4e86\u4f4d\u7f6e\u3001\u65cb\u8f6c\u3001\u7f29\u653e\uff09\n    private Vector3f position;//3D\u4f4d\u7f6e\uff08Vector3f\uff09\n    private Quaternionf rotation;//\u56db\u5143\u6570\u65cb\u8f6c\uff08Quaternionf\uff0c\u6bd4\u6b27\u62c9\u89d2\u66f4\u7a33\u5b9a\uff09\n    private float scale;//\u7edf\u4e00\u7f29\u653e\u503c\uff08float\uff09\n\n    public Entity(String id, String modelId) {\n        this.id = id;\n        this.modelId = modelId;\n        modelMatrix = new Matrix4f();\n        position = new Vector3f();\n        rotation = new Quaternionf();\n        scale = 1;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public String getModelId() {\n        return modelId;\n    }\n\n    public Matrix4f getModelMatrix() {\n        return modelMatrix;\n    }\n\n    public Vector3f getPosition() {\n        return position;\n    }\n\n    public Quaternionf getRotation() {\n        return rotation;\n    }\n\n    public float getScale() {\n        return scale;\n    }\n\n    public final void setPosition(float x, float y, float z) {\n    position.x = x;\n    position.y = y;\n    position.z = z;\n    }\n\n    public void setRotation(float x, float y, float z, float angle) {\n        this.rotation.fromAxisAngleRad(x, y, z, angle);\n    }\n\n    public void setScale(float scale) {\n        this.scale = scale;\n    }\n\n    //\u66f4\u65b0\u5b9e\u4f53\u7684\u6a21\u578b\u77e9\u9635\uff0c\u5c06\u5b9e\u4f53\u7684 \u4f4d\u7f6e\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u7ec4\u5408\u6210\u4e00\u4e2a\u6700\u7ec8\u76844x4\u53d8\u6362\u77e9\u9635\n    public void updateModelMatrix() {\n        modelMatrix.translationRotateScale(position, rotation, scale);\n    }\n}\n</code></pre> <p><code>Model</code>\u5b9e\u4f8b\u4e5f\u62e5\u6709\u552f\u4e00\u6807\u8bc6\u7b26\uff0c\u5e76\u5b9a\u4e49\u4e86\u4f4d\u7f6e\uff083\u5206\u91cf\u5411\u91cf\uff09\u3001\u7f29\u653e\uff08\u5355\u4e2a\u6d6e\u70b9\u6570\uff0c\u5047\u8bbe\u4e09\u4e2a\u8f74\u5747\u5300\u7f29\u653e\uff09\u548c\u65cb\u8f6c\uff08\u56db\u5143\u6570\uff09\u5c5e\u6027\u3002\u6211\u4eec\u672c\u53ef\u4ee5\u5b58\u50a8\u4fef\u4ef0\u89d2\uff08pitch\uff09\u3001\u504f\u822a\u89d2\uff08yaw\uff09\u548c\u6eda\u8f6c\u89d2\uff08roll\uff09\u6765\u8868\u793a\u65cb\u8f6c\uff0c\u4f46\u8fd9\u91cc\u4f7f\u7528\u4e86\u4f60\u53ef\u80fd\u6ca1\u542c\u8bf4\u8fc7\u7684\u6570\u5b66\u5de5\u5177\u2014\u2014\u56db\u5143\u6570\uff08quaternion\uff09\u3002\u4f7f\u7528\u6b27\u62c9\u89d2\uff08Euler angles\uff09\u7684\u95ee\u9898\u662f\u4e07\u5411\u8282\u9501\uff08gimbal lock\uff09\u3002\u5f53\u5e94\u7528\u8fd9\u4e9b\u65cb\u8f6c\u89d2\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u6700\u7ec8\u5bf9\u9f50\u4e24\u4e2a\u65cb\u8f6c\u8f74\uff0c\u5931\u53bb\u81ea\u7531\u5ea6\uff0c\u5bfc\u81f4\u65e0\u6cd5\u6b63\u786e\u65cb\u8f6c\u7269\u4f53\u3002\u56db\u5143\u6570\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002\u4e0e\u5176\u8ba9\u6211\u62d9\u52a3\u5730\u89e3\u91ca\u56db\u5143\u6570\u662f\u4ec0\u4e48\uff0c\u4e0d\u5982\u63a8\u8350\u4e00\u7bc7\u4f18\u79c0\u7684\u535a\u5ba2\u6587\u7ae0\u6765\u89e3\u91ca\u76f8\u5173\u6982\u5ff5\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u6df1\u5165\u4e86\u89e3\uff0c\u53ea\u9700\u8bb0\u4f4f\u5b83\u4eec\u53ef\u4ee5\u8868\u8fbe\u65cb\u8f6c\u800c\u4e0d\u4f1a\u51fa\u73b0\u6b27\u62c9\u89d2\u7684\u95ee\u9898\u3002</p> <p>\u6a21\u578b\u7684\u6240\u6709\u53d8\u6362\u7531\u4e00\u4e2a4x4\u77e9\u9635\u5b9a\u4e49\uff0c\u56e0\u6b64<code>Model</code>\u5b9e\u4f8b\u5b58\u50a8<code>Matrix4f</code>\u5b9e\u4f8b\uff0c\u8be5\u5b9e\u4f8b\u901a\u8fc7JOML\u7684<code>translationRotateScale</code>\u65b9\u6cd5\u4f7f\u7528\u4f4d\u7f6e\u3001\u7f29\u653e\u548c\u65cb\u8f6c\u81ea\u52a8\u6784\u9020\u3002\u6bcf\u6b21\u4fee\u6539<code>Model</code>\u5b9e\u4f8b\u5c5e\u6027\u540e\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528<code>updateModelMatrix</code>\u65b9\u6cd5\u6765\u66f4\u65b0\u8be5\u77e9\u9635\u3002</p>"},{"location":"06-going-3D/#_2","title":"\u5176\u4ed6\u4ee3\u7801\u53d8\u66f4","text":"<p>\u6211\u4eec\u9700\u8981\u4fee\u6539<code>Scene</code>\u7c7b\u6765\u5b58\u50a8\u6a21\u578b\u800c\u975e\u76f4\u63a5\u5b58\u50a8<code>Mesh</code>\u5b9e\u4f8b\u3002\u6b64\u5916\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u652f\u6301\u5c06<code>Entity</code>\u5b9e\u4f8b\u4e0e\u6a21\u578b\u5173\u8054\u4ee5\u4fbf\u540e\u7eed\u6e32\u67d3\u3002</p> <pre><code>package org.lwjglb.engine.scene;\n\nimport org.lwjglb.engine.graph.Model;\n\nimport java.util.*;\n\npublic class Scene {\n\n    private Map&lt;String, Model&gt; modelMap;\n    private Projection projection;\n\n    public Scene(int width, int height) {\n        modelMap = new HashMap&lt;&gt;();\n        projection = new Projection(width, height);\n    }\n\n    public void addEntity(Entity entity) {\n        String modelId = entity.getModelId();\n        Model model = modelMap.get(modelId);\n        if (model == null) {\n            throw new RuntimeException(\"Could not find model [\" + modelId + \"]\");\n        }\n        model.getEntitiesList().add(entity);\n    }\n\n    public void addModel(Model model) {\n        modelMap.put(model.getId(), model);\n    }\n\n    public void cleanup() {\n        modelMap.values().forEach(Model::cleanup);\n    }\n\n    public Map&lt;String, Model&gt; getModelMap() {\n        return modelMap;\n    }\n\n    public Projection getProjection() {\n        return projection;\n    }\n\n    public void resize(int width, int height) {\n        projection.updateProjMatrix(width, height);\n    }\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u7a0d\u5fae\u4fee\u6539<code>SceneRender</code>\u7c7b\u3002\u9996\u5148\u9700\u8981\u901a\u8fc7\u7edf\u4e00\u53d8\u91cf\u5c06\u6a21\u578b\u77e9\u9635\u4fe1\u606f\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u521b\u5efa\u540d\u4e3a<code>modelMatrix</code>\u7684\u65b0\u7edf\u4e00\u53d8\u91cf\uff0c\u5e76\u5728<code>createUniforms</code>\u65b9\u6cd5\u4e2d\u83b7\u53d6\u5176\u4f4d\u7f6e\u3002</p> <pre><code>public class SceneRender {\n    private void createUniforms() {\n        uniformsMap.createUniform(\"modelMatrix\");\n    }\n}\n</code></pre> <p>\u63a5\u4e0b\u6765\u4fee\u6539<code>render</code>\u65b9\u6cd5\u4ee5\u6539\u53d8\u6211\u4eec\u8bbf\u95ee\u6a21\u578b\u7684\u65b9\u5f0f\u5e76\u6b63\u786e\u8bbe\u7f6e\u6a21\u578b\u77e9\u9635\u7edf\u4e00\u53d8\u91cf\uff1a</p> <p><pre><code>public class SceneRender {\n    ...\n    public void render(Scene scene) {\n    shaderProgram.bind();\n\n    uniformsMap.setUniform(\"projectionMatrix\", scene.getProjection().getProjMatrix());\n\n    Collection&lt;Model&gt; models = scene.getModelMap().values();\n    for (Model model : models) {\n        model.getMeshList().stream().forEach(mesh -&gt; {\n            glBindVertexArray(mesh.getVaoId());\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            for (Entity entity : entities) {\n                uniformsMap.setUniform(\"modelMatrix\", entity.getModelMatrix());\n                glDrawElements(GL_TRIANGLES, mesh.getNumVertices(), GL_UNSIGNED_INT, 0);\n            }\n        });\n    }\n    glBindVertexArray(0);\n    shaderProgram.unbind();\n }\n ...\n}\n</code></pre> \u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u4f1a\u5148\u904d\u5386\u6a21\u578b\u96c6\u5408\uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u6a21\u578b\u7684\u7f51\u683c\u6570\u636e\uff0c\u7ed1\u5b9a\u5bf9\u5e94\u7684VAO\u540e\u83b7\u53d6\u5173\u8054\u7684\u5b9e\u4f53\u5bf9\u8c61\u3002\u5728\u8c03\u7528\u7ed8\u5236\u6307\u4ee4\u524d\uff0c\u9700\u8981\u4e3a\u6bcf\u4e2a\u5b9e\u4f53\u6b63\u786e\u586b\u5145<code>modelMatrix</code>\u7edf\u4e00\u53d8\u91cf\u503c\u3002</p> <p>\u9876\u70b9\u7740\u8272\u5668\u4fee\u6539\u4e3a\u4f7f\u7528<code>modelMatrix</code>\u7edf\u4e00\u53d8\u91cf\uff1a</p> <pre><code>#version 330\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 color;\n\nout vec3 outColor;\n\nuniform mat4 projectionMatrix;\nuniform mat4 modelMatrix;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * modelMatrix * vec4(position, 1.0);\n    outColor = color;\n}\n</code></pre> <p>\u4ee3\u7801\u5b8c\u5168\u76f8\u540c\u3002\u6211\u4eec\u4f7f\u7528\u7edf\u4e00\u53d8\u91cf\u6b63\u786e\u6295\u5f71\u5750\u6807\uff0c\u8003\u8651\u89c6\u9525\u4f53\u3001\u4f4d\u7f6e\u3001\u7f29\u653e\u548c\u65cb\u8f6c\u4fe1\u606f\u3002\u53e6\u4e00\u4e2a\u91cd\u8981\u95ee\u9898\u662f\uff1a\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u4f20\u9012\u5e73\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u77e9\u9635\uff0c\u800c\u662f\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u4e16\u754c\u77e9\u9635\uff1f\u539f\u56e0\u662f\u5e94\u9650\u5236\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u77e9\u9635\u6570\u91cf\u3002\u6b64\u5916\uff0c\u7740\u8272\u5668\u4e2d\u7684\u77e9\u9635\u4e58\u6cd5\u5bf9\u6bcf\u4e2a\u9876\u70b9\u53ea\u6267\u884c\u4e00\u6b21\u3002\u6295\u5f71\u77e9\u9635\u5728\u6e32\u67d3\u8c03\u7528\u4e4b\u95f4\u4e0d\u53d8\uff0c\u4e16\u754c\u77e9\u9635\u5bf9\u6bcf\u4e2a<code>Entity</code>\u5b9e\u4f8b\u4e5f\u4e0d\u53d8\u3002\u5982\u679c\u72ec\u7acb\u4f20\u9012\u5e73\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u77e9\u9635\uff0c\u6211\u4eec\u5c06\u6267\u884c\u66f4\u591a\u77e9\u9635\u4e58\u6cd5\u3002\u60f3\u8c61\u4e00\u4e2a\u6709\u5927\u91cf\u9876\u70b9\u7684\u6a21\u578b\uff0c\u8fd9\u5c06\u5e26\u6765\u5927\u91cf\u989d\u5916\u8fd0\u7b97\u3002</p> <p>\u4f60\u53ef\u80fd\u4f1a\u60f3\uff0c\u65e2\u7136\u6a21\u578b\u77e9\u9635\u5bf9\u6bcf\u4e2a<code>Entity</code>\u5b9e\u4f8b\u4e0d\u53d8\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5728Java\u7c7b\u4e2d\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\uff1f\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e2a<code>Entity</code>\u53ea\u4e58\u4e00\u6b21\u6295\u5f71\u77e9\u9635\u548c\u6a21\u578b\u77e9\u9635\uff0c\u4f5c\u4e3a\u5355\u4e2a\u7edf\u4e00\u53d8\u91cf\u53d1\u9001\u3002\u8fd9\u6837\u80fd\u8282\u7701\u66f4\u591a\u8fd0\u7b97\uff0c\u5bf9\u5417\uff1f\u7b54\u6848\u662f\u8fd9\u5728\u5f53\u524d\u60c5\u51b5\u4e0b\u6210\u7acb\uff0c\u4f46\u5f53\u6211\u4eec\u4e3a\u6e38\u620f\u5f15\u64ce\u6dfb\u52a0\u66f4\u591a\u529f\u80fd\u65f6\uff0c\u4ecd\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u4e16\u754c\u5750\u6807\uff0c\u56e0\u6b64\u6700\u597d\u4ee5\u72ec\u7acb\u65b9\u5f0f\u5904\u7406\u8fd9\u4e24\u4e2a\u77e9\u9635\u3002</p> <p>\u6700\u540e\u8981\u5f3a\u8c03\u7684\u662f\u77e9\u9635\u4e58\u6cd5\u7684\u987a\u5e8f\u3002\u6211\u4eec\u9996\u5148\u7528\u6a21\u578b\u77e9\u9635\u4e58\u4ee5\u4f4d\u7f6e\u4fe1\u606f\uff0c\u5373\u5c06\u6a21\u578b\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u3002\u7136\u540e\u5e94\u7528\u6295\u5f71\u3002\u8bb0\u4f4f\u77e9\u9635\u4e58\u6cd5\u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u56e0\u6b64\u987a\u5e8f\u975e\u5e38\u91cd\u8981\u3002</p> <p>\u73b0\u5728\u9700\u8981\u4fee\u6539<code>Main</code>\u7c7b\u4ee5\u9002\u5e94\u52a0\u8f7d\u6a21\u578b\u548c\u5b9e\u4f53\u7684\u65b0\u65b9\u5f0f\uff0c\u4ee5\u53ca3D\u7acb\u65b9\u4f53\u7684\u5750\u6807\u548c\u7d22\u5f15\u3002</p> <pre><code>public class Main implements IAppLogic {\n\n    private Entity cubeEntity;\n    private Vector4f displInc = new Vector4f();\n    private float rotation;\n\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-06\", new Window.WindowOptions(), main);\n        ...\n    }\n    ...\n    @Override\n    public void init(Window window, Scene scene, Render render) {\n        float[] positions = new float[]{\n                // VO\n                -0.5f, 0.5f, 0.5f,\n                // V1\n                -0.5f, -0.5f, 0.5f,\n                // V2\n                0.5f, -0.5f, 0.5f,\n                // V3\n                0.5f, 0.5f, 0.5f,\n                // V4\n                -0.5f, 0.5f, -0.5f,\n                // V5\n                0.5f, 0.5f, -0.5f,\n                // V6\n                -0.5f, -0.5f, -0.5f,\n                // V7\n                0.5f, -0.5f, -0.5f,\n        };\n        float[] colors = new float[]{\n                0.5f, 0.0f, 0.0f,\n                0.0f, 0.5f, 0.0f,\n                0.0f, 0.0f, 0.5f,\n                0.0f, 0.5f, 0.5f,\n                0.5f, 0.0f, 0.0f,\n                0.0f, 0.5f, 0.0f,\n                0.0f, 0.0f, 0.5f,\n                0.0f, 0.5f, 0.5f,\n        };\n        int[] indices = new int[]{\n                // Front face\n                0, 1, 3, 3, 1, 2,\n                // Top Face\n                4, 0, 3, 5, 4, 3,\n                // Right face\n                3, 2, 7, 5, 3, 7,\n                // Left face\n                6, 1, 0, 6, 0, 4,\n                // Bottom face\n                2, 1, 6, 2, 6, 7,\n                // Back face\n                7, 6, 4, 7, 4, 5,\n        };\n        List&lt;Mesh&gt; meshList = new ArrayList&lt;&gt;();\n        Mesh mesh = new Mesh(positions, colors, indices);\n        meshList.add(mesh);\n        String cubeModelId = \"cube-model\";\n        Model model = new Model(cubeModelId, meshList);\n        scene.addModel(model);\n\n        cubeEntity = new Entity(\"cube-entity\", cubeModelId);\n        cubeEntity.setPosition(0, 0, -2);\n        scene.addEntity(cubeEntity);\n    }\n    ...\n}\n</code></pre> <p>\u8981\u7ed8\u5236\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u53ea\u9700\u5b9a\u4e49\u516b\u4e2a\u9876\u70b9\u3002\u7531\u4e8e\u591a\u4e86\u56db\u4e2a\u9876\u70b9\uff0c\u9700\u8981\u66f4\u65b0\u989c\u8272\u6570\u7ec4\u3002</p> <p></p> <p>\u7acb\u65b9\u4f53\u6709\u516d\u4e2a\u9762\uff0c\u9700\u8981\u7ed8\u5236\u5341\u4e8c\u4e2a\u4e09\u89d2\u5f62\uff08\u6bcf\u4e2a\u9762\u4e24\u4e2a\uff09\uff0c\u56e0\u6b64\u9700\u8981\u66f4\u65b0\u7d22\u5f15\u6570\u7ec4\u3002\u8bb0\u4f4f\u4e09\u89d2\u5f62\u5fc5\u987b\u6309\u9006\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\u3002\u624b\u5de5\u64cd\u4f5c\u5bb9\u6613\u51fa\u9519\u3002\u603b\u662f\u5c06\u4f60\u8981\u5b9a\u4e49\u7d22\u5f15\u7684\u9762\u671d\u5411\u4f60\uff0c\u7136\u540e\u8bc6\u522b\u9876\u70b9\u5e76\u6309\u9006\u65f6\u9488\u987a\u5e8f\u7ed8\u5236\u4e09\u89d2\u5f62\u3002\u6700\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5e26\u5355\u4e2a\u7f51\u683c\u7684\u6a21\u578b\u548c\u4e0e\u8be5\u6a21\u578b\u5173\u8054\u7684\u5b9e\u4f53\u3002</p> <p>\u6211\u4eec\u5c06\u9996\u5148\u4f7f\u7528<code>input</code>\u65b9\u6cd5\u901a\u8fc7\u65b9\u5411\u952e\u4fee\u6539\u7acb\u65b9\u4f53\u4f4d\u7f6e\uff0c\u901a\u8fc7<code>Z</code>\u548c<code>X</code>\u952e\u4fee\u6539\u5176\u7f29\u653e\u3002\u53ea\u9700\u68c0\u6d4b\u6309\u4e0b\u7684\u952e\uff0c\u66f4\u65b0\u7acb\u65b9\u4f53\u5b9e\u4f53\u4f4d\u7f6e\u548c/\u6216\u7f29\u653e\uff0c\u6700\u540e\u66f4\u65b0\u5176\u6a21\u578b\u77e9\u9635\u3002</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    public void input(Window window, Scene scene, long diffTimeMillis) {\n        displInc.zero();\n        if (window.isKeyPressed(GLFW_KEY_UP)) {\n            displInc.y = 1;\n        } else if (window.isKeyPressed(GLFW_KEY_DOWN)) {\n            displInc.y = -1;\n        }\n        if (window.isKeyPressed(GLFW_KEY_LEFT)) {\n            displInc.x = -1;\n        } else if (window.isKeyPressed(GLFW_KEY_RIGHT)) {\n            displInc.x = 1;\n        }\n        if (window.isKeyPressed(GLFW_KEY_A)) {\n            displInc.z = -1;\n        } else if (window.isKeyPressed(GLFW_KEY_Q)) {\n            displInc.z = 1;\n        }\n        if (window.isKeyPressed(GLFW_KEY_Z)) {\n            displInc.w = -1;\n        } else if (window.isKeyPressed(GLFW_KEY_X)) {\n            displInc.w = 1;\n        }\n\n        displInc.mul(diffTimeMillis / 1000.0f);\n\n        Vector3f entityPos = cubeEntity.getPosition();\n        cubeEntity.setPosition(displInc.x + entityPos.x, displInc.y + entityPos.y, displInc.z + entityPos.z);\n        cubeEntity.setScale(cubeEntity.getScale() + displInc.w);\n        cubeEntity.updateModelMatrix();\n    }\n    ...\n}\n</code></pre> <p>\u4e3a\u4e86\u66f4\u597d\u5730\u89c2\u5bdf\u7acb\u65b9\u4f53\uff0c\u6211\u4eec\u5c06\u4fee\u6539<code>Main</code>\u7c7b\u4e2d\u7684\u65cb\u8f6c\u4ee3\u7801\uff0c\u4f7f\u5176\u7ed5\u4e09\u4e2a\u8f74\u65cb\u8f6c\u3002\u8fd9\u5c06\u5728<code>update</code>\u65b9\u6cd5\u4e2d\u5b8c\u6210\u3002</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    public void update(Window window, Scene scene, long diffTimeMillis) {\n        rotation += 1.5;\n        if (rotation &gt; 360) {\n            rotation = 0;\n        }\n        cubeEntity.setRotation(1, 1, 1, (float) Math.toRadians(rotation));\n        cubeEntity.updateModelMatrix();\n    }\n    ...\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u663e\u793a\u65cb\u8f6c\u76843D\u7acb\u65b9\u4f53\u4e86\u3002\u7f16\u8bd1\u8fd0\u884c\u793a\u4f8b\uff0c\u4f60\u5c06\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u6548\u679c\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u7acb\u65b9\u4f53\u6709\u4e9b\u5947\u602a\u3002\u67d0\u4e9b\u9762\u7ed8\u5236\u4e0d\u6b63\u786e\u3002\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u7acb\u65b9\u4f53\u5448\u73b0\u8fd9\u79cd\u5916\u89c2\u7684\u539f\u56e0\u662f\u7ec4\u6210\u7acb\u65b9\u4f53\u7684\u4e09\u89d2\u5f62\u4ee5\u67d0\u79cd\u968f\u673a\u987a\u5e8f\u7ed8\u5236\u3002\u8fdc\u5904\u7684\u50cf\u7d20\u5e94\u8be5\u6bd4\u8fd1\u5904\u7684\u50cf\u7d20\u5148\u7ed8\u5236\u3002\u73b0\u5728\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4e3a\u6b64\u6211\u4eec\u5fc5\u987b\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\u3002</p> <p>\u8fd9\u53ef\u4ee5\u5728<code>Render</code>\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u5b8c\u6210\uff1a</p> <pre><code>public class Render {\n    ...\n    public Render() {\n        GL.createCapabilities();\n        glEnable(GL_DEPTH_TEST);\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u7684\u7acb\u65b9\u4f53\u53ef\u4ee5\u6b63\u786e\u6e32\u67d3\u4e86\uff01</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"07-textures/","title":"\u7b2c7\u7ae0 \u7eb9\u7406\uff08Textures\uff09","text":"<p>\u672c\u7ae0\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u52a0\u8f7d\u7eb9\u7406\u3001\u7eb9\u7406\u4e0e\u6a21\u578b\u7684\u5173\u8054\u65b9\u5f0f\u4ee5\u53ca\u5728\u6e32\u67d3\u8fc7\u7a0b\u4e2d\u5982\u4f55\u4f7f\u7528\u7eb9\u7406\u3002</p> <p>\u4f60\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"07-textures/#_1","title":"\u7eb9\u7406\u52a0\u8f7d","text":"<p>\u7eb9\u7406\u662f\u4e00\u5e45\u6620\u5c04\u5230\u6a21\u578b\u4e0a\u7528\u4e8e\u8bbe\u7f6e\u6a21\u578b\u50cf\u7d20\u989c\u8272\u7684\u56fe\u50cf\u3002\u4f60\u53ef\u4ee5\u5c06\u7eb9\u7406\u89c6\u4e3a\u5305\u88f9\u57283D\u6a21\u578b\u8868\u9762\u7684\"\u76ae\u80a4\"\u3002\u5177\u4f53\u505a\u6cd5\u662f\u5c06\u56fe\u50cf\u7eb9\u7406\u4e2d\u7684\u5750\u6807\u70b9\u5206\u914d\u7ed9\u6a21\u578b\u9876\u70b9\u3002\u901a\u8fc7\u8fd9\u4e9b\u4fe1\u606f\uff0cOpenGL\u80fd\u591f\u57fa\u4e8e\u7eb9\u7406\u56fe\u50cf\u8ba1\u7b97\u51fa\u5176\u4ed6\u50cf\u7d20\u5e94\u5e94\u7528\u7684\u989c\u8272\u3002</p> <p></p> <p>\u7eb9\u7406\u56fe\u50cf\u4e0d\u5fc5\u4e0e\u6a21\u578b\u5c3a\u5bf8\u76f8\u540c\uff0c\u5b83\u53ef\u4ee5\u66f4\u5927\u6216\u66f4\u5c0f\u3002\u5f53\u7ed8\u5236\u7684\u50cf\u7d20\u65e0\u6cd5\u76f4\u63a5\u5bf9\u5e94\u5230\u7279\u5b9a\u7eb9\u7406\u5750\u6807\u70b9\u65f6\uff0cOpenGL\u4f1a\u901a\u8fc7\u63d2\u503c\u8ba1\u7b97\u989c\u8272\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u521b\u5efa\u7279\u5b9a\u7eb9\u7406\u65f6\u63a7\u5236\u8fd9\u4e00\u8fc7\u7a0b\u3002</p> <p>\u8981\u4e3a\u6a21\u578b\u5e94\u7528\u7eb9\u7406\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u9876\u70b9\u5206\u914d\u7eb9\u7406\u5750\u6807\u3002\u7eb9\u7406\u5750\u6807\u7cfb\u4e0e\u6a21\u578b\u5750\u6807\u7cfb\u6709\u6240\u4e0d\u540c\uff1a\u9996\u5148\uff0c\u7eb9\u7406\u662f\u4e8c\u7ef4\u7684\uff0c\u56e0\u6b64\u5750\u6807\u53ea\u6709x\u548cy\u4e24\u4e2a\u5206\u91cf\uff1b\u5176\u6b21\uff0c\u5750\u6807\u7cfb\u539f\u70b9\u4f4d\u4e8e\u56fe\u50cf\u5de6\u4e0a\u89d2\uff0cx\u6216y\u7684\u6700\u5927\u503c\u4e3a1\u3002</p> <p></p> <p>\u5982\u4f55\u5c06\u7eb9\u7406\u5750\u6807\u4e0e\u4f4d\u7f6e\u5750\u6807\u5173\u8054\uff1f\u5f88\u7b80\u5355\uff0c\u5c31\u50cf\u4f20\u9012\u989c\u8272\u4fe1\u606f\u4e00\u6837\u2014\u2014\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2aVBO\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u9876\u70b9\u4f4d\u7f6e\u5bf9\u5e94\u7684\u7eb9\u7406\u5750\u6807\u3002</p> <p>\u8ba9\u6211\u4eec\u5f00\u59cb\u4fee\u6539\u4ee3\u7801\u5e93\uff0c\u4e3a3D\u7acb\u65b9\u4f53\u6dfb\u52a0\u7eb9\u7406\u652f\u6301\u3002\u7b2c\u4e00\u6b65\u662f\u52a0\u8f7d\u7528\u4f5c\u7eb9\u7406\u7684\u56fe\u50cf\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4f7f\u7528LWJGL\u5c01\u88c5\u7684stb\u5e93\u3002\u9996\u5148\u9700\u8981\u5728<code>pom.xml</code>\u6587\u4ef6\u4e2d\u58f0\u660e\u8be5\u4f9d\u8d56\uff0c\u5305\u62ec\u672c\u5730\u5e93\uff1a</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.lwjgl&lt;/groupId&gt;\n    &lt;artifactId&gt;lwjgl-stb&lt;/artifactId&gt;\n    &lt;version&gt;${lwjgl.version}&lt;/version&gt;\n&lt;/dependency&gt;\n[...]\n&lt;dependency&gt;\n    &lt;groupId&gt;org.lwjgl&lt;/groupId&gt;\n    &lt;artifactId&gt;lwjgl-stb&lt;/artifactId&gt;\n    &lt;version&gt;${lwjgl.version}&lt;/version&gt;\n    &lt;classifier&gt;${native.target}&lt;/classifier&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre> <p>\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u65b0\u7684<code>Texture</code>\u7c7b\uff0c\u7528\u4e8e\u6267\u884c\u52a0\u8f7d\u7eb9\u7406\u6240\u9700\u7684\u6240\u6709\u6b65\u9aa4\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjgl.system.MemoryStack;\n\nimport java.nio.*;\n\nimport static org.lwjgl.opengl.GL30.*;\nimport static org.lwjgl.stb.STBImage.*;\n\npublic class Texture {\n\n    private int textureId;\n    private String texturePath;\n\n    public Texture(int width, int height, ByteBuffer buf) {\n        this.texturePath = \"\";\n        generateTexture(width, height, buf);\n    }\n\n    public Texture(String texturePath) {\n        try (MemoryStack stack = MemoryStack.stackPush()) {\n            this.texturePath = texturePath;\n            IntBuffer w = stack.mallocInt(1);\n            IntBuffer h = stack.mallocInt(1);\n            IntBuffer channels = stack.mallocInt(1);\n\n            ByteBuffer buf = stbi_load(texturePath, w, h, channels, 4);\n            if (buf == null) {\n                throw new RuntimeException(\"Image file [\" + texturePath + \"] not loaded: \" + stbi_failure_reason());\n            }\n\n            int width = w.get();\n            int height = h.get();\n\n            generateTexture(width, height, buf);\n\n            stbi_image_free(buf);\n        }\n    }\n\n    public void bind() {\n        glBindTexture(GL_TEXTURE_2D, textureId);\n    }\n\n    public void cleanup() {\n        glDeleteTextures(textureId);\n    }\n\n    private void generateTexture(int width, int height, ByteBuffer buf) {\n        textureId = glGenTextures();\n\n        glBindTexture(GL_TEXTURE_2D, textureId);\n        glPixelStorei(GL_UNPACK_ALIGNMENT, 1);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);\n        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0,\n                GL_RGBA, GL_UNSIGNED_BYTE, buf);\n        glGenerateMipmap(GL_TEXTURE_2D);\n    }\n\n    public String getTexturePath() {\n        return texturePath;\n    }\n}\n</code></pre> <p>\u5728\u6784\u9020\u51fd\u6570\u4e2d\u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u4e8b\u60c5\u662f\u4e3a\u5e93\u5206\u914d <code>IntBuffer</code>\uff0c\u4ee5\u7528\u4e8e\u63a5\u6536\u56fe\u50cf\u7684\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u548c\u901a\u9053\u6570\u91cf\u3002\u7136\u540e\u6211\u4eec\u8c03\u7528 <code>stbi_load</code> \u65b9\u6cd5\u5c06\u56fe\u50cf\u5b9e\u9645\u52a0\u8f7d\u5230\u4e00\u4e2a <code>ByteBuffer</code> \u4e2d\u3002\u8be5\u65b9\u6cd5\u9700\u8981\u4ee5\u4e0b\u51e0\u4e2a\u53c2\u6570\uff1a</p> <ul> <li><code>filePath</code>\uff1a\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u3002\u7531\u4e8e stb \u5e93\u662f\u4e00\u4e2a\u672c\u5730\u5e93\uff08native library\uff09\uff0c\u5b83\u5e76\u4e0d\u4e86\u89e3 <code>CLASSPATH</code>\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u7684\u662f\u666e\u901a\u7684\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u3002</li> <li><code>width</code>\uff1a\u56fe\u50cf\u5bbd\u5ea6\uff0c\u8be5\u503c\u5c06\u7531\u51fd\u6570\u586b\u5145\u3002</li> <li><code>height</code>\uff1a\u56fe\u50cf\u9ad8\u5ea6\uff0c\u8be5\u503c\u4e5f\u5c06\u7531\u51fd\u6570\u586b\u5145\u3002</li> <li><code>channels</code>\uff1a\u56fe\u50cf\u7684\u539f\u59cb\u901a\u9053\u6570\u3002</li> <li><code>desired_channels</code>\uff1a\u671f\u671b\u7684\u56fe\u50cf\u901a\u9053\u6570\u3002\u6211\u4eec\u4f20\u5165\u7684\u662f 4\uff0c\u5373 RGBA\u3002</li> </ul> <p>\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u51fa\u4e8e\u5386\u53f2\u539f\u56e0\uff0cOpenGL \u8981\u6c42\u7eb9\u7406\u56fe\u50cf\u7684\u5c3a\u5bf8\uff08\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u7684 texel \u6570\uff09\u5fc5\u987b\u662f 2 \u7684\u5e42\uff082\u30014\u30018\u300116\uff0c\u7b49\u7b49\uff09\u3002\u867d\u7136\u5982\u4eca\u7684 OpenGL \u9a71\u52a8\u5927\u591a\u5df2\u7ecf\u4e0d\u518d\u5f3a\u5236\u8fd9\u4e00\u9650\u5236\uff0c\u4f46\u5982\u679c\u4f60\u9047\u5230\u4e00\u4e9b\u95ee\u9898\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u56fe\u50cf\u5c3a\u5bf8\u8c03\u6574\u4e3a 2 \u7684\u5e42\u6b21\u65b9\u3002</p> <p>\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\u662f\u5728 GPU \u4e2d\u4e0a\u4f20\u7eb9\u7406\u6570\u636e\u3002\u8fd9\u4e00\u8fc7\u7a0b\u4f1a\u5728 <code>generateTexture</code> \u65b9\u6cd5\u4e2d\u5b8c\u6210\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u8c03\u7528 <code>glGenTextures</code> \u51fd\u6570\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7eb9\u7406\u6807\u8bc6\u7b26\u3002\u63a5\u7740\u901a\u8fc7 <code>glBindTexture</code> \u7ed1\u5b9a\u8be5\u7eb9\u7406\u3002\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u544a\u8bc9 OpenGL \u5982\u4f55\u89e3\u5305 RGBA \u5b57\u8282\u6570\u636e\u3002\u7531\u4e8e\u6bcf\u4e2a\u5206\u91cf\u6b63\u597d\u662f\u4e00\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8c03\u7528 <code>glPixelStorei</code> \u51fd\u6570\u65f6\u4f7f\u7528 <code>GL_UNPACK_ALIGNMENT</code>\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528 <code>glTexImage2D</code> \u51fd\u6570\u6765\u52a0\u8f7d\u7eb9\u7406\u6570\u636e\u3002</p> <p><code>glTexImage2D</code> \u65b9\u6cd5\u7684\u53c2\u6570\u5982\u4e0b\uff1a</p> <ul> <li><code>target</code>\uff1a\u6307\u5b9a\u76ee\u6807\u7eb9\u7406\u7c7b\u578b\uff0c\u8fd9\u91cc\u4f7f\u7528 <code>GL_TEXTURE_2D</code>\u3002</li> <li><code>level</code>\uff1a\u6307\u5b9a\u7ec6\u8282\u7ea7\u522b\uff08Level-of-Detail\uff09\uff0c0 \u8868\u793a\u57fa\u7840\u56fe\u50cf\uff0cn \u8868\u793a\u7b2c n \u5c42 mipmap\uff08\u66f4\u591a\u5185\u5bb9\u7a0d\u540e\u4ecb\u7ecd\uff09\u3002</li> <li><code>internal format</code>\uff1a\u6307\u5b9a\u7eb9\u7406\u4e2d\u989c\u8272\u7ec4\u4ef6\u7684\u6570\u91cf\u3002</li> <li><code>width</code>\uff1a\u7eb9\u7406\u56fe\u50cf\u7684\u5bbd\u5ea6\u3002</li> <li><code>height</code>\uff1a\u7eb9\u7406\u56fe\u50cf\u7684\u9ad8\u5ea6\u3002</li> <li><code>border</code>\uff1a\u5fc5\u987b\u4e3a 0\u3002</li> <li><code>format</code>\uff1a\u50cf\u7d20\u6570\u636e\u7684\u683c\u5f0f\uff0c\u8fd9\u91cc\u662f RGBA\u3002</li> <li><code>type</code>\uff1a\u50cf\u7d20\u6570\u636e\u7684\u6570\u636e\u7c7b\u578b\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u65e0\u7b26\u53f7\u5b57\u8282\u3002</li> <li><code>data</code>\uff1a\u5305\u542b\u7eb9\u7406\u6570\u636e\u7684\u7f13\u51b2\u533a\u3002</li> </ul> <p>\u4e4b\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528 <code>glTexParameteri</code> \u51fd\u6570\u6765\u6307\u5b9a\u5728\u7eb9\u7406\u5750\u6807\u65e0\u6cd5\u4e0e\u50cf\u7d20\u4e00\u4e00\u5bf9\u5e94\u7684\u60c5\u51b5\u4e0b\u5e94\u5982\u4f55\u91c7\u6837\u7eb9\u7406\u2014\u2014\u6b64\u5904\u6211\u4eec\u9009\u62e9\u6700\u8fd1\u90bb\u63d2\u503c\uff08Nearest Filtering\uff09\u3002\u518d\u4e4b\u540e\u6211\u4eec\u751f\u6210 mipmap\u3002mipmap \u662f\u4ece\u9ad8\u5206\u8fa8\u7387\u7eb9\u7406\u751f\u6210\u7684\u4e00\u7cfb\u5217\u4f4e\u5206\u8fa8\u7387\u7eb9\u7406\u56fe\uff0c\u5b83\u4eec\u5728\u6a21\u578b\u7f29\u653e\u65f6\u81ea\u52a8\u4f7f\u7528\uff0c\u63d0\u5347\u6027\u80fd\u4e0e\u89c6\u89c9\u8d28\u91cf\u3002\u6211\u4eec\u901a\u8fc7\u8c03\u7528 <code>glGenerateMipmap</code> \u51fd\u6570\u6765\u751f\u6210\u8fd9\u4e9b mipmap\u3002</p> <p>\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u6210\u529f\u52a0\u8f7d\u5e76\u4e0a\u4f20\u4e86\u7eb9\u7406\u6570\u636e\u3002\u63a5\u4e0b\u6765\u8981\u505a\u7684\u5c31\u662f\u4f7f\u7528\u5b83\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u7eb9\u7406\u7f13\u5b58\u3002\u7531\u4e8e\u6a21\u578b\u7ecf\u5e38\u4f1a\u91cd\u590d\u4f7f\u7528\u76f8\u540c\u7684\u7eb9\u7406\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5e0c\u671b\u6bcf\u6b21\u90fd\u91cd\u65b0\u52a0\u8f7d\u540c\u4e00\u5f20\u7eb9\u7406\uff0c\u800c\u662f\u53ea\u52a0\u8f7d\u4e00\u6b21\u5e76\u590d\u7528\u3002\u8fd9\u9879\u529f\u80fd\u5c06\u7531 <code>TextureCache</code> \u7c7b\u6765\u5b9e\u73b0\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport java.util.*;\n\npublic class TextureCache {\n\n    public static final String DEFAULT_TEXTURE = \"resources/models/default/default_texture.png\";\n\n    private Map&lt;String, Texture&gt; textureMap;\n\n    public TextureCache() {\n        textureMap = new HashMap&lt;&gt;();\n        textureMap.put(DEFAULT_TEXTURE, new Texture(DEFAULT_TEXTURE));\n    }\n\n    public void cleanup() {\n        textureMap.values().forEach(Texture::cleanup);\n    }\n\n    public Texture createTexture(String texturePath) {\n        return textureMap.computeIfAbsent(texturePath, Texture::new);\n    }\n\n    public Texture getTexture(String texturePath) {\n        Texture texture = null;\n        if (texturePath != null) {\n            texture = textureMap.get(texturePath);\n        }\n        if (texture == null) {\n            texture = textureMap.get(DEFAULT_TEXTURE);\n        }\n        return texture;\n    }\n}\n</code></pre> <p>\u6b63\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u662f\u5c06\u52a0\u8f7d\u7684\u7eb9\u7406\u5b58\u50a8\u5728\u4e00\u4e2a<code>Map</code>\u4e2d\uff0c\u5e76\u5728\u7eb9\u7406\u8def\u5f84\u4e3anull\uff08\u5373\u6a21\u578b\u6ca1\u6709\u7eb9\u7406\uff09\u7684\u60c5\u51b5\u4e0b\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u7eb9\u7406\u3002\u8fd9\u4e2a\u9ed8\u8ba4\u7eb9\u7406\u662f\u4e00\u4e2a\u9ed1\u8272\u56fe\u50cf\uff0c\u5b83\u53ef\u4ee5\u4e0e\u90a3\u4e9b\u672a\u5b9a\u4e49\u7eb9\u7406\u4f46\u5b9a\u4e49\u4e86\u989c\u8272\u7684\u6a21\u578b\u7ed3\u5408\u4f7f\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u7247\u5143\u7740\u8272\u5668\u4e2d\u5c06\u4e8c\u8005\u7ed3\u5408\u3002<code>TextureCache</code>\u7c7b\u7684\u5b9e\u4f8b\u5c06\u88ab\u4fdd\u5b58\u5728<code>Scene</code>\u7c7b\u4e2d\uff1a</p> <pre><code>public class Scene {\n    ...\n    private TextureCache textureCache;\n    ...\n    public Scene(int width, int height) {\n        ...\n        textureCache = new TextureCache();\n    }\n    ...\n    public TextureCache getTextureCache() {\n        return textureCache;\n    }\n    ...\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u66f4\u6539\u6a21\u578b\u7684\u5b9a\u4e49\u65b9\u5f0f\uff0c\u4ee5\u6dfb\u52a0\u5bf9\u7eb9\u7406\u7684\u652f\u6301\u3002\u4e3a\u6b64\uff0c\u4e5f\u4e3a\u4e86\u4e3a\u63a5\u4e0b\u6765\u7ae0\u8282\u4e2d\u5c06\u52a0\u8f7d\u7684\u66f4\u590d\u6742\u6a21\u578b\u505a\u597d\u51c6\u5907\uff0c\u6211\u4eec\u5c06\u5f15\u5165\u4e00\u4e2a\u540d\u4e3a <code>Material</code> \u7684\u65b0\u7c7b\u3002\u8fd9\u4e2a\u7c7b\u5c06\u5305\u542b\u7eb9\u7406\u8def\u5f84\u4ee5\u53ca\u4e00\u4e2a <code>Mesh</code> \u5b9e\u4f8b\u7684\u5217\u8868\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u628a <code>Model</code> \u5b9e\u4f8b\u4e0e\u4e00\u4e2a <code>Material</code> \u5217\u8868\u5173\u8054\uff0c\u800c\u4e0d\u518d\u662f <code>Mesh</code> \u5217\u8868\u3002\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c<code>Material</code> \u8fd8\u5c06\u80fd\u591f\u5305\u542b\u5176\u4ed6\u5c5e\u6027\uff0c\u6bd4\u5982\u6f2b\u53cd\u5c04\u989c\u8272\u6216\u9ad8\u5149\u989c\u8272\u7b49\u3002</p> <p><code>Material</code>\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport java.util.*;\n\npublic class Material {\n\n    private List&lt;Mesh&gt; meshList;\n    private String texturePath;\n\n    public Material() {\n        meshList = new ArrayList&lt;&gt;();\n    }\n\n    public void cleanup() {\n        meshList.forEach(Mesh::cleanup);\n    }\n\n    public List&lt;Mesh&gt; getMeshList() {\n        return meshList;\n    }\n\n    public String getTexturePath() {\n        return texturePath;\n    }\n\n    public void setTexturePath(String texturePath) {\n        this.texturePath = texturePath;\n    }\n}\n</code></pre> <p>\u7531\u4e8e<code>Mesh</code>\u5b9e\u4f8b\u73b0\u5728\u5c5e\u4e8e<code>Material</code>\u7c7b\uff0c\u6211\u4eec\u9700\u8981\u76f8\u5e94\u4fee\u6539<code>Model</code>\u7c7b\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjglb.engine.scene.Entity;\n\nimport java.util.*;\n\npublic class Model {\n\n    private final String id;\n    private List&lt;Entity&gt; entitiesList;\n    private List&lt;Material&gt; materialList;\n\n    public Model(String id, List&lt;Material&gt; materialList) {\n        this.id = id;\n        entitiesList = new ArrayList&lt;&gt;();\n        this.materialList = materialList;\n    }\n\n    public void cleanup() {\n        materialList.forEach(Material::cleanup);\n    }\n\n    public List&lt;Entity&gt; getEntitiesList() {\n        return entitiesList;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public List&lt;Material&gt; getMaterialList() {\n        return materialList;\n    }\n}\n</code></pre> <p>\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u4f20\u9012\u7eb9\u7406\u5750\u6807\u4f5c\u4e3a\u53e6\u4e00\u4e2aVBO\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u4fee\u6539<code>Mesh</code>\u7c7b\u4ee5\u63a5\u53d7\u5305\u542b\u7eb9\u7406\u5750\u6807\u7684\u6d6e\u70b9\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u989c\u8272\u3002<code>Mesh</code>\u7c7b\u4fee\u6539\u5982\u4e0b\uff1a</p> <pre><code>public class Mesh {\n    ...\n    public Mesh(float[] positions, float[] textCoords, int[] indices) {\n        numVertices = indices.length;\n        vboIdList = new ArrayList&lt;&gt;();\n\n        vaoId = glGenVertexArrays();\n        glBindVertexArray(vaoId);\n\n        // Positions VBO\n        int vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer positionsBuffer = MemoryUtil.memCallocFloat(positions.length);\n        positionsBuffer.put(0, positions);\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, positionsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(0);\n        glVertexAttribPointer(0, 3, GL_FLOAT, false, 0, 0);\n\n        // Texture coordinates VBO\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer textCoordsBuffer = MemoryUtil.memCallocFloat(textCoords.length);\n        textCoordsBuffer.put(0, textCoords);\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, textCoordsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(1);\n        glVertexAttribPointer(1, 2, GL_FLOAT, false, 0, 0);\n\n        // Index VBO\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        IntBuffer indicesBuffer = MemoryUtil.memCallocInt(indices.length);\n        indicesBuffer.put(0, indices);\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indicesBuffer, GL_STATIC_DRAW);\n\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n        glBindVertexArray(0);\n\n        MemoryUtil.memFree(positionsBuffer);\n        MemoryUtil.memFree(textCoordsBuffer);\n        MemoryUtil.memFree(indicesBuffer);\n    }\n    ...\n}\n</code></pre>"},{"location":"07-textures/#_2","title":"\u4f7f\u7528\u7eb9\u7406","text":"<p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7eb9\u7406\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u6539\u53d8\u4e86\u7b2c\u4e8c\u4e2a\u8f93\u5165\u53c2\u6570\uff0c\u56e0\u4e3a\u5b83\u73b0\u5728\u662f<code>vec2</code>\u7c7b\u578b\uff08\u6211\u4eec\u4e5f\u6539\u53d8\u4e86\u53c2\u6570\u540d\u79f0\uff09\u3002\u9876\u70b9\u7740\u8272\u5668\uff0c\u5c31\u50cf\u5904\u7406\u989c\u8272\u4e00\u6837\uff0c\u53ea\u662f\u5c06\u7eb9\u7406\u5750\u6807\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u4f7f\u7528\u3002</p> <pre><code>#version 330\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec2 texCoord;\n\nout vec2 outTextCoord;\n\nuniform mat4 projectionMatrix;\nuniform mat4 modelMatrix;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * modelMatrix * vec4(position, 1.0);\n    outTextCoord = texCoord;\n}\n</code></pre> <p>\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u7eb9\u7406\u5750\u6807\u6765\u901a\u8fc7\u91c7\u6837\u7eb9\u7406\uff08\u901a\u8fc7\u4e00\u4e2a <code>sampler2D</code> \u7edf\u4e00\u53d8\u91cf\uff09\u6765\u8bbe\u7f6e\u50cf\u7d20\u989c\u8272\u3002</p> <pre><code>#version 330\n\nin vec2 outTextCoord;\n\nout vec4 fragColor;\n\nuniform sampler2D txtSampler;\n\nvoid main()\n{\n    fragColor = texture(txtSampler, outTextCoord);\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u5c06\u770b\u5230\u8fd9\u4e00\u5207\u5982\u4f55\u5728<code>SceneRender</code>\u7c7b\u4e2d\u4f7f\u7528\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u7eb9\u7406\u91c7\u6837\u5668\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7edf\u4e00\u53d8\u91cf\u3002</p> <pre><code>public class SceneRender {\n    ...\n    private void createUniforms() {\n        ...\n        uniformsMap.createUniform(\"txtSampler\");\n    }\n    ...\n}\n</code></pre> <p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6e32\u67d3\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7eb9\u7406\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    public void render(Scene scene) {\n        shaderProgram.bind();\n\n        uniformsMap.setUniform(\"projectionMatrix\", scene.getProjection().getProjMatrix());\n\n        uniformsMap.setUniform(\"txtSampler\", 0);\n\n        Collection&lt;Model&gt; models = scene.getModelMap().values();\n        TextureCache textureCache = scene.getTextureCache();\n        for (Model model : models) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n\n            for (Material material : model.getMaterialList()) {\n                Texture texture = textureCache.getTexture(material.getTexturePath());\n                glActiveTexture(GL_TEXTURE0);\n                texture.bind();\n\n                for (Mesh mesh : material.getMeshList()) {\n                    glBindVertexArray(mesh.getVaoId());\n                    for (Entity entity : entities) {\n                        uniformsMap.setUniform(\"modelMatrix\", entity.getModelMatrix());\n                        glDrawElements(GL_TRIANGLES, mesh.getNumVertices(), GL_UNSIGNED_INT, 0);\n                    }\n                }\n            }\n        }\n\n        glBindVertexArray(0);\n\n        shaderProgram.unbind();\n    }\n}\n</code></pre> <p>\u6b63\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9996\u5148\u5c06\u7eb9\u7406\u91c7\u6837\u5668\u7edf\u4e00\u53d8\u91cf\u8bbe\u7f6e\u4e3a <code>0</code>\u3002\u8ba9\u6211\u4eec\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u3002\u663e\u5361\u6709\u51e0\u4e2a\u7a7a\u95f4\u6216\u63d2\u69fd\u6765\u5b58\u50a8\u7eb9\u7406\u3002\u6bcf\u4e2a\u8fd9\u6837\u7684\u7a7a\u95f4\u79f0\u4e3a\u4e00\u4e2a\u7eb9\u7406\u5355\u5143\u3002\u5f53\u6211\u4eec\u4f7f\u7528\u7eb9\u7406\u65f6\uff0c\u5fc5\u987b\u8bbe\u7f6e\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u7684\u7eb9\u7406\u5355\u5143\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u4e00\u4e2a\u7eb9\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4f7f\u7528\u7eb9\u7406\u5355\u5143 <code>0</code>\u3002\u7edf\u4e00\u53d8\u91cf\u7684\u7c7b\u578b\u662f <code>sampler2D</code>\uff0c\u5b83\u5c06\u4fdd\u5b58\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u7684\u7eb9\u7406\u5355\u5143\u7684\u503c\u3002\u5f53\u6211\u4eec\u904d\u5386\u6a21\u578b\u548c\u6750\u8d28\u65f6\uff0c\u6211\u4eec\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u4e0e\u6bcf\u4e2a\u6750\u8d28\u5173\u8054\u7684\u7eb9\u7406\uff0c\u901a\u8fc7\u8c03\u7528 <code>glActiveTexture</code> \u51fd\u6570\u5e76\u4f20\u5165\u53c2\u6570 <code>GL_TEXTURE0</code> \u6765\u6fc0\u6d3b\u7eb9\u7406\u5355\u5143\uff0c\u7136\u540e\u7ed1\u5b9a\u5b83\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5c06\u7eb9\u7406\u5355\u5143\u4e0e\u7eb9\u7406\u6807\u8bc6\u7b26\u5173\u8054\u8d77\u6765\u7684\u65b9\u5f0f\u3002</p> <p>\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539<code>UniformsMap</code>\u7c7b\uff0c\u6dfb\u52a0\u4e00\u4e2a\u63a5\u53d7\u6574\u6570\u7684\u65b0\u65b9\u6cd5\u6765\u8bbe\u7f6e\u91c7\u6837\u5668\u503c\uff0c\u8be5\u65b9\u6cd5\u4e5f\u5c06\u88ab\u79f0\u4e3a<code>setUniform</code>\uff0c\u4f46\u63a5\u53d7\u7edf\u4e00\u53d8\u91cf\u7684\u540d\u79f0\u548c\u4e00\u4e2a\u6574\u6570\u503c\u3002\u7531\u4e8e\u8bbe\u7f6e\u77e9\u9635\u7684<code>setUniform</code>\u65b9\u6cd5\u548c\u8fd9\u4e2a\u65b0\u65b9\u6cd5\u4e4b\u95f4\u4f1a\u91cd\u590d\u4e00\u4e9b\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u63d0\u53d6\u83b7\u53d6\u7edf\u4e00\u53d8\u91cf\u4f4d\u7f6e\u7684\u4ee3\u7801\u90e8\u5206\u5230\u4e00\u4e2a\u540d\u4e3a<code>getUniformLocation</code>\u7684\u65b0\u65b9\u6cd5\u4e2d\u3002<code>UniformsMap</code>\u7c7b\u7684\u66f4\u6539\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>public class UniformsMap {\n    ...\n    private int getUniformLocation(String uniformName) {\n        Integer location = uniforms.get(uniformName);\n        if (location == null) {\n            throw new RuntimeException(\"Could not find uniform [\" + uniformName + \"]\");\n        }\n        return location.intValue();\n    }\n\n    public void setUniform(String uniformName, int value) {\n        glUniform1i(getUniformLocation(uniformName), value);\n    }\n\n    public void setUniform(String uniformName, Matrix4f value) {\n        try (MemoryStack stack = MemoryStack.stackPush()) {\n            glUniformMatrix4fv(getUniformLocation(uniformName), false, value.get(stack.mallocFloat(16)));\n        }\n    }\n    ...\n}\n</code></pre> <p>\u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u4fee\u6539\u4e86\u4ee3\u7801\u5e93\u4ee5\u652f\u6301\u7eb9\u7406\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e3a\u6211\u4eec\u76843D\u7acb\u65b9\u4f53\u8bbe\u7f6e\u7eb9\u7406\u5750\u6807\u3002\u6211\u4eec\u7684\u7eb9\u7406\u56fe\u50cf\u6587\u4ef6\u5c06\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u5728\u6211\u4eec\u76843D\u6a21\u578b\u4e2d\uff0c\u6709\u516b\u4e2a\u9876\u70b9\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u9996\u5148\u5b9a\u4e49\u6bcf\u4e2a\u9876\u70b9\u7684\u524d\u9762\u7684\u7eb9\u7406\u5750\u6807\u3002</p> <p></p> \u9876\u70b9 \u7eb9\u7406\u5750\u6807 V0 \\(0.0, 0.0\\) V1 \\(0.0, 0.5\\) V2 \\(0.5, 0.5\\) V3 \\(0.5, 0.0\\) <p>\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u5b9a\u4e49\u9876\u9762\u7684\u7eb9\u7406\u6620\u5c04\u3002</p> <p></p> \u9876\u70b9 \u7eb9\u7406\u5750\u6807 V4 \\(0.0, 0.5\\) V5 \\(0.5, 0.5\\) V0 \\(0.0, 1.0\\) V3 \\(0.5, 1.0\\) <p>\u6b63\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u76f8\u540c\u7684\u9876\u70b9\uff08V0\u548cV3\uff09\u8bbe\u7f6e\u4e0d\u540c\u7684\u7eb9\u7406\u5750\u6807\u3002\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u552f\u4e00\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u91cd\u590d\u4e00\u4e9b\u9876\u70b9\u5e76\u5173\u8054\u4e0d\u540c\u7684\u7eb9\u7406\u5750\u6807\u3002\u5bf9\u4e8e\u9876\u9762\uff0c\u6211\u4eec\u9700\u8981\u91cd\u590d\u56db\u4e2a\u9876\u70b9\u5e76\u4e3a\u5b83\u4eec\u5206\u914d\u6b63\u786e\u7684\u7eb9\u7406\u5750\u6807\u3002</p> <p>\u7531\u4e8e\u6b63\u9762\u3001\u80cc\u9762\u548c\u4fa7\u9762\u4f7f\u7528\u76f8\u540c\u7684\u7eb9\u7406\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u91cd\u590d\u6240\u6709\u8fd9\u4e9b\u9876\u70b9\u3002\u4f60\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u4e2d\u627e\u5230\u5b8c\u6574\u7684\u5b9a\u4e49\uff0c\u4f46\u6211\u4eec\u9700\u8981\u4ece8\u4e2a\u70b9\u589e\u52a0\u523020\u4e2a\u3002</p> <p>\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u52a0\u8f7d\u75313D\u5efa\u6a21\u5de5\u5177\u751f\u6210\u7684\u6a21\u578b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u624b\u52a8\u5b9a\u4e49\u4f4d\u7f6e\u548c\u7eb9\u7406\u5750\u6807\u4e86\uff08\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u6a21\u578b\u6765\u8bf4\uff0c\u624b\u52a8\u5b9a\u4e49\u662f\u4e0d\u5207\u5b9e\u9645\u7684\uff09\u3002</p> <p>\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539<code>Main</code>\u7c7b\u4e2d\u7684<code>init</code>\u65b9\u6cd5\u6765\u5b9a\u4e49\u7eb9\u7406\u5750\u6807\u5e76\u52a0\u8f7d\u7eb9\u7406\u6570\u636e\uff1a</p> <pre><code>public class Main implements IAppLogic {\n    private Entity cubeEntity;\n\n    public static void main(String[] args) {\n        Main main = new Main();\n        Engine gameEng = new Engine(\"chapter-07\", new Window.WindowOptions(), main);\n        gameEng.start();\n    }\n\n    public void init(Window window, Scene scene, Render render) {\n        float[] positions = new float[]{\n                // V0\n                -0.5f, 0.5f, 0.5f,\n                // V1\n                -0.5f, -0.5f, 0.5f,\n                // V2\n                0.5f, -0.5f, 0.5f,\n                // V3\n                0.5f, 0.5f, 0.5f,\n                // V4\n                -0.5f, 0.5f, -0.5f,\n                // V5\n                0.5f, 0.5f, -0.5f,\n                // V6\n                -0.5f, -0.5f, -0.5f,\n                // V7\n                0.5f, -0.5f, -0.5f,\n\n                // \u4e3a\u9876\u9762\u7eb9\u7406\u5750\u6807\u91cd\u590d\u7684\u9876\u70b9\n                // V8: V4 repeated\n                -0.5f, 0.5f, -0.5f,\n                // V9: V5 repeated\n                0.5f, 0.5f, -0.5f,\n                // V10: V0 repeated\n                -0.5f, 0.5f, 0.5f,\n                // V11: V3 repeated\n                0.5f, 0.5f, 0.5f,\n\n                // \u4e3a\u53f3\u4fa7\u9762\u7eb9\u7406\u5750\u6807\u91cd\u590d\u7684\u9876\u70b9\n                // V12: V3 repeated\n                0.5f, 0.5f, 0.5f,\n                // V13: V2 repeated\n                0.5f, -0.5f, 0.5f,\n\n                // \u4e3a\u5de6\u4fa7\u9762\u7eb9\u7406\u5750\u6807\u91cd\u590d\u7684\u9876\u70b9\n                // V14: V0 repeated\n                -0.5f, 0.5f, 0.5f,\n                // V15: V1 repeated\n                -0.5f, -0.5f, 0.5f,\n\n                // \u4e3a\u5e95\u9762\u7eb9\u7406\u5750\u6807\u91cd\u590d\u7684\u9876\u70b9\n                // V16: V6 repeated\n                -0.5f, -0.5f, -0.5f,\n                // V17: V7 repeated\n                0.5f, -0.5f, -0.5f,\n                // V18: V1 repeated\n                -0.5f, -0.5f, 0.5f,\n                // V19: V2 repeated\n                0.5f, -0.5f, 0.5f,\n        };\n\n        float[] textCoords = new float[]{\n                // \u6b63\u9762\u7eb9\u7406\u5750\u6807\n                0.0f, 0.0f,\n                0.0f, 0.5f,\n                0.5f, 0.5f,\n                0.5f, 0.0f,\n\n                // \u80cc\u9762\u7eb9\u7406\u5750\u6807\n                0.0f, 0.0f,\n                0.5f, 0.0f,\n                0.0f, 0.5f,\n                0.5f, 0.5f,\n\n                // \u9876\u9762\u7eb9\u7406\u5750\u6807\n                0.0f, 0.5f,\n                0.5f, 0.5f,\n                0.0f, 1.0f,\n                0.5f, 1.0f,\n\n                // \u53f3\u4fa7\u9762\u7eb9\u7406\u5750\u6807\n                0.0f, 0.0f,\n                0.0f, 0.5f,\n\n                // \u5de6\u4fa7\u9762\u7eb9\u7406\u5750\u6807\n                0.5f, 0.0f,\n                0.5f, 0.5f,\n\n                // \u5e95\u9762\u7eb9\u7406\u5750\u6807\n                0.5f, 0.0f,\n                1.0f, 0.0f,\n                0.5f, 0.5f,\n                1.0f, 0.5f,\n        };\n\n        int[] indices = new int[]{\n                // \u6b63\u9762\n                0, 1, 3, 3, 1, 2,\n                // \u9876\u9762\n                8, 10, 11, 9, 8, 11,\n                // \u53f3\u4fa7\u9762\n                12, 13, 7, 5, 12, 7,\n                // \u5de6\u4fa7\u9762\n                14, 15, 6, 4, 14, 6,\n                // \u5e95\u9762\n                16, 18, 19, 17, 16, 19,\n                // \u80cc\u9762\n                4, 6, 7, 5, 4, 7,\n        };\n\n        Texture texture = scene.getTextureCache().createTexture(\"resources/models/cube/cube.png\");\n        Material material = new Material();\n        material.setTexturePath(texture.getTexturePath());\n        List&lt;Material&gt; materialList = new ArrayList&lt;&gt;();\n        materialList.add(material);\n\n        Mesh mesh = new Mesh(positions, textCoords, indices);\n        material.getMeshList().add(mesh);\n        Model cubeModel = new Model(\"cube-model\", materialList);\n        scene.addModel(cubeModel);\n\n        cubeEntity = new Entity(\"cube-entity\", cubeModel.getId());\n        cubeEntity.setPosition(0, 0, -2);\n        scene.addEntity(cubeEntity);\n    }\n\n    // \u4fdd\u7559\u5176\u4ed6\u65b9\u6cd5...\n}\n</code></pre> <p>\u6700\u7ec8\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"08-camera/","title":"\u7b2c08\u7ae0 \u6444\u50cf\u673a\uff08Camera\uff09","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5728\u6e32\u67d3\u76843D\u573a\u666f\u4e2d\u79fb\u52a8\u3002\u8fd9\u4e2a\u529f\u80fd\u5c31\u50cf\u62e5\u6709\u4e00\u4e2a\u53ef\u4ee5\u57283D\u4e16\u754c\u4e2d\u79fb\u52a8\u7684\u6444\u50cf\u673a\uff0c\u5b9e\u9645\u4e0a\u8fd9\u5c31\u662f\u7528\u6765\u6307\u4ee3\u5b83\u7684\u672f\u8bed\u3002</p> <p>\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"08-camera/#_1","title":"\u6444\u50cf\u673a\u7b80\u4ecb","text":"<p>\u5982\u679c\u4f60\u5c1d\u8bd5\u5728OpenGL\u4e2d\u641c\u7d22\u7279\u5b9a\u7684\u6444\u50cf\u673a\u51fd\u6570\uff0c\u4f60\u4f1a\u53d1\u73b0\u5e76\u6ca1\u6709\u6444\u50cf\u673a\u7684\u6982\u5ff5\uff0c\u6216\u8005\u8bf4\u6444\u50cf\u673a\u59cb\u7ec8\u662f\u56fa\u5b9a\u7684\uff0c\u4f4d\u4e8e\u5c4f\u5e55\u4e2d\u5fc3\u7684(0, 0, 0)\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u6a21\u62df\u6765\u5b9e\u73b0\u4e00\u4e2a\u80fd\u591f\u57283D\u573a\u666f\u4e2d\u79fb\u52a8\u7684\u6444\u50cf\u673a\u3002\u6211\u4eec\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u5462\uff1f\u65e2\u7136\u6211\u4eec\u65e0\u6cd5\u79fb\u52a8\u6444\u50cf\u673a\uff0c\u90a3\u4e48\u6211\u4eec\u5fc5\u987b\u540c\u65f6\u79fb\u52a83D\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u80fd\u79fb\u52a8\u6444\u50cf\u673a\uff0c\u6211\u4eec\u5c31\u79fb\u52a8\u6574\u4e2a\u4e16\u754c\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u5e0c\u671b\u5c06\u6444\u50cf\u673a\u4f4d\u7f6e\u6cbfz\u8f74\u4ece\u521d\u59cb\u4f4d\u7f6e(Cx, Cy, Cz)\u79fb\u52a8\u5230\u4f4d\u7f6e(Cx, Cy, Cz+dz)\uff0c\u4ee5\u66f4\u63a5\u8fd1\u4f4d\u4e8e\u5750\u6807(Ox, Oy, Oz)\u7684\u5bf9\u8c61\u3002</p> <p></p> <p>\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5c06\u505a\u7684\u662f\u5c06\u5bf9\u8c61\uff08\u5b9e\u9645\u4e0a\u662f3D\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\uff09\u5411\u6444\u50cf\u673a\u5e94\u8be5\u79fb\u52a8\u7684\u76f8\u53cd\u65b9\u5411\u79fb\u52a8\u3002\u53ef\u4ee5\u60f3\u8c61\u8fd9\u4e9b\u5bf9\u8c61\u88ab\u653e\u5728\u8dd1\u6b65\u673a\u4e0a\u3002</p> <p></p> <p>\u6444\u50cf\u673a\u53ef\u4ee5\u6cbf\u4e09\u4e2a\u8f74\uff08x\u3001y\u548cz\uff09\u79fb\u52a8\uff0c\u4e5f\u53ef\u4ee5\u7ed5\u5b83\u4eec\u65cb\u8f6c\uff08\u6eda\u52a8\u3001\u4fef\u4ef0\u548c\u504f\u822a\uff09\u3002</p> <p></p> <p>\u56e0\u6b64\uff0c\u57fa\u672c\u4e0a\u6211\u4eec\u5fc5\u987b\u80fd\u591f\u79fb\u52a8\u548c\u65cb\u8f6c3D\u4e16\u754c\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u3002\u6211\u4eec\u5c06\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\uff1f\u7b54\u6848\u662f\u901a\u8fc7\u5e94\u7528\u53e6\u4e00\u4e2a\u53d8\u6362\uff0c\u5c06\u6240\u6709\u5bf9\u8c61\u7684\u6240\u6709\u9876\u70b9\u5411\u6444\u50cf\u673a\u79fb\u52a8\u7684\u76f8\u53cd\u65b9\u5411\u5e73\u79fb\uff0c\u5e76\u6839\u636e\u6444\u50cf\u673a\u7684\u65cb\u8f6c\u8fdb\u884c\u65cb\u8f6c\u3002\u5f53\u7136\uff0c\u8fd9\u5c06\u901a\u8fc7\u53e6\u4e00\u4e2a\u77e9\u9635\u6765\u5b8c\u6210\uff0c\u5373\u6240\u8c13\u7684\u89c6\u56fe\u77e9\u9635\uff08View Matrix\uff09\u3002\u8fd9\u4e2a\u77e9\u9635\u5c06\u9996\u5148\u6267\u884c\u5e73\u79fb\uff0c\u7136\u540e\u6cbf\u8f74\u65cb\u8f6c\u3002</p> <p>\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u6784\u9020\u8fd9\u4e2a\u77e9\u9635\u3002\u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\u53d8\u6362\u7ae0\u8282\uff0c\u6211\u4eec\u7684\u53d8\u6362\u65b9\u7a0b\u662f\u8fd9\u6837\u7684\uff1a</p> \\[ \\begin{array}{lcl} \u53d8\u6362\u77e9\u9635 &amp; = &amp; \\lbrack\u6295\u5f71\u77e9\u9635\\rbrack  \\cdot \\lbrack\u5e73\u79fb\u77e9\u9635\\rbrack  \\cdot \\lbrack\u65cb\u8f6c\u77e9\u9635\\rbrack  \\cdot \\lbrack\u7f29\u653e\u77e9\u9635\\rbrack \\\\ &amp; = &amp; \\lbrack\u6295\u5f71\u77e9\u9635\\rbrack  \\cdot \\lbrack\u4e16\u754c\u77e9\u9635\\rbrack \\end{array} \\] <p>\u89c6\u56fe\u77e9\u9635\u5e94\u8be5\u5728\u4e58\u4ee5\u6295\u5f71\u77e9\u9635\u4e4b\u524d\u5e94\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u65b9\u7a0b\u73b0\u5728\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a</p> \\[ \\begin{array}{lcl} \u53d8\u6362\u77e9\u9635 &amp; = &amp; \\lbrack\u6295\u5f71\u77e9\u9635\\rbrack  \\cdot \\lbrack\u89c6\u56fe\u77e9\u9635\\rbrack  \\cdot \\lbrack\u5e73\u79fb\u77e9\u9635\\rbrack  \\cdot \\lbrack\u65cb\u8f6c\u77e9\u9635\\rbrack  \\cdot \\lbrack\u7f29\u653e\u77e9\u9635\\rbrack \\\\ &amp; = &amp; \\lbrack\u6295\u5f71\u77e9\u9635\\rbrack  \\cdot \\lbrack\u89c6\u56fe\u77e9\u9635\\rbrack  \\cdot \\lbrack\u4e16\u754c\u77e9\u9635\\rbrack \\end{array} \\]"},{"location":"08-camera/#_2","title":"\u6444\u50cf\u673a\u5b9e\u73b0","text":"<p>\u8ba9\u6211\u4eec\u5f00\u59cb\u4fee\u6539\u4ee3\u7801\u4ee5\u652f\u6301\u6444\u50cf\u673a\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>Camera</code>\u7684\u65b0\u7c7b\uff0c\u5b83\u5c06\u4fdd\u5b58\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u72b6\u6001\u4ee5\u53ca\u5176\u89c6\u56fe\u77e9\u9635\u3002\u8be5\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.scene;\n\nimport org.joml.*;\n\npublic class Camera {\n\n    private Vector3f direction;\n    private Vector3f position;\n    private Vector3f right;\n    private Vector2f rotation;\n    private Vector3f up;\n    private Matrix4f viewMatrix;\n\n    public Camera() {\n        direction = new Vector3f();\n        right = new Vector3f();\n        up = new Vector3f();\n        position = new Vector3f();\n        viewMatrix = new Matrix4f();\n        rotation = new Vector2f();\n    }\n\n    public void addRotation(float x, float y) {\n        rotation.add(x, y);\n        recalculate();\n    }\n\n    public Vector3f getPosition() {\n        return position;\n    }\n\n    public Matrix4f getViewMatrix() {\n        return viewMatrix;\n    }\n\n    public void moveBackwards(float inc) {\n        viewMatrix.positiveZ(direction).negate().mul(inc);\n        position.sub(direction);\n        recalculate();\n    }\n\n    public void moveDown(float inc) {\n        viewMatrix.positiveY(up).mul(inc);\n        position.sub(up);\n        recalculate();\n    }\n\n    public void moveForward(float inc) {\n        viewMatrix.positiveZ(direction).negate().mul(inc);\n        position.add(direction);\n        recalculate();\n    }\n\n    public void moveLeft(float inc) {\n        viewMatrix.positiveX(right).mul(inc);\n        position.sub(right);\n        recalculate();\n    }\n\n    public void moveRight(float inc) {\n        viewMatrix.positiveX(right).mul(inc);\n        position.add(right);\n        recalculate();\n    }\n\n    public void moveUp(float inc) {\n        viewMatrix.positiveY(up).mul(inc);\n        position.add(up);\n        recalculate();\n    }\n\n    private void recalculate() {\n        viewMatrix.identity()\n                .rotateX(rotation.x)\n                .rotateY(rotation.y)\n                .translate(-position.x, -position.y, -position.z);\n    }\n\n    public void setPosition(float x, float y, float z) {\n        position.set(x, y, z);\n        recalculate();\n    }\n\n    public void setRotation(float x, float y) {\n        rotation.set(x, y);\n        recalculate();\n    }\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u9664\u4e86\u65cb\u8f6c\u548c\u4f4d\u7f6e\u5916\uff0c\u6211\u4eec\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5411\u91cf\u6765\u5b9a\u4e49\u524d\u8fdb\u3001\u4e0a\u548c\u53f3\u65b9\u5411\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u5b9e\u73b0\u4e00\u4e2a\u81ea\u7531\u7a7a\u95f4\u79fb\u52a8\u6444\u50cf\u673a\uff0c\u5f53\u6211\u4eec\u65cb\u8f6c\u5b83\u65f6\uff0c\u5982\u679c\u6211\u4eec\u60f3\u5411\u524d\u79fb\u52a8\uff0c\u6211\u4eec\u53ea\u60f3\u79fb\u52a8\u5230\u6444\u50cf\u673a\u6307\u5411\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u9884\u5b9a\u4e49\u7684\u8f74\u3002\u6211\u4eec\u9700\u8981\u83b7\u53d6\u8fd9\u4e9b\u5411\u91cf\u6765\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u5c06\u653e\u7f6e\u5728\u54ea\u91cc\u3002\u6700\u540e\uff0c\u6444\u50cf\u673a\u7684\u72b6\u6001\u5b58\u50a8\u5728\u4e00\u4e2a4x4\u77e9\u9635\u4e2d\uff0c\u5373\u89c6\u56fe\u77e9\u9635\uff0c\u56e0\u6b64\u6bcf\u5f53\u6211\u4eec\u66f4\u6539\u4f4d\u7f6e\u6216\u65cb\u8f6c\u65f6\u90fd\u9700\u8981\u66f4\u65b0\u5b83\u3002\u5982\u4f60\u6240\u89c1\uff0c\u5728\u66f4\u65b0\u89c6\u56fe\u77e9\u9635\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5148\u8fdb\u884c\u65cb\u8f6c\uff0c\u7136\u540e\u8fdb\u884c\u5e73\u79fb\u3002\u5982\u679c\u6211\u4eec\u53cd\u8fc7\u6765\u505a\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u6cbf\u7740\u6444\u50cf\u673a\u4f4d\u7f6e\u65cb\u8f6c\uff0c\u800c\u662f\u6cbf\u7740\u5750\u6807\u539f\u70b9\u65cb\u8f6c\u3002</p> <p><code>Camera</code>\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u5728\u5411\u524d\u3001\u5411\u4e0a\u6216\u5411\u53f3\u79fb\u52a8\u65f6\u66f4\u65b0\u4f4d\u7f6e\u7684\u65b9\u6cd5\u3002\u5728\u8fd9\u4e9b\u65b9\u6cd5\u4e2d\uff0c\u89c6\u56fe\u77e9\u9635\u7528\u4e8e\u6839\u636e\u5f53\u524d\u72b6\u6001\u8ba1\u7b97\u524d\u8fdb\u3001\u4e0a\u6216\u53f3\u65b9\u6cd5\u5e94\u8be5\u5728\u54ea\u91cc\uff0c\u5e76\u76f8\u5e94\u5730\u589e\u52a0\u4f4d\u7f6e\u3002\u6211\u4eec\u4f7f\u7528\u51fa\u8272\u7684JOML\u5e93\u6765\u4e3a\u6211\u4eec\u8fdb\u884c\u8fd9\u4e9b\u8ba1\u7b97\uff0c\u540c\u65f6\u4fdd\u6301\u4ee3\u7801\u975e\u5e38\u7b80\u5355\u3002</p>"},{"location":"08-camera/#_3","title":"\u4f7f\u7528\u6444\u50cf\u673a","text":"<p>\u6211\u4eec\u5c06\u5728<code>Scene</code>\u7c7b\u4e2d\u5b58\u50a8\u4e00\u4e2a<code>Camera</code>\u5b9e\u4f8b\uff0c\u56e0\u6b64\u8ba9\u6211\u4eec\u8fdb\u884c\u66f4\u6539\uff1a</p> <pre><code>public class Scene {\n    ...\n    private Camera camera;\n    ...\n    public Scene(int width, int height) {\n        ...\n        camera = new Camera();\n    }\n    ...\n    public Camera getCamera() {\n        return camera;\n    }\n    ...\n}\n</code></pre> <p>\u7528\u9f20\u6807\u63a7\u5236\u6444\u50cf\u673a\u4f1a\u5f88\u597d\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b\u6765\u5904\u7406\u9f20\u6807\u4e8b\u4ef6\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u6765\u66f4\u65b0\u6444\u50cf\u673a\u65cb\u8f6c\u3002\u4ee5\u4e0b\u662f\u8be5\u7c7b\u7684\u4ee3\u7801\u3002</p> <pre><code>package org.lwjglb.engine;\n\nimport org.joml.Vector2f;\n\nimport static org.lwjgl.glfw.GLFW.*;\n\npublic class MouseInput {\n\n    private Vector2f currentPos;\n    private Vector2f displVec;\n    private boolean inWindow;\n    private boolean leftButtonPressed;\n    private Vector2f previousPos;\n    private boolean rightButtonPressed;\n\n    public MouseInput(long windowHandle) {\n        previousPos = new Vector2f(-1, -1);\n        currentPos = new Vector2f();\n        displVec = new Vector2f();\n        leftButtonPressed = false;\n        rightButtonPressed = false;\n        inWindow = false;\n\n        glfwSetCursorPosCallback(windowHandle, (handle, xpos, ypos) -&gt; {\n            currentPos.x = (float) xpos;\n            currentPos.y = (float) ypos;\n        });\n        glfwSetCursorEnterCallback(windowHandle, (handle, entered) -&gt; inWindow = entered);\n        glfwSetMouseButtonCallback(windowHandle, (handle, button, action, mode) -&gt; {\n            leftButtonPressed = button == GLFW_MOUSE_BUTTON_1 &amp;&amp; action == GLFW_PRESS;\n            rightButtonPressed = button == GLFW_MOUSE_BUTTON_2 &amp;&amp; action == GLFW_PRESS;\n        });\n    }\n\n    public Vector2f getCurrentPos() {\n        return currentPos;\n    }\n\n    public Vector2f getDisplVec() {\n        return displVec;\n    }\n\n    public void input() {\n        displVec.x = 0;\n        displVec.y = 0;\n        if (previousPos.x &gt; 0 &amp;&amp; previousPos.y &gt; 0 &amp;&amp; inWindow) {\n            double deltax = currentPos.x - previousPos.x;\n            double deltay = currentPos.y - previousPos.y;\n            boolean rotateX = deltax != 0;\n            boolean rotateY = deltay != 0;\n            if (rotateX) {\n                displVec.y = (float) deltax;\n            }\n            if (rotateY) {\n                displVec.x = (float) deltay;\n            }\n        }\n        previousPos.x = currentPos.x;\n        previousPos.y = currentPos.y;\n    }\n\n    public boolean isLeftButtonPressed() {\n        return leftButtonPressed;\n    }\n\n    public boolean isRightButtonPressed() {\n        return rightButtonPressed;\n    }\n}\n</code></pre> <p><code>MouseInput</code>\u7c7b\u5728\u5176\u6784\u9020\u51fd\u6570\u4e2d\u6ce8\u518c\u4e86\u4e00\u7ec4\u56de\u8c03\u6765\u5904\u7406\u9f20\u6807\u4e8b\u4ef6\uff1a</p> <ul> <li><code>glfwSetCursorPosCallback</code>\uff1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u5f53\u9f20\u6807\u79fb\u52a8\u65f6\u8c03\u7528\u3002</li> <li><code>glfwSetCursorEnterCallback</code>\uff1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u5f53\u9f20\u6807\u8fdb\u5165\u6211\u4eec\u7684\u7a97\u53e3\u65f6\u8c03\u7528\u3002\u5373\u4f7f\u9f20\u6807\u4e0d\u5728\u6211\u4eec\u7684\u7a97\u53e3\u4e2d\uff0c\u6211\u4eec\u4e5f\u4f1a\u6536\u5230\u9f20\u6807\u4e8b\u4ef6\u3002\u6211\u4eec\u4f7f\u7528\u6b64\u56de\u8c03\u6765\u8ddf\u8e2a\u9f20\u6807\u4f55\u65f6\u5728\u6211\u4eec\u7684\u7a97\u53e3\u4e2d\u3002</li> <li><code>glfwSetMouseButtonCallback</code>\uff1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u5f53\u9f20\u6807\u6309\u94ae\u88ab\u6309\u4e0b\u65f6\u8c03\u7528\u3002</li> </ul> <p><code>MouseInput</code>\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a<code>input</code>\u65b9\u6cd5\uff0c\u5e94\u5728\u5904\u7406\u6e38\u620f\u8f93\u5165\u65f6\u8c03\u7528\u3002\u6b64\u65b9\u6cd5\u8ba1\u7b97\u9f20\u6807\u4ece\u5148\u524d\u4f4d\u7f6e\u7684\u4f4d\u79fb\u5e76\u5c06\u5176\u5b58\u50a8\u5728<code>displVec</code>\u53d8\u91cf\u4e2d\uff0c\u4ee5\u4fbf\u6211\u4eec\u7684\u6e38\u620f\u4f7f\u7528\u3002</p> <p><code>MouseInput</code>\u7c7b\u5c06\u5728\u6211\u4eec\u7684<code>Window</code>\u7c7b\u4e2d\u5b9e\u4f8b\u5316\uff0c\u8be5\u7c7b\u8fd8\u5c06\u63d0\u4f9b\u4e00\u4e2agetter\u6765\u8fd4\u56de\u5176\u5b9e\u4f8b\u3002</p> <pre><code>public class Window {\n    ...\n    private MouseInput mouseInput;\n    ...\n    public Window(String title, WindowOptions opts, Callable&lt;Void&gt; resizeFunc) {\n        ...\n        mouseInput = new MouseInput(windowHandle);\n    }\n    ...\n    public MouseInput getMouseInput() {\n        return mouseInput;\n    }\n    ...    \n}\n</code></pre> <p>\u5728<code>Engine</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u5c06\u5728\u5904\u7406\u5e38\u89c4\u8f93\u5165\u65f6\u4f7f\u7528\u9f20\u6807\u8f93\u5165\uff1a <pre><code>public class Engine {\n    ...\n    private void run() {\n        ...\n            if (targetFps &lt;= 0 || deltaFps &gt;= 1) {\n                window.getMouseInput().input();\n                appLogic.input(window, scene, now - initialTime);\n            }\n        ...\n    }\n    ...\n}\n</code></pre></p> <p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u9876\u70b9\u7740\u8272\u5668\u4ee5\u4f7f\u7528\u6444\u50cf\u673a\u7684\u89c6\u56fe\u77e9\u9635\uff0c\u6b63\u5982\u4f60\u53ef\u80fd\u731c\u5230\u7684\uff0c\u5b83\u5c06\u4f5c\u4e3a\u7edf\u4e00\u53d8\u91cf\u4f20\u9012\u3002</p> \u672c\u7ae0\u7684\u9876\u70b9\u7740\u8272\u5668\u4e4b\u524d\u7684\u9876\u70b9\u7740\u8272\u5668 <pre><code>#version 330\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec2 texCoord;\n\nout vec2 outTextCoord;\n\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 modelMatrix;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n    outTextCoord = texCoord;\n}\n</code></pre> <pre><code>#version 330\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec2 texCoord;\n\nout vec2 outTextCoord;\n\nuniform mat4 projectionMatrix;\nuniform mat4 modelMatrix;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * modelMatrix * vec4(position, 1.0);\n    outTextCoord = texCoord;\n}\n</code></pre> <p>\u56e0\u6b64\uff0c\u4e0b\u4e00\u6b65\u662f\u5728<code>SceneRender</code>\u7c7b\u4e2d\u6b63\u786e\u521b\u5efa\u7edf\u4e00\u53d8\u91cf\uff0c\u5e76\u5728\u6bcf\u6b21<code>render</code>\u8c03\u7528\u4e2d\u66f4\u65b0\u5176\u503c\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    private void createUniforms() {\n        ...\n        uniformsMap.createUniform(\"viewMatrix\");\n        ...\n    }    \n    ...\n    public void render(Scene scene) {\n        ...\n        uniformsMap.setUniform(\"projectionMatrix\", scene.getProjection().getProjMatrix());\n        uniformsMap.setUniform(\"viewMatrix\", scene.getCamera().getViewMatrix());\n        ...\n    }\n}\n</code></pre> <p>\u5c31\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u7684\u57fa\u7840\u4ee3\u7801\u652f\u6301\u6444\u50cf\u673a\u7684\u6982\u5ff5\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5b83\u3002\u6211\u4eec\u53ef\u4ee5\u66f4\u6539\u5904\u7406\u8f93\u5165\u548c\u66f4\u65b0\u6444\u50cf\u673a\u7684\u65b9\u5f0f\u3002\u6211\u4eec\u5c06\u8bbe\u7f6e\u4ee5\u4e0b\u63a7\u5236\uff1a</p> <ul> <li>\u6309\u952e\u201cA\u201d\u548c\u201cD\u201d\u5206\u522b\u5c06\u6444\u50cf\u673a\u5411\u5de6\u548c\u5411\u53f3\uff08x\u8f74\uff09\u79fb\u52a8\u3002</li> <li>\u6309\u952e\u201cW\u201d\u548c\u201cS\u201d\u5206\u522b\u5c06\u6444\u50cf\u673a\u5411\u524d\u548c\u5411\u540e\uff08z\u8f74\uff09\u79fb\u52a8\u3002</li> <li>\u6309\u952e\u201cZ\u201d\u548c\u201cX\u201d\u5206\u522b\u5c06\u6444\u50cf\u673a\u5411\u4e0a\u548c\u5411\u4e0b\uff08y\u8f74\uff09\u79fb\u52a8\u3002</li> </ul> <p>\u5f53\u9f20\u6807\u53f3\u952e\u6309\u4e0b\u65f6\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u9f20\u6807\u4f4d\u7f6e\u7ed5x\u548cy\u8f74\u65cb\u8f6c\u6444\u50cf\u673a\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u51c6\u5907\u66f4\u65b0\u6211\u4eec\u7684<code>Main</code>\u7c7b\u6765\u5904\u7406\u952e\u76d8\u548c\u9f20\u6807\u8f93\u5165\u3002</p> <pre><code>public class Main implements IAppLogic {\n\n    private static final float MOUSE_SENSITIVITY = 0.1f;\n    private static final float MOVEMENT_SPEED = 0.005f;\n    ...\n\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-08\", new Window.WindowOptions(), main);\n        ...\n    }\n    ...\n    public void input(Window window, Scene scene, long diffTimeMillis) {\n        float move = diffTimeMillis * MOVEMENT_SPEED;\n        Camera camera = scene.getCamera();\n        if (window.isKeyPressed(GLFW_KEY_W)) {\n            camera.moveForward(move);\n        } else if (window.isKeyPressed(GLFW_KEY_S)) {\n            camera.moveBackwards(move);\n        }\n        if (window.isKeyPressed(GLFW_KEY_A)) {\n            camera.moveLeft(move);\n        } else if (window.isKeyPressed(GLFW_KEY_D)) {\n            camera.moveRight(move);\n        }\n        if (window.isKeyPressed(GLFW_KEY_UP)) {\n            camera.moveUp(move);\n        } else if (window.isKeyPressed(GLFW_KEY_DOWN)) {\n            camera.moveDown(move);\n        }\n\n        MouseInput mouseInput = window.getMouseInput();\n        if (mouseInput.isRightButtonPressed()) {\n            Vector2f displVec = mouseInput.getDisplVec();\n            camera.addRotation((float) Math.toRadians(-displVec.x * MOUSE_SENSITIVITY),\n                    (float) Math.toRadians(-displVec.y * MOUSE_SENSITIVITY));\n        }\n    }\n    ...\n}\n</code></pre> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"09-loading-more-complex-models/","title":"\u7b2c09\u7ae0 - \u52a0\u8f7d\u590d\u6742\u6a21\u578b\uff1aAssimp\uff08Loading more complex models: Assimp\uff09","text":"<p>\u4e3a\u4e86\u5f00\u53d1\u6e38\u620f\uff0c\u80fd\u591f\u52a0\u8f7d\u4e0d\u540c\u683c\u5f0f\u7684\u590d\u67423D\u6a21\u578b\u81f3\u5173\u91cd\u8981\u3002\u4e3a\u67d0\u4e9b\u683c\u5f0f\u7f16\u5199\u89e3\u6790\u5668\u9700\u8981\u5927\u91cf\u5de5\u4f5c\uff0c\u5373\u4f7f\u4ec5\u652f\u6301\u5355\u4e00\u683c\u5f0f\u4e5f\u53ef\u80fd\u8017\u65f6\u3002\u5e78\u8fd0\u7684\u662f\uff0cAssimp\u5e93\u5df2\u53ef\u7528\u4e8e\u89e3\u6790\u591a\u79cd\u5e38\u89c13D\u683c\u5f0f\u3002\u8fd9\u662f\u4e00\u4e2aC/C++\u5e93\uff0c\u80fd\u52a0\u8f7d\u591a\u79cd\u683c\u5f0f\u7684\u9759\u6001\u548c\u52a8\u6001\u6a21\u578b\u3002\u8f7b\u91cf\u7ea7Java\u6e38\u620f\u5e93\u63d0\u4f9b\u4e86\u4eceJava\u4ee3\u7801\u8c03\u7528\u7684\u7ed1\u5b9a\u3002\u672c\u7ae0\u5c06\u4ecb\u7ecd\u5176\u4f7f\u7528\u65b9\u6cd5\u3002</p> <p>\u672c\u7ae0\u5b8c\u6574\u6e90\u4ee3\u7801\u53ef\u5728\u6b64\u5904\u627e\u5230\u3002</p>"},{"location":"09-loading-more-complex-models/#_1","title":"\u6a21\u578b\u52a0\u8f7d\u5668","text":"<p>\u9996\u5148\u5728\u9879\u76ee\u7684pom.xml\u4e2d\u6dfb\u52a0Assimp\u7684Maven\u4f9d\u8d56\u3002\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u7f16\u8bd1\u65f6\u548c\u8fd0\u884c\u65f6\u4f9d\u8d56\u3002</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.lwjgl&lt;/groupId&gt;\n    &lt;artifactId&gt;lwjgl-assimp&lt;/artifactId&gt;\n    &lt;version&gt;${lwjgl.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.lwjgl&lt;/groupId&gt;\n    &lt;artifactId&gt;lwjgl-assimp&lt;/artifactId&gt;\n    &lt;version&gt;${lwjgl.version}&lt;/version&gt;\n    &lt;classifier&gt;${native.target}&lt;/classifier&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre> <p>\u8bbe\u7f6e\u4f9d\u8d56\u540e\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>ModelLoader</code>\u7684\u65b0\u7c7b\uff0c\u7528\u4e8e\u901a\u8fc7Assimp\u52a0\u8f7d\u6a21\u578b\u3002\u8be5\u7c7b\u5b9a\u4e49\u4e86\u4e24\u4e2a\u9759\u6001\u516c\u5171\u65b9\u6cd5\uff1a</p> <pre><code>package org.lwjglb.engine.scene;\n\nimport org.joml.Vector4f;\nimport org.lwjgl.PointerBuffer;\nimport org.lwjgl.assimp.*;\nimport org.lwjgl.system.MemoryStack;\nimport org.lwjglb.engine.graph.*;\n\nimport java.io.File;\nimport java.nio.IntBuffer;\nimport java.util.*;\n\nimport static org.lwjgl.assimp.Assimp.*;\n\npublic class ModelLoader {\n\n    private ModelLoader() {\n        // \u5de5\u5177\u7c7b\n    }\n\n    public static Model loadModel(String modelId, String modelPath, TextureCache textureCache) {\n        return loadModel(modelId, modelPath, textureCache, aiProcess_GenSmoothNormals | aiProcess_JoinIdenticalVertices |\n                aiProcess_Triangulate | aiProcess_FixInfacingNormals | aiProcess_CalcTangentSpace | aiProcess_LimitBoneWeights |\n                aiProcess_PreTransformVertices);\n\n    }\n\n    public static Model loadModel(String modelId, String modelPath, TextureCache textureCache, int flags) {\n        ...\n\n    }\n    ...\n}\n</code></pre> <p>\u4e24\u4e2a\u65b9\u6cd5\u5177\u6709\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <ul> <li> <p><code>modelId</code>\uff1a\u8981\u52a0\u8f7d\u6a21\u578b\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002</p> </li> <li> <p><code>modelPath</code>\uff1a\u6a21\u578b\u6587\u4ef6\u6240\u5728\u8def\u5f84\u3002\u8fd9\u662f\u5e38\u89c4\u6587\u4ef6\u8def\u5f84\uff0c\u4e0d\u662fCLASSPATH\u76f8\u5bf9\u8def\u5f84\uff0c\u56e0\u4e3aAssimp\u53ef\u80fd\u9700\u8981\u52a0\u8f7d\u5176\u4ed6\u6587\u4ef6\uff0c\u5e76\u53ef\u80fd\u4f7f\u7528\u4e0e<code>modelPath</code>\u76f8\u540c\u7684\u57fa\u7840\u8def\u5f84\uff08\u4f8b\u5982\uff0cWavefront OBJ\u6587\u4ef6\u7684\u6750\u8d28\u6587\u4ef6\uff09\u3002\u5982\u679c\u5c06\u8d44\u6e90\u5d4c\u5165JAR\u6587\u4ef6\u4e2d\uff0cAssimp\u5c06\u65e0\u6cd5\u5bfc\u5165\uff0c\u56e0\u6b64\u5fc5\u987b\u662f\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u3002\u52a0\u8f7d\u7eb9\u7406\u65f6\uff0c\u6211\u4eec\u5c06\u4f7f\u7528<code>modelPath</code>\u83b7\u53d6\u6a21\u578b\u6240\u5728\u7684\u57fa\u7840\u76ee\u5f55\u4ee5\u52a0\u8f7d\u7eb9\u7406\uff08\u8986\u76d6\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684\u4efb\u4f55\u8def\u5f84\uff09\u3002\u8fd9\u6837\u505a\u662f\u56e0\u4e3a\u67d0\u4e9b\u6a21\u578b\u5305\u542b\u5f00\u53d1\u65f6\u672c\u5730\u6587\u4ef6\u5939\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u8fd9\u4e9b\u8def\u5f84\u663e\u7136\u65e0\u6cd5\u8bbf\u95ee\u3002</p> </li> <li> <p><code>textureCache</code>\uff1a\u5bf9\u7eb9\u7406\u7f13\u5b58\u7684\u5f15\u7528\uff0c\u4ee5\u907f\u514d\u591a\u6b21\u52a0\u8f7d\u540c\u4e00\u7eb9\u7406\u3002</p> </li> </ul> <p>\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u6709\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570<code>flags</code>\u3002\u6b64\u53c2\u6570\u5141\u8bb8\u8c03\u6574\u52a0\u8f7d\u8fc7\u7a0b\u3002\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u8c03\u7528\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\uff0c\u5e76\u4f20\u9012\u4e00\u4e9b\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6709\u7528\u7684\u503c\uff1a</p> <ul> <li> <p><code>aiProcess_JoinIdenticalVertices</code>\uff1a\u6b64\u6807\u5fd7\u51cf\u5c11\u4f7f\u7528\u7684\u9876\u70b9\u6570\u91cf\uff0c\u8bc6\u522b\u53ef\u5728\u9762\u4e4b\u95f4\u91cd\u590d\u4f7f\u7528\u7684\u9876\u70b9\u3002</p> </li> <li> <p><code>aiProcess_Triangulate</code>\uff1a\u6a21\u578b\u53ef\u80fd\u4f7f\u7528\u56db\u8fb9\u5f62\u6216\u5176\u4ed6\u51e0\u4f55\u5f62\u72b6\u5b9a\u4e49\u5176\u5143\u7d20\u3002\u7531\u4e8e\u6211\u4eec\u4ec5\u5904\u7406\u4e09\u89d2\u5f62\uff0c\u5fc5\u987b\u4f7f\u7528\u6b64\u6807\u5fd7\u5c06\u6240\u6709\u9762\u5206\u5272\u4e3a\u4e09\u89d2\u5f62\uff08\u5982\u679c\u9700\u8981\uff09\u3002</p> </li> <li> <p><code>aiProcess_FixInfacingNormals</code>\uff1a\u6b64\u6807\u5fd7\u5c1d\u8bd5\u53cd\u8f6c\u53ef\u80fd\u6307\u5411\u5185\u90e8\u7684\u6cd5\u7ebf\u3002</p> </li> <li> <p><code>aiProcess_CalcTangentSpace</code>\uff1a\u6211\u4eec\u5c06\u5728\u5b9e\u73b0\u5149\u7167\u65f6\u4f7f\u7528\u6b64\u53c2\u6570\uff0c\u4f46\u5b83\u57fa\u672c\u4e0a\u4f7f\u7528\u6cd5\u7ebf\u4fe1\u606f\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u3002  </p> </li> <li> <p><code>aiProcess_LimitBoneWeights</code>\uff1a\u6211\u4eec\u5c06\u5728\u5b9e\u73b0\u52a8\u753b\u65f6\u4f7f\u7528\u6b64\u53c2\u6570\uff0c\u4f46\u5b83\u57fa\u672c\u4e0a\u9650\u5236\u5f71\u54cd\u5355\u4e2a\u9876\u70b9\u7684\u6743\u91cd\u6570\u91cf\u3002</p> </li> <li> <p><code>aiProcess_PreTransformVertices</code>\uff1a\u6b64\u6807\u5fd7\u5bf9\u52a0\u8f7d\u7684\u6570\u636e\u6267\u884c\u4e00\u4e9b\u53d8\u6362\uff0c\u4f7f\u6a21\u578b\u4f4d\u4e8e\u539f\u70b9\uff0c\u5e76\u5c06\u5750\u6807\u6821\u6b63\u4e3a\u5339\u914dOpenGL\u5750\u6807\u7cfb\u3002\u5982\u679c\u9047\u5230\u6a21\u578b\u65cb\u8f6c\u95ee\u9898\uff0c\u8bf7\u786e\u4fdd\u4f7f\u7528\u6b64\u6807\u5fd7\u3002\u91cd\u8981\u63d0\u793a\uff1a\u5982\u679c\u6a21\u578b\u4f7f\u7528\u52a8\u753b\uff0c\u8bf7\u52ff\u4f7f\u7528\u6b64\u6807\u5fd7\uff0c\u6b64\u6807\u5fd7\u5c06\u5220\u9664\u52a8\u753b\u4fe1\u606f\u3002</p> </li> </ul> <p>\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u6807\u5fd7\u53ef\u7528\uff0c\u53ef\u4ee5\u5728LWJGL\u6216Assimp\u6587\u6863\u4e2d\u67e5\u770b\u3002</p> <p>\u8ba9\u6211\u4eec\u56de\u5230\u7b2c\u4e8c\u4e2a\u6784\u9020\u51fd\u6570\u3002\u9996\u5148\u8c03\u7528<code>aiImportFile</code>\u65b9\u6cd5\u4ee5\u52a0\u8f7d\u5177\u6709\u6240\u9009\u6807\u5fd7\u7684\u6a21\u578b\u3002</p> <pre><code>public class ModelLoader {\n    ...\n    public static Model loadModel(String modelId, String modelPath, TextureCache textureCache, int flags) {\n        File file = new File(modelPath);\n        if (!file.exists()) {\n            throw new RuntimeException(\"Model path does not exist [\" + modelPath + \"]\");\n        }\n        String modelDir = file.getParent();\n\n        AIScene aiScene = aiImportFile(modelPath, flags);\n        if (aiScene == null) {\n            throw new RuntimeException(\"Error loading model [modelPath: \" + modelPath + \"]\");\n        }\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u6784\u9020\u51fd\u6570\u7684\u5176\u4f59\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    public static Model loadModel(String modelId, String modelPath, TextureCache textureCache, int flags) {\n        ...\n        int numMaterials = aiScene.mNumMaterials();\n        List&lt;Material&gt; materialList = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; numMaterials; i++) {\n            AIMaterial aiMaterial = AIMaterial.create(aiScene.mMaterials().get(i));\n            materialList.add(processMaterial(aiMaterial, modelDir, textureCache));\n        }\n\n        int numMeshes = aiScene.mNumMeshes();\n        PointerBuffer aiMeshes = aiScene.mMeshes();\n        Material defaultMaterial = new Material();\n        for (int i = 0; i &lt; numMeshes; i++) {\n            AIMesh aiMesh = AIMesh.create(aiMeshes.get(i));\n            Mesh mesh = processMesh(aiMesh);\n            int materialIdx = aiMesh.mMaterialIndex();\n            Material material;\n            if (materialIdx &gt;= 0 &amp;&amp; materialIdx &lt; materialList.size()) {\n                material = materialList.get(materialIdx);\n            } else {\n                material = defaultMaterial;\n            }\n            material.getMeshList().add(mesh);\n        }\n\n        if (!defaultMaterial.getMeshList().isEmpty()) {\n            materialList.add(defaultMaterial);\n        }\n\n        return new Model(modelId, materialList);\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u5904\u7406\u6a21\u578b\u4e2d\u5305\u542b\u7684\u6750\u8d28\u3002\u6750\u8d28\u5b9a\u4e49\u4e86\u7ec4\u6210\u6a21\u578b\u7684\u7f51\u683c\u4f7f\u7528\u7684\u989c\u8272\u548c\u7eb9\u7406\u3002\u7136\u540e\u6211\u4eec\u5904\u7406\u4e0d\u540c\u7684\u7f51\u683c\u3002\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u7f51\u683c\uff0c\u6bcf\u4e2a\u7f51\u683c\u53ef\u4ee5\u4f7f\u7528\u6a21\u578b\u5b9a\u4e49\u7684\u4e00\u79cd\u6750\u8d28\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u6750\u8d28\u4e4b\u540e\u5904\u7406\u7f51\u683c\u5e76\u94fe\u63a5\u5230\u5b83\u4eec\uff0c\u4ee5\u907f\u514d\u5728\u6e32\u67d3\u65f6\u91cd\u590d\u7ed1\u5b9a\u8c03\u7528\u3002</p> <p>\u5982\u679c\u68c0\u67e5\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u8bb8\u591a\u5bf9Assimp\u5e93\u7684\u8c03\u7528\u8fd4\u56de<code>PointerBuffer</code>\u5b9e\u4f8b\u3002\u53ef\u4ee5\u5c06\u5b83\u4eec\u89c6\u4e3aC\u6307\u9488\uff0c\u5b83\u4eec\u53ea\u662f\u6307\u5411\u5305\u542b\u6570\u636e\u7684\u5185\u5b58\u533a\u57df\u3002\u9700\u8981\u63d0\u524d\u77e5\u9053\u5b83\u4eec\u4fdd\u5b58\u7684\u6570\u636e\u7c7b\u578b\u624d\u80fd\u5904\u7406\u5b83\u4eec\u3002\u5bf9\u4e8e\u6750\u8d28\uff0c\u6211\u4eec\u8fed\u4ee3\u8be5\u7f13\u51b2\u533a\u521b\u5efa<code>AIMaterial</code>\u7c7b\u7684\u5b9e\u4f8b\u3002\u5728\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8fed\u4ee3\u4fdd\u5b58\u7f51\u683c\u6570\u636e\u7684\u7f13\u51b2\u533a\u521b\u5efa<code>AIMesh</code>\u7c7b\u7684\u5b9e\u4f8b\u3002</p> <p>\u8ba9\u6211\u4eec\u68c0\u67e5<code>processMaterial</code>\u65b9\u6cd5\u3002</p> <pre><code>public class ModelLoader {\n    ...\n    private static Material processMaterial(AIMaterial aiMaterial, String modelDir, TextureCache textureCache) {\n        Material material = new Material();\n        try (MemoryStack stack = MemoryStack.stackPush()) {\n            AIColor4D color = AIColor4D.create();\n\n            int result = aiGetMaterialColor(aiMaterial, AI_MATKEY_COLOR_DIFFUSE, aiTextureType_NONE, 0,\n                    color);\n            if (result == aiReturn_SUCCESS) {\n                material.setDiffuseColor(new Vector4f(color.r(), color.g(), color.b(), color.a()));\n            }\n\n            AIString aiTexturePath = AIString.calloc(stack);\n            aiGetMaterialTexture(aiMaterial, aiTextureType_DIFFUSE, 0, aiTexturePath, (IntBuffer) null,\n                    null, null, null, null, null);\n            String texturePath = aiTexturePath.dataString();\n            if (texturePath != null &amp;&amp; texturePath.length() &gt; 0) {\n                material.setTexturePath(modelDir + File.separator + new File(texturePath).getName());\n                textureCache.createTexture(material.getTexturePath());\n                material.setDiffuseColor(Material.DEFAULT_COLOR);\n            }\n\n            return material;\n        }\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u9996\u5148\u83b7\u53d6\u6750\u8d28\u989c\u8272\uff0c\u8fd9\u91cc\u662f\u6f2b\u53cd\u5c04\u989c\u8272\uff08\u901a\u8fc7\u8bbe\u7f6e<code>AI_MATKEY_COLOR_DIFFUSE</code>\u6807\u5fd7\uff09\u3002\u6709\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u989c\u8272\uff0c\u6211\u4eec\u5c06\u5728\u5e94\u7528\u5149\u7167\u65f6\u4f7f\u7528\uff0c\u4f8b\u5982\u6211\u4eec\u6709\u6f2b\u53cd\u5c04\u3001\u73af\u5883\u5149\uff08\u7528\u4e8e\u73af\u5883\u5149\uff09\u3001\u955c\u9762\u53cd\u5c04\uff08\u7528\u4e8e\u5149\u7167\u7684\u955c\u9762\u53cd\u5c04\u56e0\u5b50\u7b49\uff09\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u68c0\u67e5\u6750\u8d28\u662f\u5426\u5b9a\u4e49\u4e86\u7eb9\u7406\u3002\u5982\u679c\u6709\uff0c\u5373\u5b58\u5728\u7eb9\u7406\u8def\u5f84\uff0c\u6211\u4eec\u5b58\u50a8\u7eb9\u7406\u8def\u5f84\u5e76\u5c06\u7eb9\u7406\u521b\u5efa\u59d4\u6258\u7ed9<code>TexturCache</code>\u7c7b\uff0c\u5982\u524d\u9762\u7684\u793a\u4f8b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6750\u8d28\u5b9a\u4e49\u4e86\u7eb9\u7406\uff0c\u6211\u4eec\u5c06\u6f2b\u53cd\u5c04\u989c\u8272\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff08\u9ed1\u8272\uff09\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u540c\u65f6\u4f7f\u7528\u6f2b\u53cd\u5c04\u989c\u8272\u548c\u7eb9\u7406\uff0c\u800c\u65e0\u9700\u68c0\u67e5\u662f\u5426\u5b58\u5728\u7eb9\u7406\u3002\u5982\u679c\u6a21\u578b\u672a\u5b9a\u4e49\u7eb9\u7406\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u53ef\u4ee5\u7ed3\u5408\u6750\u8d28\u989c\u8272\u7684\u9ed8\u8ba4\u9ed1\u8272\u7eb9\u7406\u3002</p> <p><code>processMesh</code>\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\u3002</p> <pre><code>public class ModelLoader {\n    ...\n    private static Mesh processMesh(AIMesh aiMesh) {\n        float[] vertices = processVertices(aiMesh);\n        float[] textCoords = processTextCoords(aiMesh);\n        int[] indices = processIndices(aiMesh);\n\n        // \u7eb9\u7406\u5750\u6807\u53ef\u80fd\u672a\u586b\u5145\u3002\u6211\u4eec\u81f3\u5c11\u9700\u8981\u7a7a\u69fd\n        if (textCoords.length == 0) {\n            int numElements = (vertices.length / 3) * 2;\n            textCoords = new float[numElements];\n        }\n\n        return new Mesh(vertices, textCoords, indices);\n    }\n    ...\n}\n</code></pre> <p>\u7f51\u683c\u7531\u4e00\u7ec4\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u548c\u7d22\u5f15\u7f13\u51b2\uff08Index Buffer\uff09\u5b9a\u4e49\u3002\u6bcf\u4e2a\u5143\u7d20\u5728<code>processVertices</code>\u3001<code>processTextCoords</code>\u548c<code>processIndices</code>\u65b9\u6cd5\u4e2d\u5904\u7406\u3002\u5904\u7406\u5b8c\u6240\u6709\u6570\u636e\u540e\uff0c\u6211\u4eec\u68c0\u67e5\u662f\u5426\u5b9a\u4e49\u4e86\u7eb9\u7406\u5750\u6807\u3002\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u4ec5\u5206\u914d\u4e00\u7ec4\u7eb9\u7406\u5750\u6807\u4e3a0.0f\u4ee5\u786e\u4fdd\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u7684\u4e00\u81f4\u6027\u3002</p> <p><code>processXXX</code>\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u4eec\u53ea\u662f\u5728<code>AIMesh</code>\u5b9e\u4f8b\u4e0a\u8c03\u7528\u76f8\u5e94\u7684\u65b9\u6cd5\uff0c\u8fd4\u56de\u6240\u9700\u6570\u636e\u5e76\u5c06\u5176\u5b58\u50a8\u5230\u6570\u7ec4\u4e2d\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    private static int[] processIndices(AIMesh aiMesh) {\n        List&lt;Integer&gt; indices = new ArrayList&lt;&gt;();\n        int numFaces = aiMesh.mNumFaces();\n        AIFace.Buffer aiFaces = aiMesh.mFaces();\n        for (int i = 0; i &lt; numFaces; i++) {\n            AIFace aiFace = aiFaces.get(i);\n            IntBuffer buffer = aiFace.mIndices();\n            while (buffer.remaining() &gt; 0) {\n                indices.add(buffer.get());\n            }\n        }\n        return indices.stream().mapToInt(Integer::intValue).toArray();\n    }\n    ...\n    private static float[] processTextCoords(AIMesh aiMesh) {\n        AIVector3D.Buffer buffer = aiMesh.mTextureCoords(0);\n        if (buffer == null) {\n            return new float[]{};\n        }\n        float[] data = new float[buffer.remaining() * 2];\n        int pos = 0;\n        while (buffer.remaining() &gt; 0) {\n            AIVector3D textCoord = buffer.get();\n            data[pos++] = textCoord.x();\n            data[pos++] = 1 - textCoord.y();\n        }\n        return data;\n    }\n\n    private static float[] processVertices(AIMesh aiMesh) {\n        AIVector3D.Buffer buffer = aiMesh.mVertices();\n        float[] data = new float[buffer.remaining() * 3];\n        int pos = 0;\n        while (buffer.remaining() &gt; 0) {\n            AIVector3D textCoord = buffer.get();\n            data[pos++] = textCoord.x();\n            data[pos++] = textCoord.y();\n            data[pos++] = textCoord.z();\n        }\n        return data;\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u901a\u8fc7\u8c03\u7528<code>mVertices</code>\u65b9\u6cd5\u83b7\u53d6\u9876\u70b9\u7684\u7f13\u51b2\u533a\u3002\u6211\u4eec\u7b80\u5355\u5730\u5904\u7406\u5b83\u4eec\u4ee5\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u9876\u70b9\u4f4d\u7f6e\u7684\u6d6e\u70b9\u6570\u5217\u8868\u3002\u7531\u4e8e\u8be5\u65b9\u6cd5\u4ec5\u8fd4\u56de\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u8be5\u4fe1\u606f\u4f20\u9012\u7ed9\u521b\u5efa\u9876\u70b9\u7684OpenGL\u65b9\u6cd5\u3002\u6211\u4eec\u4e0d\u8fd9\u6837\u505a\u6709\u4e24\u4e2a\u539f\u56e0\u3002\u7b2c\u4e00\u4e2a\u539f\u56e0\u662f\u5c3d\u91cf\u51cf\u5c11\u5bf9\u4ee3\u7801\u5e93\u7684\u4fee\u6539\u3002\u7b2c\u4e8c\u4e2a\u539f\u56e0\u662f\u901a\u8fc7\u52a0\u8f7d\u5230\u4e2d\u95f4\u7ed3\u6784\u4e2d\uff0c\u53ef\u4ee5\u6267\u884c\u4e00\u4e9b\u9884\u5904\u7406\u4efb\u52a1\u751a\u81f3\u8c03\u8bd5\u52a0\u8f7d\u8fc7\u7a0b\u3002</p> <p>\u5982\u679c\u60f3\u67e5\u770b\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\u793a\u4f8b\uff0c\u5373\u76f4\u63a5\u5c06\u7f13\u51b2\u533a\u4f20\u9012\u7ed9OpenGL\uff0c\u53ef\u4ee5\u67e5\u770b\u6b64\u793a\u4f8b\u3002</p>"},{"location":"09-loading-more-complex-models/#_2","title":"\u4f7f\u7528\u6a21\u578b","text":"<p>\u6211\u4eec\u9700\u8981\u4fee\u6539<code>Material</code>\u7c7b\u4ee5\u6dfb\u52a0\u5bf9\u6f2b\u53cd\u5c04\u989c\u8272\u7684\u652f\u6301\uff1a</p> <pre><code>public class Material {\n\n    public static final Vector4f DEFAULT_COLOR = new Vector4f(0.0f, 0.0f, 0.0f, 1.0f);\n\n    private Vector4f diffuseColor;\n    ...\n    public Material() {\n        diffuseColor = DEFAULT_COLOR;\n        ...\n    }\n    ...\n    public Vector4f getDiffuseColor() {\n        return diffuseColor;\n    }\n    ...\n    public void setDiffuseColor(Vector4f diffuseColor) {\n        this.diffuseColor = diffuseColor;\n    }\n    ...\n}\n</code></pre> <p>\u5728<code>SceneRender</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u5e76\u5728\u6e32\u67d3\u65f6\u6b63\u786e\u8bbe\u7f6e\u6750\u8d28\u6f2b\u53cd\u5c04\u989c\u8272\uff1a <pre><code>public class SceneRender {\n    ...\n    private void createUniforms() {\n        ...\n        uniformsMap.createUniform(\"material.diffuse\");\n    }\n\n    public void render(Scene scene) {\n        ...\n        for (Model model : models) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n\n            for (Material material : model.getMaterialList()) {\n                uniformsMap.setUniform(\"material.diffuse\", material.getDiffuseColor());\n                ...\n            }\n        }\n        ...\n    }\n    ...\n}\n</code></pre></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u4e3a\u7edf\u4e00\u53d8\u91cf\u4f7f\u7528\u4e86\u4e00\u4e2a\u5e26\u6709<code>.</code>\u7684\u5947\u602a\u540d\u79f0\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5c06\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7ed3\u6784\u4f53\u3002\u901a\u8fc7\u7ed3\u6784\u4f53\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u591a\u4e2a\u7c7b\u578b\u7ec4\u5408\u6210\u4e00\u4e2a\u7ec4\u5408\u7c7b\u578b\u3002\u53ef\u4ee5\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u770b\u5230\u8fd9\u4e00\u70b9\uff1a</p> <pre><code>#version 330\n\nin vec2 outTextCoord;\n\nout vec4 fragColor;\n\nstruct Material\n{\n    vec4 diffuse;\n};\n\nuniform sampler2D txtSampler;\nuniform Material material;\n\nvoid main()\n{\n    fragColor = texture(txtSampler, outTextCoord) + material.diffuse;\n}\n</code></pre> <p>\u6211\u4eec\u8fd8\u9700\u8981\u5728<code>UniformsMap</code>\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u65b9\u6cd5\u4ee5\u652f\u6301\u4f20\u9012<code>Vector4f</code>\u503c <pre><code>public class UniformsMap {\n    ...\n    public void setUniform(String uniformName, Vector4f value) {\n        glUniform4f(getUniformLocation(uniformName), value.x, value.y, value.z, value.w);\n    }\n}\n</code></pre></p> <p>\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539<code>Main</code>\u7c7b\u4ee5\u4f7f\u7528<code>ModelLoader</code>\u7c7b\u52a0\u8f7d\u6a21\u578b\uff1a <pre><code>public class Main implements IAppLogic {\n    ...\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-09\", new Window.WindowOptions(), main);\n        ...\n    }\n    ...\n    public void init(Window window, Scene scene, Render render) {\n        Model cubeModel = ModelLoader.loadModel(\"cube-model\", \"resources/models/cube/cube.obj\",\n                scene.getTextureCache());\n        scene.addModel(cubeModel);\n\n        cubeEntity = new Entity(\"cube-entity\", cubeModel.getId());\n        cubeEntity.setPosition(0, 0, -2);\n        scene.addEntity(cubeEntity);\n    }\n    ...\n}\n</code></pre></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c<code>init</code>\u65b9\u6cd5\u5df2\u7ecf\u7b80\u5316\u4e86\u5f88\u591a\uff0c\u4e0d\u518d\u5728\u4ee3\u7801\u4e2d\u5d4c\u5165\u6a21\u578b\u6570\u636e\u3002\u73b0\u5728\u6211\u4eec\u4f7f\u7528Wavefront\u683c\u5f0f\u7684\u7acb\u65b9\u4f53\u6a21\u578b\u3002\u53ef\u4ee5\u5728<code>resources\\models\\cube</code>\u6587\u4ef6\u5939\u4e2d\u627e\u5230\u6a21\u578b\u6587\u4ef6\u3002\u90a3\u91cc\u6709\u4ee5\u4e0b\u6587\u4ef6\uff1a</p> <ul> <li> <p><code>cube.obj</code>\uff1a\u4e3b\u6a21\u578b\u6587\u4ef6\u3002\u5b9e\u9645\u4e0a\u662f\u57fa\u4e8e\u6587\u672c\u7684\u683c\u5f0f\uff0c\u53ef\u4ee5\u6253\u5f00\u5b83\u67e5\u770b\u9876\u70b9\u3001\u7d22\u5f15\u548c\u7eb9\u7406\u5750\u6807\u5982\u4f55\u5b9a\u4e49\u5e76\u901a\u8fc7\u5b9a\u4e49\u9762\u7c98\u5408\u5728\u4e00\u8d77\u3002\u5b83\u8fd8\u5305\u542b\u5bf9\u6750\u8d28\u6587\u4ef6\u7684\u5f15\u7528\u3002</p> </li> <li> <p><code>cube.mtl</code>\uff1a\u6750\u8d28\u6587\u4ef6\uff0c\u5b9a\u4e49\u989c\u8272\u548c\u7eb9\u7406\u3002</p> </li> <li> <p><code>cube.png</code>\uff1a\u6a21\u578b\u7684\u7eb9\u7406\u6587\u4ef6\u3002</p> </li> </ul> <p>\u6700\u540e\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u53e6\u4e00\u4e2a\u529f\u80fd\u6765\u4f18\u5316\u6e32\u67d3\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u5e94\u7528\u9762\u5254\u9664\u51cf\u5c11\u6e32\u67d3\u7684\u6570\u636e\u91cf\u3002\u4f17\u6240\u5468\u77e5\uff0c\u7acb\u65b9\u4f53\u7531\u516d\u4e2a\u9762\u7ec4\u6210\uff0c\u800c\u6211\u4eec\u6b63\u5728\u6e32\u67d3\u6240\u6709\u516d\u4e2a\u9762\uff0c\u5373\u4f7f\u5b83\u4eec\u4e0d\u53ef\u89c1\u3002\u5982\u679c\u653e\u5927\u7acb\u65b9\u4f53\u5185\u90e8\uff0c\u53ef\u4ee5\u770b\u5230\u5176\u5185\u90e8\u3002</p> <p>\u65e0\u6cd5\u770b\u5230\u7684\u9762\u5e94\u7acb\u5373\u4e22\u5f03\uff0c\u8fd9\u5c31\u662f\u9762\u5254\u9664\u7684\u4f5c\u7528\u3002\u5b9e\u9645\u4e0a\uff0c\u5bf9\u4e8e\u7acb\u65b9\u4f53\uff0c\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u770b\u52303\u4e2a\u9762\uff0c\u56e0\u6b64\u4ec5\u901a\u8fc7\u5e94\u7528\u9762\u5254\u9664\u5c31\u53ef\u4ee5\u4e22\u5f03\u4e00\u534a\u7684\u9762\uff08\u4ec5\u5f53\u6e38\u620f\u4e0d\u9700\u8981\u8fdb\u5165\u6a21\u578b\u5185\u90e8\u65f6\u624d\u6709\u6548\uff09\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u4e09\u89d2\u5f62\uff0c\u9762\u5254\u9664\u68c0\u67e5\u5b83\u662f\u5426\u9762\u5411\u6211\u4eec\uff0c\u5e76\u4e22\u5f03\u4e0d\u9762\u5411\u8be5\u65b9\u5411\u7684\u4e09\u89d2\u5f62\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u77e5\u9053\u4e09\u89d2\u5f62\u662f\u5426\u9762\u5411\u6211\u4eec\uff1fOpenGL\u901a\u8fc7\u7ec4\u6210\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u7684\u7f20\u7ed5\u987a\u5e8f\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002</p> <p>\u8bb0\u5f97\u5728\u7b2c\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\u4e09\u89d2\u5f62\u7684\u9876\u70b9\u3002\u5728OpenGL\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9006\u65f6\u9488\u987a\u5e8f\u7684\u4e09\u89d2\u5f62\u9762\u5411\u89c2\u5bdf\u8005\uff0c\u987a\u65f6\u9488\u987a\u5e8f\u7684\u4e09\u89d2\u5f62\u9762\u5411\u540e\u65b9\u3002\u8fd9\u91cc\u7684\u5173\u952e\u662f\uff0c\u5728\u6e32\u67d3\u65f6\u6839\u636e\u89c6\u89d2\u68c0\u67e5\u6b64\u987a\u5e8f\u3002\u56e0\u6b64\uff0c\u6309\u9006\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\u7684\u4e09\u89d2\u5f62\u5728\u6e32\u67d3\u65f6\u53ef\u80fd\u56e0\u4e3a\u89c6\u89d2\u800c\u88ab\u89e3\u91ca\u4e3a\u987a\u65f6\u9488\u987a\u5e8f\u5b9a\u4e49\u3002</p> <p>\u6211\u4eec\u5c06\u5728<code>Render</code>\u7c7b\u4e2d\u542f\u7528\u9762\u5254\u9664\uff1a</p> <pre><code>public class Render {\n    ...\n    public Render() {\n        ...\n        glEnable(GL_CULL_FACE);\n        glCullFace(GL_BACK);\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u7b2c\u4e00\u884c\u5c06\u542f\u7528\u9762\u5254\u9664\uff0c\u7b2c\u4e8c\u884c\u58f0\u660e\u5e94\u5254\u9664\uff08\u79fb\u9664\uff09\u9762\u5411\u540e\u65b9\u7684\u9762\u3002</p> <p>\u5982\u679c\u8fd0\u884c\u793a\u4f8b\uff0c\u5c06\u770b\u5230\u4e0e\u524d\u4e00\u7ae0\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u4f46\u5982\u679c\u653e\u5927\u7acb\u65b9\u4f53\u5185\u90e8\uff0c\u5185\u90e8\u9762\u5c06\u4e0d\u4f1a\u88ab\u6e32\u67d3\u3002\u53ef\u4ee5\u4fee\u6539\u6b64\u793a\u4f8b\u4ee5\u52a0\u8f7d\u66f4\u590d\u6742\u7684\u6a21\u578b\u3002</p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"10-GUI/","title":"\u7b2c10\u7ae0 - \u4f7f\u7528Imgui\u7ed8\u5236GUI","text":"<p>Dear ImGui\u662f\u4e00\u4e2a\u7528\u6237\u754c\u9762\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528OpenGL\u548cVulkan\u7b49\u591a\u79cd\u540e\u7aef\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u6765\u663e\u793aGUI\u63a7\u4ef6\u6216\u5f00\u53d1HUD\u3002\u5b83\u63d0\u4f9b\u4e86\u591a\u79cd\u5c0f\u90e8\u4ef6\uff0c\u5916\u89c2\u548c\u611f\u89c9\u53ef\u4ee5\u8f7b\u677e\u81ea\u5b9a\u4e49\u3002</p> <p>\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"10-GUI/#imgui","title":"Imgui\u96c6\u6210","text":"<p>\u9996\u5148\u662f\u5728\u9879\u76ee\u7684pom.xml\u4e2d\u6dfb\u52a0Java Imgui\u5305\u88c5\u5668\u7684Maven\u4f9d\u8d56\u3002\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u7f16\u8bd1\u65f6\u548c\u8fd0\u884c\u65f6\u4f9d\u8d56\u3002</p> <pre><code>&lt;dependency&gt;\n   &lt;groupId&gt;io.github.spair&lt;/groupId&gt;\n   &lt;artifactId&gt;imgui-java-binding&lt;/artifactId&gt;\n   &lt;version&gt;${imgui-java.version}&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;io.github.spair&lt;/groupId&gt;\n    &lt;artifactId&gt;imgui-java-${native.target}&lt;/artifactId&gt;\n    &lt;version&gt;${imgui-java.version}&lt;/version&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre> <p>\u4f7f\u7528Imgui\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u6e32\u67d3\u4efb\u4f55\u5176\u4ed63D\u6a21\u578b\u4e00\u6837\u6e32\u67d3\u7a97\u53e3\u3001\u9762\u677f\u7b49\uff0c\u4f46\u53ea\u4f7f\u75282D\u5f62\u72b6\u3002\u6211\u4eec\u8bbe\u7f6e\u60f3\u8981\u4f7f\u7528\u7684\u63a7\u4ef6\uff0cImgui\u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u7ec4\u9876\u70b9\u7f13\u51b2\u533a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7740\u8272\u5668\u8fdb\u884c\u6e32\u67d3\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u53ef\u4ee5\u4e0e\u4efb\u4f55\u540e\u7aef\u4e00\u8d77\u4f7f\u7528\u7684\u539f\u56e0\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u9876\u70b9\uff0cImgui\u5b9a\u4e49\u5176\u5750\u6807\uff082D\u5750\u6807\uff09\u3001\u7eb9\u7406\u5750\u6807\u548c\u5173\u8054\u7684\u989c\u8272\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b\u6765\u5efa\u6a21GUI\u7f51\u683c\u5e76\u521b\u5efa\u76f8\u5173\u7684VAO\u548cVBO\u3002\u8fd9\u4e2a\u7c7b\u540d\u4e3a<code>GuiMesh</code>\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport imgui.ImDrawData;\n\nimport static org.lwjgl.opengl.GL15.*;\nimport static org.lwjgl.opengl.GL20.*;\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class GuiMesh {\n\n    private int indicesVBO;\n    private int vaoId;\n    private int verticesVBO;\n\n    public GuiMesh() {\n        vaoId = glGenVertexArrays();\n        glBindVertexArray(vaoId);\n\n        // \u5355\u4e2aVBO\n        verticesVBO = glGenBuffers();\n        glBindBuffer(GL_ARRAY_BUFFER, verticesVBO);\n        glEnableVertexAttribArray(0);\n        glVertexAttribPointer(0, 2, GL_FLOAT, false, ImDrawData.sizeOfImDrawVert(), 0);\n        glEnableVertexAttribArray(1);\n        glVertexAttribPointer(1, 2, GL_FLOAT, false, ImDrawData.sizeOfImDrawVert(), 8);\n        glEnableVertexAttribArray(2);\n        glVertexAttribPointer(2, 4, GL_UNSIGNED_BYTE, true, ImDrawData.sizeOfImDrawVert(), 16);\n\n        indicesVBO = glGenBuffers();\n\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n        glBindVertexArray(0);\n    }\n\n    public void cleanup() {\n        glDeleteBuffers(indicesVBO);\n        glDeleteBuffers(verticesVBO);\n        glDeleteVertexArrays(vaoId);\n    }\n\n    public int getIndicesVBO() {\n        return indicesVBO;\n    }\n\n    public int getVaoId() {\n        return vaoId;\n    }\n\n    public int getVerticesVBO() {\n        return verticesVBO;\n    }\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u4f7f\u7528\u5355\u4e2aVBO\uff0c\u4f46\u4e3a\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u548c\u989c\u8272\u5b9a\u4e49\u4e86\u51e0\u4e2a\u5c5e\u6027\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u4f1a\u7528\u6570\u636e\u586b\u5145\u7f13\u51b2\u533a\uff0c\u7a0d\u540e\u6211\u4eec\u5c06\u770b\u5230\u5982\u4f55\u4f7f\u7528\u5b83\u3002</p> <p>\u6211\u4eec\u8fd8\u9700\u8981\u8ba9\u5e94\u7528\u7a0b\u5e8f\u521b\u5efaGUI\u63a7\u4ef6\u5e76\u5bf9\u7528\u6237\u8f93\u5165\u505a\u51fa\u53cd\u5e94\u3002\u4e3a\u4e86\u652f\u6301\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a<code>IGuiInstance</code>\u7684\u65b0\u63a5\u53e3\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine;\n\nimport org.lwjglb.engine.scene.Scene;\n\npublic interface IGuiInstance {\n    void drawGui();\n\n    boolean handleGuiInput(Scene scene, Window window);\n}\n</code></pre> <p><code>drawGui</code>\u65b9\u6cd5\u5c06\u7528\u4e8e\u6784\u5efaGUI\uff0c\u8fd9\u662f\u6211\u4eec\u5b9a\u4e49\u5c06\u7528\u4e8e\u6784\u5efaGUI\u7f51\u683c\u7684\u7a97\u53e3\u548c\u5c0f\u90e8\u4ef6\u7684\u5730\u65b9\u3002\u6211\u4eec\u5c06\u4f7f\u7528<code>handleGuiInput</code>\u65b9\u6cd5\u6765\u5904\u7406GUI\u4e2d\u7684\u8f93\u5165\u4e8b\u4ef6\u3002\u5b83\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u4ee5\u8868\u660e\u8f93\u5165\u662f\u5426\u5df2\u88abGUI\u5904\u7406\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u663e\u793a\u4e00\u4e2a\u91cd\u53e0\u7a97\u53e3\uff0c\u6211\u4eec\u53ef\u80fd\u4e0d\u5e0c\u671b\u5728\u6e38\u620f\u903b\u8f91\u4e2d\u7ee7\u7eed\u5904\u7406\u6309\u952e\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd4\u56de\u503c\u6765\u63a7\u5236\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u5c06\u5728<code>Scene</code>\u7c7b\u4e2d\u5b58\u50a8<code>IGuiInstance</code>\u63a5\u53e3\u7684\u7279\u5b9a\u5b9e\u73b0\u3002</p> <pre><code>public class Scene {\n    ...\n    private IGuiInstance guiInstance;\n    ...\n    public IGuiInstance getGuiInstance() {\n        return guiInstance;\n    }\n    ...\n    public void setGuiInstance(IGuiInstance guiInstance) {\n        this.guiInstance = guiInstance;\n    }\n}\n</code></pre> <p>\u4e0b\u4e00\u6b65\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b\u6765\u6e32\u67d3\u6211\u4eec\u7684GUI\uff0c\u5b83\u5c06\u547d\u540d\u4e3a<code>GuiRender</code>\uff0c\u5e76\u5f00\u59cb\u5982\u4e0b\uff1a <pre><code>package org.lwjglb.engine.graph;\n\nimport imgui.*;\nimport imgui.type.ImInt;\nimport org.joml.Vector2f;\nimport org.lwjglb.engine.*;\nimport org.lwjglb.engine.scene.Scene;\n\nimport java.nio.ByteBuffer;\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL32.*;\n\npublic class GuiRender {\n\n    private GuiMesh guiMesh;\n    private GLFWKeyCallback prevKeyCallBack;\n    private Vector2f scale;\n    private ShaderProgram shaderProgram;\n    private Texture texture;\n    private UniformsMap uniformsMap;\n\n    public GuiRender(Window window) {\n        List&lt;ShaderProgram.ShaderModuleData&gt; shaderModuleDataList = new ArrayList&lt;&gt;();\n        shaderModuleDataList.add(new ShaderProgram.ShaderModuleData(\"resources/shaders/gui.vert\", GL_VERTEX_SHADER));\n        shaderModuleDataList.add(new ShaderProgram.ShaderModuleData(\"resources/shaders/gui.frag\", GL_FRAGMENT_SHADER));\n        shaderProgram = new ShaderProgram(shaderModuleDataList);\n        createUniforms();\n        createUIResources(window);\n        setupKeyCallBack(window);\n    }\n\n    public void cleanup() {\n        shaderProgram.cleanup();\n        texture.cleanup();\n        if (prevKeyCallBack != null) {\n            prevKeyCallBack.free();\n        }\n    }\n    ...\n}\n</code></pre></p> <p>\u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u91cc\u7684\u5927\u90e8\u5206\u5185\u5bb9\u5bf9\u4f60\u6765\u8bf4\u4f1a\u975e\u5e38\u719f\u6089\uff0c\u6211\u4eec\u53ea\u662f\u8bbe\u7f6e\u4e86\u7740\u8272\u5668\u548c\u7edf\u4e00\u53d8\u91cf\u3002\u7531\u4e8e\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6309\u952e\u56de\u8c03\u6765\u5904\u7406ImGui\u7684\u8f93\u5165\u6587\u672c\u63a7\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u8ddf\u8e2a<code>prevKeyCallBack</code>\u4e2d\u7684\u5148\u524d\u6309\u952e\u56de\u8c03\u4ee5\u6b63\u786e\u4f7f\u7528\u548c\u91ca\u653e\u5b83\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a<code>createUIResources</code>\u7684\u65b0\u65b9\u6cd5\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class GuiRender {\n    ...\n    private void createUIResources(Window window) {\n        ImGui.createContext();\n\n        ImGuiIO imGuiIO = ImGui.getIO();\n        imGuiIO.setIniFilename(null);\n        imGuiIO.setDisplaySize(window.getWidth(), window.getHeight());\n\n        ImFontAtlas fontAtlas = ImGui.getIO().getFonts();\n        ImInt width = new ImInt();\n        ImInt height = new ImInt();\n        ByteBuffer buf = fontAtlas.getTexDataAsRGBA32(width, height);\n        texture = new Texture(width.get(), height.get(), buf);\n\n        guiMesh = new GuiMesh();\n    }\n    ...\n}\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86Imgui\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4e0a\u4e0b\u6587\uff08\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u90fd\u9700\u8981\uff09\uff0c\u5e76\u5c06\u663e\u793a\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u7a97\u53e3\u5927\u5c0f\u3002Imgui\u5c06\u72b6\u6001\u5b58\u50a8\u5728\u4e00\u4e2aini\u6587\u4ef6\u4e2d\uff0c\u7531\u4e8e\u6211\u4eec\u4e0d\u5e0c\u671b\u72b6\u6001\u5728\u8fd0\u884c\u4e4b\u95f4\u6301\u4e45\u5316\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8bbe\u7f6e\u4e3anull\u3002\u4e0b\u4e00\u6b65\u662f\u521d\u59cb\u5316\u5b57\u4f53\u56fe\u96c6\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u7eb9\u7406\uff0c\u8be5\u7eb9\u7406\u5c06\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u6b63\u786e\u6e32\u67d3\u6587\u672c\u7b49\u3002\u6700\u540e\u4e00\u6b65\u662f\u521b\u5efa<code>GuiMesh</code>\u5b9e\u4f8b\u3002</p> <p><code>createUniforms</code>\u53ea\u662f\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u7f29\u653e\u7684\u4e8c\u7ef4\u6d6e\u70b9\u5411\u91cf\uff08\u7a0d\u540e\u6211\u4eec\u5c06\u770b\u5230\u5982\u4f55\u4f7f\u7528\u5b83\uff09\u3002</p> <pre><code>public class GuiRender {\n    ...\n    private void createUniforms() {\n        uniformsMap = new UniformsMap(shaderProgram.getProgramId());\n        uniformsMap.createUniform(\"scale\");\n        scale = new Vector2f();\n    }\n    ...\n}\n</code></pre> <p><code>setupKeyCallBack</code>\u65b9\u6cd5\u662f\u6b63\u786e\u5904\u7406Imgui\u4e2d\u7684\u5173\u952e\u4e8b\u4ef6\u6240\u5fc5\u9700\u7684\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>public class GuiRender {\n    ...\n    private void setupKeyCallBack(Window window) {\n        prevKeyCallBack = glfwSetKeyCallback(window.getWindowHandle(), (handle, key, scancode, action, mods) -&gt; {\n            window.keyCallBack(key, action);\n            ImGuiIO io = ImGui.getIO();\n            if (!io.getWantCaptureKeyboard()) {\n                return;\n            }\n            if (action == GLFW_PRESS) {\n                io.addKeyEvent(getImKey(key), true);\n            } else if (action == GLFW_RELEASE) {\n                io.addKeyEvent(getImKey(key), false);\n            }\n        }\n        );\n\n        glfwSetCharCallback(window.getWindowHandle(), (handle, c) -&gt; {\n            ImGuiIO io = ImGui.getIO();\n            if (!io.getWantCaptureKeyboard()) {\n                return;\n            }\n            io.addInputCharacter(c);\n        });\n    }\n\n    private static int getImKey(int key) {\n        return switch (key) {\n            case GLFW_KEY_TAB -&gt; ImGuiKey.Tab;\n            case GLFW_KEY_LEFT -&gt; ImGuiKey.LeftArrow;\n            case GLFW_KEY_RIGHT -&gt; ImGuiKey.RightArrow;\n            case GLFW_KEY_UP -&gt; ImGuiKey.UpArrow;\n            case GLFW_KEY_DOWN -&gt; ImGuiKey.DownArrow;\n            case GLFW_KEY_PAGE_UP -&gt; ImGuiKey.PageUp;\n            case GLFW_KEY_PAGE_DOWN -&gt; ImGuiKey.PageDown;\n            case GLFW_KEY_HOME -&gt; ImGuiKey.Home;\n            case GLFW_KEY_END -&gt; ImGuiKey.End;\n            case GLFW_KEY_INSERT -&gt; ImGuiKey.Insert;\n            case GLFW_KEY_DELETE -&gt; ImGuiKey.Delete;\n            case GLFW_KEY_BACKSPACE -&gt; ImGuiKey.Backspace;\n            case GLFW_KEY_SPACE -&gt; ImGuiKey.Space;\n            case GLFW_KEY_ENTER -&gt; ImGuiKey.Enter;\n            case GLFW_KEY_ESCAPE -&gt; ImGuiKey.Escape;\n            case GLFW_KEY_APOSTROPHE -&gt; ImGuiKey.Apostrophe;\n            case GLFW_KEY_COMMA -&gt; ImGuiKey.Comma;\n            case GLFW_KEY_MINUS -&gt; ImGuiKey.Minus;\n            case GLFW_KEY_PERIOD -&gt; ImGuiKey.Period;\n            case GLFW_KEY_SLASH -&gt; ImGuiKey.Slash;\n            case GLFW_KEY_SEMICOLON -&gt; ImGuiKey.Semicolon;\n            case GLFW_KEY_EQUAL -&gt; ImGuiKey.Equal;\n            case GLFW_KEY_LEFT_BRACKET -&gt; ImGuiKey.LeftBracket;\n            case GLFW_KEY_BACKSLASH -&gt; ImGuiKey.Backslash;\n            case GLFW_KEY_RIGHT_BRACKET -&gt; ImGuiKey.RightBracket;\n            case GLFW_KEY_GRAVE_ACCENT -&gt; ImGuiKey.GraveAccent;\n            case GLFW_KEY_CAPS_LOCK -&gt; ImGuiKey.CapsLock;\n            case GLFW_KEY_SCROLL_LOCK -&gt; ImGuiKey.ScrollLock;\n            case GLFW_KEY_NUM_LOCK -&gt; ImGuiKey.NumLock;\n            case GLFW_KEY_PRINT_SCREEN -&gt; ImGuiKey.PrintScreen;\n            case GLFW_KEY_PAUSE -&gt; ImGuiKey.Pause;\n            case GLFW_KEY_KP_0 -&gt; ImGuiKey.Keypad0;\n            case GLFW_KEY_KP_1 -&gt; ImGuiKey.Keypad1;\n            case GLFW_KEY_KP_2 -&gt; ImGuiKey.Keypad2;\n            case GLFW_KEY_KP_3 -&gt; ImGuiKey.Keypad3;\n            case GLFW_KEY_KP_4 -&gt; ImGuiKey.Keypad4;\n            case GLFW_KEY_KP_5 -&gt; ImGuiKey.Keypad5;\n            case GLFW_KEY_KP_6 -&gt; ImGuiKey.Keypad6;\n            case GLFW_KEY_KP_7 -&gt; ImGuiKey.Keypad7;\n            case GLFW_KEY_KP_8 -&gt; ImGuiKey.Keypad8;\n            case GLFW_KEY_KP_9 -&gt; ImGuiKey.Keypad9;\n            case GLFW_KEY_KP_DECIMAL -&gt; ImGuiKey.KeypadDecimal;\n            case GLFW_KEY_KP_DIVIDE -&gt; ImGuiKey.KeypadDivide;\n            case GLFW_KEY_KP_MULTIPLY -&gt; ImGuiKey.KeypadMultiply;\n            case GLFW_KEY_KP_SUBTRACT -&gt; ImGuiKey.KeypadSubtract;\n            case GLFW_KEY_KP_ADD -&gt; ImGuiKey.KeypadAdd;\n            case GLFW_KEY_KP_ENTER -&gt; ImGuiKey.KeypadEnter;\n            case GLFW_KEY_KP_EQUAL -&gt; ImGuiKey.KeypadEqual;\n            case GLFW_KEY_LEFT_SHIFT -&gt; ImGuiKey.LeftShift;\n            case GLFW_KEY_LEFT_CONTROL -&gt; ImGuiKey.LeftCtrl;\n            case GLFW_KEY_LEFT_ALT -&gt; ImGuiKey.LeftAlt;\n            case GLFW_KEY_LEFT_SUPER -&gt; ImGuiKey.LeftSuper;\n            case GLFW_KEY_RIGHT_SHIFT -&gt; ImGuiKey.RightShift;\n            case GLFW_KEY_RIGHT_CONTROL -&gt; ImGuiKey.RightCtrl;\n            case GLFW_KEY_RIGHT_ALT -&gt; ImGuiKey.RightAlt;\n            case GLFW_KEY_RIGHT_SUPER -&gt; ImGuiKey.RightSuper;\n            case GLFW_KEY_MENU -&gt; ImGuiKey.Menu;\n            case GLFW_KEY_0 -&gt; ImGuiKey._0;\n            case GLFW_KEY_1 -&gt; ImGuiKey._1;\n            case GLFW_KEY_2 -&gt; ImGuiKey._2;\n            case GLFW_KEY_3 -&gt; ImGuiKey._3;\n            case GLFW_KEY_4 -&gt; ImGuiKey._4;\n            case GLFW_KEY_5 -&gt; ImGuiKey._5;\n            case GLFW_KEY_6 -&gt; ImGuiKey._6;\n            case GLFW_KEY_7 -&gt; ImGuiKey._7;\n            case GLFW_KEY_8 -&gt; ImGuiKey._8;\n            case GLFW_KEY_9 -&gt; ImGuiKey._9;\n            case GLFW_KEY_A -&gt; ImGuiKey.A;\n            case GLFW_KEY_B -&gt; ImGuiKey.B;\n            case GLFW_KEY_C -&gt; ImGuiKey.C;\n            case GLFW_KEY_D -&gt; ImGuiKey.D;\n            case GLFW_KEY_E -&gt; ImGuiKey.E;\n            case GLFW_KEY_F -&gt; ImGuiKey.F;\n            case GLFW_KEY_G -&gt; ImGuiKey.G;\n            case GLFW_KEY_H -&gt; ImGuiKey.H;\n            case GLFW_KEY_I -&gt; ImGuiKey.I;\n            case GLFW_KEY_J -&gt; ImGuiKey.J;\n            case GLFW_KEY_K -&gt; ImGuiKey.K;\n            case GLFW_KEY_L -&gt; ImGuiKey.L;\n            case GLFW_KEY_M -&gt; ImGuiKey.M;\n            case GLFW_KEY_N -&gt; ImGuiKey.N;\n            case GLFW_KEY_O -&gt; ImGuiKey.O;\n            case GLFW_KEY_P -&gt; ImGuiKey.P;\n            case GLFW_KEY_Q -&gt; ImGuiKey.Q;\n            case GLFW_KEY_R -&gt; ImGuiKey.R;\n            case GLFW_KEY_S -&gt; ImGuiKey.S;\n            case GLFW_KEY_T -&gt; ImGuiKey.T;\n            case GLFW_KEY_U -&gt; ImGuiKey.U;\n            case GLFW_KEY_V -&gt; ImGuiKey.V;\n            case GLFW_KEY_W -&gt; ImGuiKey.W;\n            case GLFW_KEY_X -&gt; ImGuiKey.X;\n            case GLFW_KEY_Y -&gt; ImGuiKey.Y;\n            case GLFW_KEY_Z -&gt; ImGuiKey.Z;\n            case GLFW_KEY_F1 -&gt; ImGuiKey.F1;\n            case GLFW_KEY_F2 -&gt; ImGuiKey.F2;\n            case GLFW_KEY_F3 -&gt; ImGuiKey.F3;\n            case GLFW_KEY_F4 -&gt; ImGuiKey.F4;\n            case GLFW_KEY_F5 -&gt; ImGuiKey.F5;\n            case GLFW_KEY_F6 -&gt; ImGuiKey.F6;\n            case GLFW_KEY_F7 -&gt; ImGuiKey.F7;\n            case GLFW_KEY_F8 -&gt; ImGuiKey.F8;\n            case GLFW_KEY_F9 -&gt; ImGuiKey.F9;\n            case GLFW_KEY_F10 -&gt; ImGuiKey.F10;\n            case GLFW_KEY_F11 -&gt; ImGuiKey.F11;\n            case GLFW_KEY_F12 -&gt; ImGuiKey.F12;\n            default -&gt; ImGuiKey.None;\n        };\n    }\n    ...\n}\n</code></pre> \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2aGLFW\u6309\u952e\u56de\u8c03\u3002\u8fd9\u4e2a\u56de\u8c03\u4f1a\u9996\u5148\u8c03\u7528<code>Window</code>\u7684\u6309\u952e\u56de\u8c03\u6765\u5904\u7406\u6309\u952e\u4e8b\u4ef6\uff0c\u5e76\u5c06GLFW\u952e\u7801\u8f6c\u6362\u4e3aImgui\u7684\u952e\u7801\u3002\u8bbe\u7f6e\u56de\u8c03\u65f6\uff0c\u6211\u4eec\u83b7\u53d6\u4e4b\u524d\u5df2\u8bbe\u7f6e\u7684\u56de\u8c03\u7684\u5f15\u7528\uff0c\u4ee5\u4fbf\u80fd\u591f\u94fe\u5f0f\u8c03\u7528\u5b83\u4eec\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6309\u952e\u4e8b\u4ef6\u672a\u88abImgui\u5904\u7406\uff0c\u6211\u4eec\u5c06\u8c03\u7528\u5b83\u3002\u6211\u4eec\u6ca1\u6709\u5728\u4ee3\u7801\u7684\u5176\u4ed6\u90e8\u5206\u4f7f\u7528\u5b57\u7b26\u56de\u8c03\uff0c\u4f46\u5982\u679c\u4f60\u4f7f\u7528\uff0c\u8bf7\u8bb0\u4f4f\u4e5f\u8981\u5e94\u7528\u8fd9\u79cd\u94fe\u5f0f\u6a21\u5f0f\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u6839\u636e\u6309\u952e\u6309\u4e0b\u6216\u91ca\u653e\u4e8b\u4ef6\u8bbe\u7f6eImgui\u7684\u72b6\u6001\u3002\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5b57\u7b26\u56de\u8c03\uff0c\u4ee5\u4fbf\u6587\u672c\u8f93\u5165\u5c0f\u90e8\u4ef6\u53ef\u4ee5\u5904\u7406\u8fd9\u4e9b\u4e8b\u4ef6\u3002</p> <p>\u8ba9\u6211\u4eec\u73b0\u5728\u67e5\u770b<code>render</code>\u65b9\u6cd5\uff1a</p> <pre><code>public class GuiRender {\n    ...\n    public void render(Scene scene) {\n        IGuiInstance guiInstance = scene.getGuiInstance();\n        if (guiInstance == null) {\n            return;\n        }\n        guiInstance.drawGui();\n\n        shaderProgram.bind();\n\n        glEnable(GL_BLEND);\n        glBlendEquation(GL_FUNC_ADD);\n        glBlendFuncSeparate(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, GL_ONE, GL_ONE_MINUS_SRC_ALPHA);\n        glDisable(GL_DEPTH_TEST);\n        glDisable(GL_CULL_FACE);\n\n        glBindVertexArray(guiMesh.getVaoId());\n\n        glBindBuffer(GL_ARRAY_BUFFER, guiMesh.getVerticesVBO());\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, guiMesh.getIndicesVBO());\n\n        ImGuiIO io = ImGui.getIO();\n        scale.x = 2.0f / io.getDisplaySizeX();\n        scale.y = -2.0f / io.getDisplaySizeY();\n        uniformsMap.setUniform(\"scale\", scale);\n\n        ImDrawData drawData = ImGui.getDrawData();\n        int numLists = drawData.getCmdListsCount();\n        for (int i = 0; i &lt; numLists; i++) {\n            glBufferData(GL_ARRAY_BUFFER, drawData.getCmdListVtxBufferData(i), GL_STREAM_DRAW);\n            glBufferData(GL_ELEMENT_ARRAY_BUFFER, drawData.getCmdListIdxBufferData(i), GL_STREAM_DRAW);\n\n            int numCmds = drawData.getCmdListCmdBufferSize(i);\n            for (int j = 0; j &lt; numCmds; j++) {\n                final int elemCount = drawData.getCmdListCmdBufferElemCount(i, j);\n                final int idxBufferOffset = drawData.getCmdListCmdBufferIdxOffset(i, j);\n                final int indices = idxBufferOffset * ImDrawData.sizeOfImDrawIdx();\n\n                texture.bind();\n                glDrawElements(GL_TRIANGLES, elemCount, GL_UNSIGNED_SHORT, indices);\n            }\n        }\n\n        glEnable(GL_DEPTH_TEST);\n        glEnable(GL_CULL_FACE);\n        glDisable(GL_BLEND);\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u68c0\u67e5\u662f\u5426\u8bbe\u7f6e\u4e86<code>IGuiInstance</code>\u63a5\u53e3\u7684\u5b9e\u73b0\u3002\u5982\u679c\u6ca1\u6709\u5b9e\u4f8b\uff0c\u6211\u4eec\u76f4\u63a5\u8fd4\u56de\uff0c\u4e0d\u9700\u8981\u6e32\u67d3\u4efb\u4f55\u4e1c\u897f\u3002\u4e4b\u540e\u6211\u4eec\u8c03\u7528<code>drawGui</code>\u65b9\u6cd5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u4e2d\uff0c\u6211\u4eec\u90fd\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u4ee5\u4fbfImgui\u53ef\u4ee5\u66f4\u65b0\u5176\u72b6\u6001\u4ee5\u751f\u6210\u6b63\u786e\u7684\u9876\u70b9\u6570\u636e\u3002\u7ed1\u5b9a\u7740\u8272\u5668\u540e\uff0c\u6211\u4eec\u9996\u5148\u542f\u7528\u6df7\u5408\uff0c\u8fd9\u5c06\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u900f\u660e\u5ea6\u3002\u4ec5\u542f\u7528\u6df7\u5408\uff0c\u900f\u660e\u5ea6\u4ecd\u7136\u4e0d\u4f1a\u663e\u793a\u3002\u6211\u4eec\u8fd8\u9700\u8981\u901a\u8fc7<code>glBlendFunc</code>\u51fd\u6570\u6307\u793aOpenGL\u5982\u4f55\u5e94\u7528\u6df7\u5408\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u770b\u5173\u4e8e\u53ef\u4ee5\u5e94\u7528\u7684\u4e0d\u540c\u51fd\u6570\u7684\u8be6\u7ec6\u89e3\u91cahere\u3002</p> <p>\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u7981\u7528\u6df1\u5ea6\u6d4b\u8bd5\u548c\u9762\u5254\u9664\u4ee5\u4f7fImgui\u6b63\u5e38\u5de5\u4f5c\u3002\u7136\u540e\uff0c\u6211\u4eec\u7ed1\u5b9a\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\u7684gui\u7f51\u683c\uff0c\u5e76\u7ed1\u5b9a\u6570\u636e\u548c\u7d22\u5f15\u7f13\u51b2\u533a\u3002Imgui\u4f7f\u7528\u5c4f\u5e55\u5750\u6807\u751f\u6210\u9876\u70b9\u6570\u636e\uff0c\u5373<code>x</code>\u503c\u8986\u76d6<code>[0, screen width]</code>\u8303\u56f4\uff0c<code>y</code>\u503c\u8986\u76d6<code>[0, screen height]</code>\u8303\u56f4\u3002\u6211\u4eec\u5c06\u4f7f\u7528<code>scale</code>\u7edf\u4e00\u53d8\u91cf\u5c06\u8be5\u5750\u6807\u7cfb\u6620\u5c04\u5230OpenGL\u88c1\u526a\u7a7a\u95f4\u7684<code>[-1, 1]</code>\u8303\u56f4\u3002</p> <p>\u4e4b\u540e\uff0c\u6211\u4eec\u68c0\u7d22Imgui\u751f\u6210\u7684\u6570\u636e\u4ee5\u6e32\u67d3GUI\u3002Imgui\u9996\u5148\u5c06\u6570\u636e\u7ec4\u7ec7\u5728\u6240\u8c13\u7684\u547d\u4ee4\u5217\u8868\u4e2d\u3002\u6bcf\u4e2a\u547d\u4ee4\u5217\u8868\u90fd\u6709\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u7528\u4e8e\u5b58\u50a8\u9876\u70b9\u548c\u7d22\u5f15\u6570\u636e\uff0c\u56e0\u6b64\u6211\u4eec\u9996\u5148\u901a\u8fc7\u8c03\u7528<code>glBufferData</code>\u5c06\u6570\u636e\u8f6c\u50a8\u5230GPU\u3002\u6bcf\u4e2a\u547d\u4ee4\u5217\u8868\u8fd8\u5b9a\u4e49\u4e86\u4e00\u7ec4\u547d\u4ee4\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u751f\u6210\u7ed8\u5236\u8c03\u7528\u3002\u6bcf\u4e2a\u547d\u4ee4\u90fd\u5b58\u50a8\u4e86\u8981\u7ed8\u5236\u7684\u5143\u7d20\u6570\u91cf\u4ee5\u53ca\u5728\u547d\u4ee4\u5217\u8868\u4e2d\u5e94\u7528\u4e8e\u7f13\u51b2\u533a\u7684\u504f\u79fb\u91cf\u3002\u5f53\u6211\u4eec\u7ed8\u5236\u5b8c\u6240\u6709\u5143\u7d20\u540e\uff0c\u53ef\u4ee5\u91cd\u65b0\u542f\u7528\u6df1\u5ea6\u6d4b\u8bd5\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a<code>resize</code>\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u5728\u7a97\u53e3\u8c03\u6574\u5927\u5c0f\u65f6\u8c03\u7528\u4ee5\u8c03\u6574Imgui\u7684\u663e\u793a\u5927\u5c0f\u3002</p> <pre><code>public class GuiRender {\n    ...\n    public void resize(int width, int height) {\n        ImGuiIO imGuiIO = ImGui.getIO();\n        imGuiIO.setDisplaySize(width, height);\n    }\n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u66f4\u65b0<code>UniformsMap</code>\u7c7b\u4ee5\u6dfb\u52a0\u5bf92D\u5411\u91cf\u7684\u652f\u6301\u3002</p> <p>\u540e\u671f\u6dfb\u52a0:\u6ce8\u610f:\u8fd9\u91cc\u662f\u6dfb\u52a0\u4e86\u4e00\u4e2a\u91cd\u8f7d\u7684\u65b9\u6cd5\u800c\u4e0d\u662f\u4fee\u6539\u539f\u6709\u7684\u65b9\u6cd5</p> <pre><code>public class UniformsMap {\n    ...\n    public void setUniform(String uniformName, Vector2f value) {\n        glUniform2f(getUniformLocation(uniformName), value.x, value.y);\n    }\n}\n</code></pre> <p>\u7528\u4e8e\u6e32\u67d3GUI\u7684\u9876\u70b9\u7740\u8272\u5668\u975e\u5e38\u7b80\u5355\uff08<code>gui.vert</code>\uff09\uff0c\u6211\u4eec\u53ea\u662f\u8f6c\u6362\u5750\u6807\uff0c\u4f7f\u5b83\u4eec\u5728<code>[-1, 1]</code>\u8303\u56f4\u5185\uff0c\u5e76\u8f93\u51fa\u7eb9\u7406\u5750\u6807\u548c\u989c\u8272\uff0c\u4ee5\u4fbf\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u4f7f\u7528\uff1a</p> <pre><code>#version 330\n\nlayout (location=0) in vec2 inPos;\nlayout (location=1) in vec2 inTextCoords;\nlayout (location=2) in vec4 inColor;\n\nout vec2 frgTextCoords;\nout vec4 frgColor;\n\nuniform vec2 scale;\n\nvoid main()\n{\n    frgTextCoords = inTextCoords;\n    frgColor = inColor;\n    gl_Position = vec4(inPos * scale + vec2(-1.0, 1.0), 0.0, 1.0);\n}\n</code></pre> <p>\u5728\u7247\u6bb5\u7740\u8272\u5668\uff08<code>gui.frag</code>\uff09\u4e2d\uff0c\u6211\u4eec\u53ea\u8f93\u51fa\u9876\u70b9\u989c\u8272\u4e0e\u5176\u7eb9\u7406\u5750\u6807\u5173\u8054\u7684\u7eb9\u7406\u989c\u8272\u7684\u7ec4\u5408\uff1a</p> <pre><code>#version 330\n\nin vec2 frgTextCoords;\nin vec4 frgColor;\n\nuniform sampler2D txtSampler;\n\nout vec4 outColor;\n\nvoid main()\n{\n    outColor = frgColor  * texture(txtSampler, frgTextCoords);\n}\n</code></pre>"},{"location":"10-GUI/#_1","title":"\u5c06\u6240\u6709\u5185\u5bb9\u6574\u5408\u5728\u4e00\u8d77","text":"<p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u5c06\u6240\u6709\u524d\u9762\u7684\u90e8\u5206\u7c98\u5408\u5728\u4e00\u8d77\u6765\u6e32\u67d3GUI\u3002\u6211\u4eec\u9996\u5148\u5728<code>Render</code>\u7c7b\u4e2d\u4f7f\u7528\u65b0\u7684<code>GuiRender</code>\u7c7b\u3002</p> <pre><code>public class Render {\n    ...\n    private GuiRender guiRender;\n    ...\n    public Render(Window window) {\n        ...\n        guiRender = new GuiRender(window);\n    }\n\n    public void cleanup() {\n        ...\n        guiRender.cleanup();\n    }\n\n    public void render(Window window, Scene scene) {\n        ...\n        guiRender.render(scene);\n    }\n\n    public void resize(int width, int height) {\n        guiRender.resize(width, height);\n    }\n}\n</code></pre> <p>\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539<code>Engine</code>\u7c7b\u4ee5\u5728\u66f4\u65b0\u5faa\u73af\u4e2d\u5305\u542b<code>IGuiInstance</code>\uff0c\u5e76\u4f7f\u7528\u5176\u8fd4\u56de\u503c\u6765\u6307\u793a\u8f93\u5165\u662f\u5426\u5df2\u88ab\u6d88\u8017\u3002</p> <pre><code>public class Engine {\n    ...\n    public Engine(String windowTitle, Window.WindowOptions opts, IAppLogic appLogic) {\n        ...\n        render = new Render(window);\n        ...\n    }\n    ...\n    private void resize() {\n        int width = window.getWidth();\n        int height = window.getHeight();\n        scene.resize(width, height);\n        render.resize(width, height);\n    }\n\n    private void run() {\n        ...\n        IGuiInstance iGuiInstance = scene.getGuiInstance();\n        while (running &amp;&amp; !window.windowShouldClose()) {\n            ...\n            if (targetFps &lt;= 0 || deltaFps &gt;= 1) {\n                window.getMouseInput().input();\n                boolean inputConsumed = iGuiInstance != null &amp;&amp; iGuiInstance.handleGuiInput(scene, window);\n                appLogic.input(window, scene, now - initialTime, inputConsumed);\n            }\n            ...\n        }\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u8fd8\u9700\u8981\u66f4\u65b0<code>IAppLogic</code>\u63a5\u53e3\u4ee5\u4f7f\u7528\u8f93\u5165\u6d88\u8017\u7684\u8fd4\u56de\u503c\u3002</p> <pre><code>public interface IAppLogic {\n    ...\n    void input(Window window, Scene scene, long diffTimeMillis, boolean inputConsumed);\n    ...\n}\n</code></pre> <p>\u6700\u540e\uff0c\u6211\u4eec\u5c06\u5728<code>Main</code>\u7c7b\u4e2d\u5b9e\u73b0<code>IGuiInstance</code>\uff1a</p> <pre><code>public class Main implements IAppLogic, IGuiInstance {\n    ...\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-10\", new Window.WindowOptions(), main);\n        ...\n    }\n\n    ...\n    @Override\n    public void drawGui() {\n        ImGui.newFrame();\n        ImGui.setNextWindowPos(0, 0, ImGuiCond.Always);\n        ImGui.showDemoWindow();\n        ImGui.endFrame();\n        ImGui.render();\n    }\n\n    @Override\n    public boolean handleGuiInput(Scene scene, Window window) {\n        ImGuiIO imGuiIO = ImGui.getIO();\n        MouseInput mouseInput = window.getMouseInput();\n        Vector2f mousePos = mouseInput.getCurrentPos();\n        imGuiIO.addMousePosEvent(mousePos.x, mousePos.y);\n        imGuiIO.addMouseButtonEvent(0, mouseInput.isLeftButtonPressed());\n        imGuiIO.addMouseButtonEvent(1, mouseInput.isRightButtonPressed());\n\n        return imGuiIO.getWantCaptureMouse() || imGuiIO.getWantCaptureKeyboard();\n    }\n    ...\n    public void input(Window window, Scene scene, long diffTimeMillis, boolean inputConsumed) {\n        if (inputConsumed) {\n            return;\n        }\n        ...\n    }\n}\n</code></pre> <p>\u5728<code>drawGui</code>\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u5e27\u3001\u7a97\u53e3\u4f4d\u7f6e\uff0c\u5e76\u8c03\u7528<code>showDemoWindow</code>\u6765\u751f\u6210Imgui\u7684\u6f14\u793a\u7a97\u53e3\u3002\u5728\u7ed3\u675f\u5e27\u540e\uff0c\u8c03\u7528<code>render</code>\u975e\u5e38\u91cd\u8981\uff0c\u8fd9\u5c06\u6839\u636e\u5148\u524d\u5b9a\u4e49\u7684GUI\u7ed3\u6784\u751f\u6210\u4e00\u7ec4\u547d\u4ee4\u3002<code>handleGuiInput</code>\u9996\u5148\u83b7\u53d6\u9f20\u6807\u4f4d\u7f6e\uff0c\u5e76\u7528\u8be5\u4fe1\u606f\u548c\u9f20\u6807\u6309\u94ae\u72b6\u6001\u66f4\u65b0Imgui\u7684IO\u7c7b\u3002\u6211\u4eec\u8fd8\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u6307\u793a\u8f93\u5165\u662f\u5426\u5df2\u88abImgui\u6355\u83b7\u3002\u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0<code>input</code>\u65b9\u6cd5\u4ee5\u63a5\u6536\u8be5\u6807\u5fd7\u3002\u5728\u8fd9\u79cd\u7279\u5b9a\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u8f93\u5165\u5df2\u88abGUI\u6d88\u8017\uff0c\u6211\u4eec\u76f4\u63a5\u8fd4\u56de\u3002</p> <p>\u901a\u8fc7\u8fd9\u4e9b\u66f4\u6539\uff0c\u4f60\u5c06\u80fd\u591f\u770b\u5230Imgui\u6f14\u793a\u7a97\u53e3\u8986\u76d6\u5728\u65cb\u8f6c\u7684\u7acb\u65b9\u4f53\u4e0a\u3002\u4f60\u53ef\u4ee5\u4e0e\u4e0d\u540c\u7684\u65b9\u6cd5\u548c\u9762\u677f\u4ea4\u4e92\uff0c\u4ee5\u4e86\u89e3Imgui\u7684\u529f\u80fd\u3002</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"11-light/","title":"\u7b2c\u5341\u4e00\u7ae0 - \u5149\u7167","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4e3a\u6211\u4eec\u76843D\u6e38\u620f\u5f15\u64ce\u6dfb\u52a0\u5149\u7167\u3002\u6211\u4eec\u4e0d\u4f1a\u5b9e\u73b0\u4e00\u4e2a\u7269\u7406\u4e0a\u5b8c\u7f8e\u7684\u5149\u7167\u6a21\u578b\uff0c\u56e0\u4e3a\u6682\u4e14\u4e0d\u8c08\u5176\u590d\u6742\u6027\uff0c\u5b83\u5c31\u9700\u8981\u6781\u5927\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\u3002\u53d6\u800c\u4ee3\u4e4b\uff0c\u6211\u4eec\u5c06\u5b9e\u73b0\u4e00\u79cd\u80fd\u591f\u63d0\u4f9b\u5c1a\u53ef\u6548\u679c\u7684\u8fd1\u4f3c\u65b9\u6848\uff1a\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u79cd\u540d\u4e3aPhong shading\u7684\u7b97\u6cd5\uff08\u7531\u88f4\u7965\u98ceBui Tuong Phong\u5f00\u53d1\uff09\u3002\u53e6\u4e00\u70b9\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u6211\u4eec\u53ea\u4f1a\u5bf9\u5149\u7167\u672c\u8eab\u8fdb\u884c\u5efa\u6a21\uff0c\u800c\u4e0d\u4f1a\u5bf9\u8fd9\u4e9b\u5149\u7167\u672c\u5e94\u4ea7\u751f\u7684\u9634\u5f71\u8fdb\u884c\u5efa\u6a21\uff08\u8fd9\u5c06\u5728\u53e6\u4e00\u7ae0\u8282\u4e2d\u5b8c\u6210\uff09\u3002</p> <p>\u4f60\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"11-light/#_1","title":"\u4e00\u4e9b\u6982\u5ff5","text":"<p>\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u5b9a\u4e49\u51e0\u79cd\u5149\u6e90\u7c7b\u578b\uff1a</p> <ul> <li>\u70b9\u5149\u6e90\uff08Point light\uff09: \u6b64\u7c7b\u5149\u6e90\u6a21\u62df\u7684\u662f\u4ece\u7a7a\u95f4\u4e2d\u4e00\u70b9\u5411\u6240\u6709\u65b9\u5411\u5747\u5300\u53d1\u5c04\u7684\u5149\u6e90\u3002</li> <li>\u805a\u5149\u706f\uff08Spot light\uff09: \u6b64\u7c7b\u5149\u6e90\u6a21\u62df\u7684\u662f\u4ece\u7a7a\u95f4\u4e2d\u4e00\u70b9\u53d1\u5c04\u7684\u5149\u6e90\uff0c\u4f46\u5176\u53d1\u5c04\u8303\u56f4\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u5706\u9525\u4f53\u5185\uff0c\u800c\u975e\u6240\u6709\u65b9\u5411\u3002</li> <li>\u65b9\u5411\u5149\uff08Directional light\uff09: \u6b64\u7c7b\u5149\u6e90\u6a21\u62df\u7684\u662f\u6211\u4eec\u4ece\u592a\u9633\u63a5\u6536\u5230\u7684\u5149\u7ebf\uff0c3D\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u7269\u4f53\u90fd\u4f1a\u88ab\u6765\u81ea\u7279\u5b9a\u65b9\u5411\u7684\u5e73\u884c\u5149\u7ebf\u7167\u5c04\u3002\u65e0\u8bba\u7269\u4f53\u8fdc\u8fd1\uff0c\u6240\u6709\u5149\u7ebf\u90fd\u4ee5\u76f8\u540c\u7684\u89d2\u5ea6\u7167\u5c04\u5230\u7269\u4f53\u4e0a\u3002</li> <li>\u73af\u5883\u5149\uff08Ambient light\uff09: \u6b64\u7c7b\u5149\u6e90\u6765\u81ea\u7a7a\u95f4\u4e2d\u7684\u5404\u4e2a\u65b9\u5411\uff0c\u5e76\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u7167\u4eae\u6240\u6709\u7269\u4f53\u3002</li> </ul> <p></p> <p>\u56e0\u6b64\uff0c\u8981\u5bf9\u5149\u7167\u8fdb\u884c\u5efa\u6a21\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5149\u6e90\u7684\u7c7b\u578b\uff0c\u4ee5\u53ca\u5b83\u7684\u4f4d\u7f6e\u548c\u4e00\u4e9b\u5176\u4ed6\u53c2\u6570\uff0c\u6bd4\u5982\u5b83\u7684\u989c\u8272\u3002\u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u8003\u8651\u7269\u4f53\u53d7\u5230\u5149\u7ebf\u7167\u5c04\u65f6\u5438\u6536\u548c\u53cd\u5c04\u5149\u7ebf\u7684\u65b9\u5f0f\u3002</p> <p>\u51af\u6c0f\u7740\u8272\u7b97\u6cd5\u5c06\u4e3a\u6211\u4eec\u6a21\u578b\u4e2d\u7684\u6bcf\u4e2a\u70b9\uff08\u5373\u6bcf\u4e2a\u9876\u70b9\uff09\u6a21\u62df\u5149\u7167\u6548\u679c\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u88ab\u79f0\u4e3a\u5c40\u90e8\u5149\u7167\u6a21\u62df\uff0c\u4e5f\u6b63\u662f\u56e0\u6b64\uff0c\u8be5\u7b97\u6cd5\u4e0d\u4f1a\u8ba1\u7b97\u9634\u5f71\uff1a\u5b83\u53ea\u4f1a\u8ba1\u7b97\u5e94\u7528\u4e8e\u6bcf\u4e2a\u9876\u70b9\u7684\u5149\u7167\uff0c\u800c\u4e0d\u4f1a\u8003\u8651\u8be5\u9876\u70b9\u662f\u5426\u4f4d\u4e8e\u906e\u6321\u5149\u7ebf\u7684\u7269\u4f53\u4e4b\u540e\u3002\u6211\u4eec\u5c06\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u514b\u670d\u8fd9\u4e2a\u7f3a\u70b9\u3002\u4f46\u662f\uff0c\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u5b83\u662f\u4e00\u4e2a\u7b80\u5355\u5feb\u901f\u4e14\u80fd\u63d0\u4f9b\u975e\u5e38\u51fa\u8272\u6548\u679c\u7684\u7b97\u6cd5\u3002\u6211\u4eec\u5c06\u5728\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2a\u7b80\u5316\u7248\u672c\uff0c\u5b83\u4e0d\u6df1\u5165\u8003\u8651\u6750\u8d28\u7684\u7ec6\u8282\u3002</p> <p>\u51af\u6c0f\u7b97\u6cd5\u8003\u8651\u4e86\u5149\u7167\u7684\u4e09\u4e2a\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li>\u73af\u5883\u5149\uff08Ambient light\uff09: \u6a21\u62df\u6765\u81ea\u56db\u9762\u516b\u65b9\u7684\u5149\u7ebf\uff0c\u8fd9\u5c06\u7528\u4e8e\u4ee5\u6240\u9700\u5f3a\u5ea6\u7167\u4eae\u90a3\u4e9b\u6ca1\u6709\u88ab\u4efb\u4f55\u76f4\u63a5\u5149\u6e90\u7167\u5c04\u5230\u7684\u533a\u57df\uff0c\u5b83\u5c31\u50cf\u4e00\u79cd\u80cc\u666f\u5149\u3002</li> <li>\u6f2b\u53cd\u5c04\uff08Diffuse reflectance\uff09: \u8003\u8651\u5230\u671d\u5411\u5149\u6e90\u7684\u8868\u9762\u4f1a\u66f4\u4eae\u3002</li> <li>\u955c\u9762\u53cd\u5c04\uff08Specular reflectance\uff09: \u6a21\u62df\u5149\u7ebf\u5728\u629b\u5149\u6216\u91d1\u5c5e\u8868\u9762\u4e0a\u7684\u53cd\u5c04\u65b9\u5f0f\u3002</li> </ul> <p>\u6700\u7ec8\uff0c\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u4e00\u4e2a\u56e0\u5b50\uff0c\u5c06\u8be5\u56e0\u5b50\u4e58\u4ee5\u8d4b\u4e88\u7247\u6bb5\u7684\u989c\u8272\uff0c\u5c31\u80fd\u6839\u636e\u5176\u63a5\u6536\u5230\u7684\u5149\u7167\u4f7f\u8be5\u989c\u8272\u53d8\u4eae\u6216\u53d8\u6697\u3002\u8ba9\u6211\u4eec\u5c06\u8fd9\u4e9b\u5206\u91cf\u547d\u540d\u4e3a\uff1a\u73af\u5883\u5149\u4e3a \\(A\\)\uff0c\u6f2b\u53cd\u5c04\u4e3a \\(D\\)\uff0c\u955c\u9762\u53cd\u5c04\u4e3a \\(S\\)\u3002\u8fd9\u4e2a\u56e0\u5b50\u5c06\u662f\u8fd9\u4e9b\u5206\u91cf\u7684\u603b\u548c\uff1a</p> \\[L = A + D + S\\] <p>\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u5206\u91cf\u672c\u8eab\u5c31\u662f\u989c\u8272\uff0c\u5373\u6bcf\u79cd\u5149\u7167\u5206\u91cf\u6240\u8d21\u732e\u7684\u989c\u8272\u6210\u5206\u3002\u8fd9\u662f\u56e0\u4e3a\u5149\u7167\u5206\u91cf\u4e0d\u4ec5\u63d0\u4f9b\u4e00\u5b9a\u7684\u5f3a\u5ea6\uff0c\u5b83\u4eec\u8fd8\u53ef\u4ee5\u6539\u53d8\u6a21\u578b\u7684\u989c\u8272\u3002\u5728\u6211\u4eec\u7684\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u8be5\u5149\u7167\u989c\u8272\u4e58\u4ee5\u539f\u59cb\u7247\u6bb5\u989c\u8272\uff08\u4ece\u7eb9\u7406\u6216\u57fa\u7840\u989c\u8272\u4e2d\u83b7\u5f97\uff09\u5373\u53ef\u3002</p> <p>\u6211\u4eec\u8fd8\u53ef\u4ee5\u4e3a\u76f8\u540c\u7684\u6750\u8d28\u6307\u5b9a\u4e0d\u540c\u7684\u989c\u8272\uff0c\u5206\u522b\u7528\u4e8e\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u5206\u91cf\u5c06\u53d7\u5230\u4e0e\u6750\u8d28\u76f8\u5173\u8054\u7684\u989c\u8272\u6240\u8c03\u5236\u3002\u5982\u679c\u6750\u8d28\u6709\u7eb9\u7406\uff0c\u6211\u4eec\u5c06\u7b80\u5355\u5730\u4e3a\u6bcf\u4e2a\u5206\u91cf\u4f7f\u7528\u5355\u4e00\u7eb9\u7406\u3002</p> <p>\u6240\u4ee5\uff0c\u5bf9\u4e8e\u6ca1\u6709\u7eb9\u7406\u7684\u6750\u8d28\uff0c\u6700\u7ec8\u989c\u8272\u5c06\u662f\uff1a</p> \\[L = A * \\text{ambientColour} + D * \\text{diffuseColour} + S * \\text{specularColour}\\] <p>\u800c\u5bf9\u4e8e\u6709\u7eb9\u7406\u7684\u6750\u8d28\uff0c\u6700\u7ec8\u989c\u8272\u5c06\u662f\uff1a</p> \\[L = A * \\text{textureColour} + D * \\text{textureColour} + S * \\text{textureColour}\\]"},{"location":"11-light/#_2","title":"\u6cd5\u7ebf","text":"<p>\u5728\u5904\u7406\u5149\u7167\u65f6\uff0c\u6cd5\u7ebf\u662f\u4e00\u4e2a\u5173\u952e\u8981\u7d20\u3002\u8ba9\u6211\u4eec\u5148\u6765\u5b9a\u4e49\u5b83\u3002\u4e00\u4e2a\u5e73\u9762\u7684\u6cd5\u7ebf\u662f\u4e00\u4e2a\u5782\u76f4\u4e8e\u8be5\u5e73\u9762\u4e14\u957f\u5ea6\u4e3a\u4e00\u7684\u5411\u91cf\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4e00\u4e2a\u5e73\u9762\u53ef\u4ee5\u6709\u4e24\u4e2a\u6cd5\u7ebf\u3002\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u54ea\u4e00\u4e2a\u5462\uff1f\u57283D\u56fe\u5f62\u4e2d\uff0c\u6cd5\u7ebf\u7528\u4e8e\u5149\u7167\u8ba1\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u671d\u5411\u5149\u6e90\u7684\u90a3\u4e2a\u6cd5\u7ebf\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u4ece\u6a21\u578b\u5916\u8868\u9762\u6307\u51fa\u7684\u90a3\u4e2a\u6cd5\u7ebf\u3002</p> <p>\u5f53\u6211\u4eec\u6709\u4e00\u4e2a3D\u6a21\u578b\u65f6\uff0c\u5b83\u662f\u7531\u591a\u8fb9\u5f62\u7ec4\u6210\u7684\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f\u4e09\u89d2\u5f62\u3002\u6bcf\u4e2a\u4e09\u89d2\u5f62\u7531\u4e09\u4e2a\u9876\u70b9\u7ec4\u6210\u3002\u4e09\u89d2\u5f62\u7684\u6cd5\u5411\u91cf\u5c06\u662f\u5782\u76f4\u4e8e\u4e09\u89d2\u5f62\u8868\u9762\u4e14\u957f\u5ea6\u4e3a\u4e00\u7684\u5411\u91cf\u3002</p> <p>\u9876\u70b9\u6cd5\u7ebf\u4e0e\u7279\u5b9a\u9876\u70b9\u76f8\u5173\u8054\uff0c\u5e76\u4e14\u662f\u5468\u56f4\u4e09\u89d2\u5f62\u6cd5\u7ebf\u7684\u7ec4\u5408\uff08\u5f53\u7136\u5176\u957f\u5ea6\u4e5f\u4e3a\u4e00\uff09\u3002\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u52303D\u7f51\u683c\u7684\u9876\u70b9\u6cd5\u7ebf\u6a21\u578b\uff08\u53d6\u81ea\u7ef4\u57fa\u767e\u79d1\uff09</p> <p></p>"},{"location":"11-light/#_3","title":"\u6f2b\u53cd\u5c04","text":"<p>\u73b0\u5728\u6211\u4eec\u6765\u8ba8\u8bba\u6f2b\u53cd\u5c04\u3002\u5b83\u6a21\u62df\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u5782\u76f4\u671d\u5411\u5149\u6e90\u7684\u8868\u9762\u770b\u8d77\u6765\u6bd4\u90a3\u4e9b\u4ee5\u66f4\u95f4\u63a5\u89d2\u5ea6\u63a5\u6536\u5149\u7ebf\u7684\u8868\u9762\u66f4\u4eae\u3002\u8fd9\u4e9b\u7269\u4f53\u63a5\u6536\u5230\u66f4\u591a\u7684\u5149\uff0c\u5149\u7684\u5bc6\u5ea6\uff08\u8bf7\u5141\u8bb8\u6211\u8fd9\u6837\u79f0\u547c\u5b83\uff09\u66f4\u9ad8\u3002</p> <p></p> <p>\u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u8fd9\u4e2a\u5462\uff1f\u8fd9\u5c31\u662f\u6211\u4eec\u9996\u6b21\u5f00\u59cb\u4f7f\u7528\u6cd5\u7ebf\u7684\u5730\u65b9\u3002\u8ba9\u6211\u4eec\u4e3a\u4e0a\u56fe\u4e2d\u7684\u4e09\u4e2a\u70b9\u7ed8\u5236\u6cd5\u7ebf\u3002\u5982\u4f60\u6240\u89c1\uff0c\u6bcf\u4e2a\u70b9\u7684\u6cd5\u7ebf\u5c06\u662f\u5782\u76f4\u4e8e\u8be5\u70b9\u5207\u5e73\u9762\u7684\u5411\u91cf\u3002\u6211\u4eec\u5c06\u4e0d\u518d\u7ed8\u5236\u4ece\u5149\u6e90\u53d1\u51fa\u7684\u5149\u7ebf\uff0c\u800c\u662f\u7ed8\u5236\u4ece\u6bcf\u4e2a\u70b9\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\uff08\u5373\uff0c\u65b9\u5411\u76f8\u53cd\uff09\u3002</p> <p></p> <p>\u5982\u4f60\u6240\u89c1\uff0c\u4e0e \\(P1\\) \u76f8\u5173\u8054\u7684\u6cd5\u7ebf\uff0c\u8bb0\u4e3a \\(N1\\)\uff0c\u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u5e73\u884c\uff0c\u8be5\u5411\u91cf\u6a21\u62df\u4e86\u5149\u7ebf\u7684\u53cd\u65b9\u5411\uff08\\(N1\\) \u4e3a\u4e86\u4fbf\u4e8e\u89c2\u5bdf\u800c\u88ab\u753b\u5f97\u6709\u6240\u504f\u79fb\uff0c\u4f46\u6570\u5b66\u4e0a\u662f\u7b49\u6548\u7684\uff09\u3002\\(P1\\) \u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u4e3a \\(0\\) \u5ea6\u3002\u5176\u8868\u9762\u5782\u76f4\u4e8e\u5149\u6e90\uff0c\\(P1\\) \u5c06\u662f\u6700\u4eae\u7684\u70b9\u3002</p> <p>\u4e0e \\(P2\\) \u76f8\u5173\u8054\u7684\u6cd5\u7ebf\uff0c\u8bb0\u4e3a \\(N2\\)\uff0c\u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u5927\u7ea6\u621030\u5ea6\u89d2\uff0c\u6240\u4ee5\u5b83\u5e94\u8be5\u6bd4 \\(P1\\) \u6697\u4e00\u4e9b\u3002\u6700\u540e\uff0c\u4e0e \\(P3\\) \u76f8\u5173\u8054\u7684\u6cd5\u7ebf\uff0c\u8bb0\u4e3a \\(N3\\)\uff0c\u4e5f\u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u5e73\u884c\uff0c\u4f46\u8fd9\u4e24\u4e2a\u5411\u91cf\u65b9\u5411\u76f8\u53cd\u3002\\(P3\\) \u4e0e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u6210180\u5ea6\u89d2\uff0c\u56e0\u6b64\u6839\u672c\u4e0d\u5e94\u63a5\u6536\u5230\u4efb\u4f55\u5149\u7167\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u4f3c\u4e4e\u6709\u4e86\u4e00\u4e2a\u597d\u65b9\u6cd5\u6765\u786e\u5b9a\u5230\u8fbe\u4e00\u4e2a\u70b9\u7684\u5149\u7167\u5f3a\u5ea6\uff0c\u8fd9\u4e0e\u6cd5\u7ebf\u548c\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u6240\u5f62\u6210\u7684\u5939\u89d2\u6709\u5173\u3002\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u8fd9\u4e2a\u5462\uff1f</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u6570\u5b66\u8fd0\u7b97\uff0c\u5373\u70b9\u79ef\uff08dot product\uff09\u3002\u8fd9\u4e2a\u8fd0\u7b97\u53d6\u4e24\u4e2a\u5411\u91cf\u5e76\u4ea7\u751f\u4e00\u4e2a\u6570\uff08\u4e00\u4e2a\u6807\u91cf\uff09\uff0c\u5982\u679c\u5b83\u4eec\u4e4b\u95f4\u7684\u5939\u89d2\u662f\u9510\u89d2\uff0c\u5219\u8be5\u6570\u4e3a\u6b63\uff1b\u5982\u679c\u5939\u89d2\u662f\u949d\u89d2\uff0c\u5219\u4e3a\u8d1f\u3002\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u90fd\u5df2\u5f52\u4e00\u5316\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u4eec\u7684\u957f\u5ea6\u90fd\u7b49\u4e8e\u4e00\uff0c\u90a3\u4e48\u70b9\u79ef\u7684\u503c\u5c06\u5728 \\(-1\\) \u548c \\(1\\) \u4e4b\u95f4\u3002\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u65b9\u5411\u5b8c\u5168\u76f8\u540c\uff08\u5939\u89d2 \\(0\\) \u5ea6\uff09\uff0c\u70b9\u79ef\u4e3a \\(1\\)\uff1b\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u6210\u76f4\u89d2\uff0c\u70b9\u79ef\u4e3a \\(0\\)\uff1b\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u65b9\u5411\u76f8\u53cd\uff0c\u70b9\u79ef\u4e3a \\(-1\\)\u3002</p> <p>\u8ba9\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u5411\u91cf\uff0c\\(v1\\) \u548c \\(v2\\)\uff0c\u5e76\u8bbe \\(alpha\\) \u4e3a\u5b83\u4eec\u4e4b\u95f4\u7684\u5939\u89d2\u3002\u70b9\u79ef\u7531\u4ee5\u4e0b\u516c\u5f0f\u5b9a\u4e49\uff1a</p> <p></p> <p>\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u90fd\u5df2\u5f52\u4e00\u5316\uff0c\u5b83\u4eec\u7684\u957f\u5ea6\uff08\u6a21\uff09\u5c06\u7b49\u4e8e\u4e00\uff0c\u6240\u4ee5\u70b9\u79ef\u7b49\u4e8e\u5b83\u4eec\u4e4b\u95f4\u5939\u89d2\u7684\u4f59\u5f26\u503c\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8fd9\u4e2a\u8fd0\u7b97\u6765\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5206\u91cf\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u3002\u6211\u4eec\u8be5\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u6709\u6bcf\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff08\u9876\u70b9\u4f4d\u7f6e\uff09\uff0c\u5e76\u4e14\u6211\u4eec\u6709\u5149\u6e90\u7684\u4f4d\u7f6e\u3002\u9996\u5148\uff0c\u8fd9\u4e24\u4e2a\u5750\u6807\u5fc5\u987b\u5728\u540c\u4e00\u4e2a\u5750\u6807\u7a7a\u95f4\u4e2d\u3002\u4e3a\u7b80\u5316\u8d77\u89c1\uff0c\u6211\u4eec\u5047\u8bbe\u5b83\u4eec\u90fd\u5728\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u4e2d\uff1a\u90a3\u4e48\u8fd9\u4e9b\u4f4d\u7f6e\u5c31\u662f\u6307\u5411\u9876\u70b9\u4f4d\u7f6e\uff08\\(VP\\)\uff09\u548c\u5149\u6e90\uff08\\(VS\\)\uff09\u7684\u5411\u91cf\u7684\u5750\u6807\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u5982\u679c\u6211\u4eec\u4ece \\(wVP\\) \u4e2d\u51cf\u53bb \\(VS\\)\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u7684\u5411\u91cf\uff0c\u79f0\u4e4b\u4e3a \\(L\\)\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u4e0e\u6cd5\u7ebf\u4e4b\u95f4\u7684\u70b9\u79ef\u3002\u8fd9\u4e2a\u4e58\u79ef\u88ab\u79f0\u4e3a\u5170\u4f2f\u7279\u9879\uff08Lambert term\uff09\uff0c\u4ee5\u7ea6\u7ff0\u00b7\u6d77\u56e0\u91cc\u5e0c\u00b7\u5170\u4f2f\u7279\uff08Johann Lambert\uff09\u547d\u540d\uff0c\u4ed6\u9996\u5148\u63d0\u51fa\u4e86\u7528\u8fd9\u79cd\u5173\u7cfb\u6765\u6a21\u62df\u8868\u9762\u4eae\u5ea6\u3002</p> <p>\u8ba9\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\u5982\u4f55\u8ba1\u7b97\u5b83\u3002\u6211\u4eec\u5b9a\u4e49\u4ee5\u4e0b\u53d8\u91cf\uff1a</p> <ul> <li>\\(vPos\\): \u6211\u4eec\u7684\u9876\u70b9\u5728\u6a21\u578b\u89c6\u56fe\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002</li> <li>\\(lPos\\): \u5149\u6e90\u5728\u89c6\u56fe\u7a7a\u95f4\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\u3002</li> <li>\\(intensity\\): \u5149\u7684\u5f3a\u5ea6\uff08\u4ece0\u52301\uff09\u3002</li> <li>\\(lColour\\): \u5149\u7684\u989c\u8272\u3002</li> <li>\\(normal\\): \u9876\u70b9\u6cd5\u7ebf\u3002</li> </ul> <p>\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4ece\u5f53\u524d\u4f4d\u7f6e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\uff1a\\(toLightDirection = lPos - vPos\\)\u3002\u8be5\u8fd0\u7b97\u7684\u7ed3\u679c\u9700\u8981\u88ab\u5f52\u4e00\u5316\u3002</p> <p>\u7136\u540e\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6f2b\u53cd\u5c04\u56e0\u5b50\uff08\u4e00\u4e2a\u6807\u91cf\uff09\uff1a\\(diffuseFactor = normal \\cdot toLightDirection\\)\u3002\u5b83\u662f\u901a\u8fc7\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\u8ba1\u7b97\u5f97\u5230\u7684\uff0c\u5e76\u4e14\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5b83\u5728 \\(-1\\) \u548c \\(1\\) \u4e4b\u95f4\uff0c\u6240\u4ee5\u4e24\u4e2a\u5411\u91cf\u90fd\u9700\u8981\u88ab\u5f52\u4e00\u5316\u3002\u989c\u8272\u503c\u9700\u8981\u5728 \\(0\\) \u548c \\(1\\) \u4e4b\u95f4\uff0c\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u503c\u4f4e\u4e8e \\(0\\)\uff0c\u6211\u4eec\u5c06\u5b83\u8bbe\u4e3a0\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u6f2b\u53cd\u5c04\u56e0\u5b50\u548c\u5149\u7167\u5f3a\u5ea6\u6765\u8c03\u5236\u5149\u7167\u989c\u8272\uff1a</p> \\[color = diffuseColour * lColour * diffuseFactor * intensity\\]"},{"location":"11-light/#_4","title":"\u955c\u9762\u53cd\u5c04\u5206\u91cf","text":"<p>\u5728\u8003\u8651\u955c\u9762\u53cd\u5c04\u5206\u91cf\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5ba1\u89c6\u5149\u662f\u5982\u4f55\u53cd\u5c04\u7684\u3002\u5f53\u5149\u7ebf\u7167\u5c04\u5230\u8868\u9762\u65f6\uff0c\u4e00\u90e8\u5206\u88ab\u5438\u6536\uff0c\u53e6\u4e00\u90e8\u5206\u88ab\u53cd\u5c04\u3002\u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\u7269\u7406\u8bfe\u4e0a\u5b66\u8fc7\u7684\uff0c\u53cd\u5c04\u662f\u6307\u5149\u7ebf\u4ece\u7269\u4f53\u8868\u9762\u5f39\u56de\u7684\u73b0\u8c61\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u8868\u9762\u5e76\u975e\u5b8c\u5168\u5149\u6ed1\uff0c\u5982\u679c\u8fd1\u8ddd\u79bb\u89c2\u5bdf\uff0c\u4f60\u4f1a\u770b\u5230\u8bb8\u591a\u7455\u75b5\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6709\u8bb8\u591a\u5149\u7ebf\uff08\u5b9e\u9645\u4e0a\u662f\u5149\u5b50\uff09\u7167\u5c04\u5230\u8be5\u8868\u9762\uff0c\u5e76\u4ee5\u5404\u79cd\u89d2\u5ea6\u53cd\u5c04\u51fa\u53bb\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u770b\u5230\u7684\u662f\u50cf\u4e00\u675f\u5149\u4ece\u8868\u9762\u53cd\u5c04\u51fa\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5149\u5728\u7167\u5c04\u5230\u8868\u9762\u65f6\u4f1a\u53d1\u751f\u6f2b\u5c04\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684\u6f2b\u53cd\u5c04\u5206\u91cf\u3002</p> <p></p> <p>\u4f46\u662f\u5f53\u5149\u7ebf\u7167\u5c04\u5230\u629b\u5149\u8868\u9762\uff0c\u4f8b\u5982\u91d1\u5c5e\u65f6\uff0c\u5149\u7ebf\u906d\u53d7\u7684\u6f2b\u5c04\u8f83\u5c11\uff0c\u5927\u90e8\u5206\u4f1a\u4ee5\u4e0e\u5176\u5165\u5c04\u65b9\u5411\u76f8\u53cd\u7684\u65b9\u5411\u53cd\u5c04\u51fa\u53bb\u3002</p> <p></p> <p>\u8fd9\u5c31\u662f\u955c\u9762\u53cd\u5c04\u5206\u91cf\u6240\u6a21\u62df\u7684\uff0c\u5b83\u53d6\u51b3\u4e8e\u6750\u8d28\u7684\u7279\u6027\u3002\u5173\u4e8e\u955c\u9762\u53cd\u5c04\uff0c\u9700\u8981\u6ce8\u610f\u7684\u91cd\u8981\u4e00\u70b9\u662f\uff0c\u53cd\u5c04\u5149\u53ea\u6709\u5728\u76f8\u673a\u5904\u4e8e\u9002\u5f53\u4f4d\u7f6e\u65f6\u624d\u53ef\u89c1\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u76f8\u673a\u4f4d\u4e8e\u53cd\u5c04\u5149\u53d1\u5c04\u7684\u533a\u57df\u5185\u3002</p> <p></p> <p>\u65e2\u7136\u955c\u9762\u53cd\u5c04\u7684\u539f\u7406\u5df2\u7ecf\u9610\u91ca\u6e05\u695a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u8ba1\u7b97\u8be5\uff08\u955c\u9762\u53cd\u5c04\uff09\u5206\u91cf\u4e86\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4ece\u5149\u6e90\u6307\u5411\u9876\u70b9\u7684\u5411\u91cf\u3002\u5728\u4e4b\u524d\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5206\u91cf\u65f6\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u5411\u91cf <code>toLightDirection</code> \u65b9\u5411\u6070\u597d\u76f8\u53cd\u2014\u2014\u5b83\u662f\u4ece\u9876\u70b9\u6307\u5411\u5149\u6e90\u7684\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u65b0\u7684\u3001\u4ece\u5149\u6e90\u53d1\u51fa\u7684\u5411\u91cf <code>fromLightDirection</code> \u5c31\u53ef\u4ee5\u8ba1\u7b97\u4e3a\uff1a\\(fromLightDirection = -(toLightDirection)\\)\u3002</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97 \\(fromLightDirection\\) \u5165\u5c04\u5230\u8868\u9762\uff08\u8003\u8651\u5176\u6cd5\u7ebf\uff09\u540e\u4ea7\u751f\u7684\u53cd\u5c04\u5149\u3002GLSL\u4e2d\u6709\u4e00\u4e2a\u51fd\u6570 <code>reflect</code> \u6b63\u597d\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u6240\u4ee5\uff0c\\(reflectedLight = reflect(fromLightSource, normal)\\)\u3002</p> <p>\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u6307\u5411\u76f8\u673a\u7684\u5411\u91cf\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \\(cameraDirection\\)\uff0c\u5b83\u5c06\u901a\u8fc7\u76f8\u673a\u4f4d\u7f6e\u4e0e\u9876\u70b9\u4f4d\u7f6e\u4e4b\u5dee\u8ba1\u7b97\u5f97\u51fa\uff1a\\(cameraDirection = cameraPos - vPos\\)\u3002\u76f8\u673a\u4f4d\u7f6e\u5411\u91cf\u548c\u9876\u70b9\u4f4d\u7f6e\u9700\u8981\u5728\u540c\u4e00\u4e2a\u5750\u6807\u7cfb\u4e2d\uff0c\u5e76\u4e14\u7ed3\u679c\u5411\u91cf\u9700\u8981\u88ab\u5f52\u4e00\u5316\u3002\u4e0b\u56fe\u5927\u81f4\u63cf\u7ed8\u4e86\u6211\u4eec\u76ee\u524d\u4e3a\u6b62\u8ba1\u7b97\u51fa\u7684\u4e3b\u8981\u5206\u91cf\u3002</p> <p></p> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6211\u4eec\u770b\u5230\u7684\u7684\u5149\u7167\u5f3a\u5ea6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \\(specularFactor\\)\u3002\u5982\u679c \\(cameraDirection\\) \u548c \\(reflectedLight\\) \u5411\u91cf\u5e73\u884c\u4e14\u6307\u5411\u76f8\u540c\u65b9\u5411\uff0c\u5219\u8be5\u5206\u91cf\u4f1a\u66f4\u9ad8\uff1b\u5982\u679c\u5b83\u4eec\u6307\u5411\u76f8\u53cd\u65b9\u5411\uff0c\u5219\u8be5\u5206\u91cf\u53d6\u6700\u5c0f\u503c\u3002\u4e3a\u4e86\u8ba1\u7b97\u8fd9\u4e2a\uff0c\u70b9\u79ef\u518d\u6b21\u6d3e\u4e0a\u7528\u573a\u3002\u6240\u4ee5 \\(specularFactor = cameraDirection \\cdot reflectedLight\\)\u3002\u6211\u4eec\u53ea\u5e0c\u671b\u8fd9\u4e2a\u503c\u5728 \\(0\\) \u548c \\(1\\) \u4e4b\u95f4\uff0c\u6240\u4ee5\u5982\u679c\u5b83\u5c0f\u4e8e \\(0\\)\uff0c\u5b83\u5c06\u88ab\u8bbe\u4e3a0\u3002</p> <p>\u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651\u5230\uff0c\u5982\u679c\u76f8\u673a\u6b63\u5bf9\u7740\u53cd\u5c04\u5149\u7684\u9525\u5f62\u533a\u57df\uff0c\u8fd9\u79cd\u5149\u5e94\u8be5\u66f4\u5f3a\u70c8\u3002\u8fd9\u5c06\u901a\u8fc7\u5c06 \\(specularFactor\\) \u63d0\u5347\u5230\u4e00\u4e2a\u540d\u4e3a \\(specularPower\\) \u7684\u53c2\u6570\u7684\u5e42\u6765\u5b9e\u73b0\u3002</p> \\[specularFactor = specularFactor^{specularPower}\\] <p>\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u6750\u8d28\u7684\u53cd\u5c04\u7387\uff08reflectivity\uff09\uff0c\u5b83\u4e5f\u5c06\u8c03\u5236\u53cd\u5c04\u5149\u7684\u5f3a\u5ea6\u3002\u8fd9\u5c06\u901a\u8fc7\u53e6\u4e00\u4e2a\u540d\u4e3a reflectance \u7684\u53c2\u6570\u6765\u5b8c\u6210\u3002\u6240\u4ee5\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\u5c06\u662f\uff1a \\(\\(specularColour * lColour * reflectance * specularFactor * intensity\\)\\)</p>"},{"location":"11-light/#_5","title":"\u8870\u51cf","text":"<p>\u6211\u4eec\u73b0\u5728\u77e5\u9053\u5982\u4f55\u8ba1\u7b97\u4e09\u4e2a\u5206\u91cf\uff0c\u5b83\u4eec\u5c06\u5e2e\u52a9\u6211\u4eec\u7528\u73af\u5883\u5149\u6765\u6a21\u62df\u70b9\u5149\u6e90\u3002\u4f46\u662f\u6211\u4eec\u7684\u5149\u7167\u6a21\u578b\u4ecd\u7136\u4e0d\u5b8c\u6574\uff0c\u56e0\u4e3a\u7269\u4f53\u53cd\u5c04\u7684\u5149\u4e0e\u5176\u79bb\u5149\u6e90\u7684\u8ddd\u79bb\u65e0\u5173\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6a21\u62df\u5149\u7684\u8870\u51cf\u3002</p> <p>\u8870\u51cf\u662f\u8ddd\u79bb\u548c\u5149\u7167\u7684\u51fd\u6570\u3002\u5149\u7684\u5f3a\u5ea6\u4e0e\u8ddd\u79bb\u7684\u5e73\u65b9\u6210\u53cd\u6bd4\u3002\u8fd9\u4e2a\u4e8b\u5b9e\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u56e0\u4e3a\u5149\u5728\u4f20\u64ad\u65f6\u5c06\u5176\u80fd\u91cf\u5206\u5e03\u5728\u4e00\u4e2a\u7403\u4f53\u7684\u8868\u9762\u4e0a\uff0c\u8be5\u7403\u4f53\u7684\u534a\u5f84\u7b49\u4e8e\u5149\u4f20\u64ad\u7684\u8ddd\u79bb\uff0c\u800c\u7403\u4f53\u7684\u8868\u9762\u79ef\u4e0e\u5176\u534a\u5f84\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u516c\u5f0f\u8ba1\u7b97\u8870\u51cf\u56e0\u5b50\uff1a\\(1.0 / (atConstant + atLinear * dist + atExponent * dist^{2})\\)\u3002</p> <p>\u4e3a\u4e86\u6a21\u62df\u8870\u51cf\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6700\u7ec8\u989c\u8272\u4e58\u4ee5\u8fd9\u4e2a\u8870\u51cf\u56e0\u5b50\u3002</p>"},{"location":"11-light/#_6","title":"\u65b9\u5411\u5149","text":"<p>\u65b9\u5411\u5149\u4ee5\u5e73\u884c\u7684\u5149\u7ebf\u7167\u5c04\u6240\u6709\u7269\u4f53\uff0c\u8fd9\u4e9b\u5149\u7ebf\u90fd\u6765\u81ea\u540c\u4e00\u4e2a\u65b9\u5411\u3002\u5b83\u6a21\u62df\u4e86\u90a3\u4e9b\u8ddd\u79bb\u5f88\u8fdc\u4f46\u5f3a\u5ea6\u5f88\u9ad8\u7684\u5149\u6e90\uff0c\u4f8b\u5982\u592a\u9633\u3002</p> <p></p> <p>\u65b9\u5411\u5149\u7684\u53e6\u4e00\u4e2a\u7279\u70b9\u662f\u5b83\u4e0d\u53d7\u8870\u51cf\u7684\u5f71\u54cd\u3002\u518d\u60f3\u60f3\u9633\u5149\uff1a\u6240\u6709\u88ab\u5149\u7ebf\u7167\u5c04\u5230\u7684\u7269\u4f53\u90fd\u4ee5\u76f8\u540c\u7684\u5f3a\u5ea6\u88ab\u7167\u4eae\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e\u592a\u9633\u7684\u8ddd\u79bb\u5982\u6b64\u4e4b\u8fdc\uff0c\u4ee5\u81f3\u4e8e\u7269\u4f53\u7684\u4f4d\u7f6e\u65e0\u5173\u7d27\u8981\u3002\u4e8b\u5b9e\u4e0a\uff0c\u65b9\u5411\u5149\u88ab\u5efa\u6a21\u4e3a\u653e\u7f6e\u5728\u65e0\u7a77\u8fdc\u5904\u7684\u70b9\u5149\u6e90\uff0c\u5982\u679c\u5b83\u53d7\u5230\u8870\u51cf\u7684\u5f71\u54cd\uff0c\u5b83\u5c06\u5bf9\u4efb\u4f55\u7269\u4f53\u90fd\u6ca1\u6709\u6548\u679c\uff08\u5176\u989c\u8272\u8d21\u732e\u5c06\u7b49\u4e8e \\(0\\)\uff09\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u65b9\u5411\u5149\u4e5f\u7531\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7ec4\u6210\u3002\u4e0e\u70b9\u5149\u6e90\u7684\u552f\u4e00\u533a\u522b\u5728\u4e8e\u5b83\u6ca1\u6709\u4f4d\u7f6e\uff0c\u53ea\u6709\u4e00\u4e2a\u65b9\u5411\uff0c\u5e76\u4e14\u5b83\u4e0d\u53d7\u8870\u51cf\u7684\u5f71\u54cd\u3002\u8ba9\u6211\u4eec\u56de\u5230\u65b9\u5411\u5149\u7684\u201c\u65b9\u5411\u201d\u5c5e\u6027\uff0c\u60f3\u8c61\u6211\u4eec\u6b63\u5728\u6a21\u62df\u592a\u9633\u5728\u6211\u4eec\u76843D\u4e16\u754c\u4e2d\u79fb\u52a8\u3002\u5982\u679c\u6211\u4eec\u5047\u8bbe\u5317\u65b9\u671d\u5411z\u8f74\u6b63\u65b9\u5411\uff0c\u4e0b\u56fe\u663e\u793a\u4e86\u9ece\u660e\u3001\u6b63\u5348\u548c\u9ec4\u660f\u65f6\u5149\u6e90\u7684\u65b9\u5411\u3002</p> <p></p>"},{"location":"11-light/#_7","title":"\u805a\u5149\u706f","text":"<p>\u73b0\u5728\u6211\u4eec\u5c06\u5b9e\u73b0\u805a\u5149\u706f\uff0c\u5b83\u4e0e\u70b9\u5149\u6e90\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u5176\u53d1\u51fa\u7684\u5149\u88ab\u9650\u5236\u5728\u4e00\u4e2a\u4e09\u7ef4\u5706\u9525\u4f53\u5185\u3002\u5b83\u6a21\u62df\u4e86\u6765\u81ea\u805a\u5149\u706f\u6216\u5176\u4ed6\u975e\u5168\u5411\u53d1\u5c04\u5149\u6e90\u7684\u5149\u7ebf\u3002\u805a\u5149\u706f\u5177\u6709\u4e0e\u70b9\u5149\u6e90\u76f8\u540c\u7684\u5c5e\u6027\uff0c\u4f46\u589e\u52a0\u4e86\u4e24\u4e2a\u65b0\u53c2\u6570\uff1a\u9525\u89d2\u548c\u9525\u5411\u3002</p> <p></p> <p>\u805a\u5149\u706f\u7684\u8d21\u732e\u8ba1\u7b97\u65b9\u5f0f\u4e0e\u70b9\u5149\u6e90\u76f8\u540c\uff0c\u4f46\u6709\u4e00\u4e9b\u4f8b\u5916\u3002\u90a3\u4e9b\u4ece\u9876\u70b9\u4f4d\u7f6e\u6307\u5411\u5149\u6e90\u7684\u5411\u91cf\u4e0d\u5305\u542b\u5728\u5149\u9525\u5185\u7684\u70b9\uff0c\u4e0d\u53d7\u70b9\u5149\u6e90\u7684\u5f71\u54cd\u3002</p> <p></p> <p>\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u5b83\u662f\u5426\u5728\u5149\u9525\u5185\u90e8\u5462\uff1f\u6211\u4eec\u9700\u8981\u518d\u6b21\u5bf9\u4ece\u5149\u6e90\u53d1\u51fa\u7684\u5411\u91cf\u548c\u9525\u4f53\u65b9\u5411\u5411\u91cf\uff08\u4e24\u8005\u90fd\u5df2\u5f52\u4e00\u5316\uff09\u8fdb\u884c\u70b9\u79ef\u8fd0\u7b97\u3002</p> <p></p> <p>\u5411\u91cf \\(L\\) \u548c \\(C\\) \u4e4b\u95f4\u7684\u70b9\u79ef\u7b49\u4e8e\uff1a\\(\\vec{L}\\cdot\\vec{C}=|\\vec{L}|\\cdot|\\vec{C}|\\cdot Cos(\\alpha)\\)\u3002\u5982\u679c\u5728\u6211\u4eec\u7684\u805a\u5149\u706f\u5b9a\u4e49\u4e2d\u5b58\u50a8\u4e86\u622a\u6b62\u89d2\u7684\u4f59\u5f26\u503c\uff0c\u82e5\u70b9\u79ef\u5927\u4e8e\u8be5\u503c\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u5728\u5149\u9525\u5185\u90e8\uff08\u56de\u60f3\u4e00\u4e0b\u4f59\u5f26\u51fd\u6570\u56fe\u50cf\uff0c\u5f53\u5939\u89d2 \\(\u03b1\\) \u4e3a \\(0\\) \u65f6\uff0c\u4f59\u5f26\u503c\u4e3a \\(1\\)\uff0c\u5939\u89d2\u8d8a\u5c0f\uff0c\u4f59\u5f26\u503c\u8d8a\u5927\uff09\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u533a\u522b\u662f\uff0c\u8fdc\u79bb\u9525\u4f53\u5411\u91cf\u7684\u70b9\u5c06\u63a5\u6536\u5230\u8f83\u5c11\u7684\u5149\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8870\u51cf\u4f1a\u66f4\u5927\u3002\u6709\u51e0\u79cd\u8ba1\u7b97\u65b9\u6cd5\uff1b\u6211\u4eec\u5c06\u9009\u62e9\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5373\u5c06\u8870\u51cf\u4e58\u4ee5\u4ee5\u4e0b\u56e0\u5b50\uff1a</p> \\[1 - (1-Cos(\\alpha))/(1-Cos(cutOffAngle))\\] <p>\uff08\u5728\u6211\u4eec\u7684\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u89d2\u5ea6\u503c\uff0c\u800c\u662f\u622a\u6b62\u89d2\u7684\u4f59\u5f26\u503c\u3002\u4f60\u53ef\u4ee5\u9a8c\u8bc1\u4e0a\u8ff0\u516c\u5f0f\u4ea7\u751f\u7684\u503c\u57280\u52301\u4e4b\u95f4\uff0c\u5f53\u89d2\u5ea6\u7b49\u4e8e\u622a\u6b62\u89d2\u65f6\u4e3a0\uff0c\u5f53\u89d2\u5ea6\u4e3a0\u65f6\u4e3a1\uff09\u3002</p>"},{"location":"11-light/#_8","title":"\u5b9e\u73b0\u5149\u7167\u7c7b","text":"<p>\u8ba9\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u7ec4\u7c7b\u6765\u6a21\u62df\u4e0d\u540c\u7c7b\u578b\u7684\u5149\u6e90\u3002\u6211\u4eec\u5c06\u4ece\u6a21\u62df\u70b9\u5149\u6e90\u7684\u7c7b\u5f00\u59cb\uff1a</p> <pre><code>package org.lwjglb.engine.scene.lights;\n\nimport org.joml.Vector3f;\n\npublic class PointLight {\n\n    private Attenuation attenuation;\n    private Vector3f color;\n    private float intensity;\n    private Vector3f position;\n\n    public PointLight(Vector3f color, Vector3f position, float intensity) {\n        attenuation = new Attenuation(0, 0, 1); // \u8870\u51cf\u53c2\u6570\u9ed8\u8ba4\u4e3a (0, 0, 1)\n        this.color = color;\n        this.position = position;\n        this.intensity = intensity;\n    }\n\n    public Attenuation getAttenuation() {\n        return attenuation;\n    }\n\n    public Vector3f getColor() {\n        return color;\n    }\n\n    public float getIntensity() {\n        return intensity;\n    }\n\n    public Vector3f getPosition() {\n        return position;\n    }\n\n    public void setAttenuation(Attenuation attenuation) {\n        this.attenuation = attenuation;\n    }\n\n    public void setColor(Vector3f color) {\n        this.color = color;\n    }\n\n    public void setColor(float r, float g, float b) {\n        color.set(r, g, b);\n    }\n\n    public void setIntensity(float intensity) {\n        this.intensity = intensity;\n    }\n\n    public void setPosition(float x, float y, float z) {\n        position.set(x, y, z);\n    }\n\n    public static class Attenuation {\n\n        private float constant;  // \u5e38\u6570\u9879\n        private float exponent;  // \u6307\u6570\u9879\n        private float linear;    // \u7ebf\u6027\u9879\n\n        public Attenuation(float constant, float linear, float exponent) {\n            this.constant = constant;\n            this.linear = linear;\n            this.exponent = exponent;\n        }\n\n        public float getConstant() {\n            return constant;\n        }\n\n        public float getExponent() {\n            return exponent;\n        }\n\n        public float getLinear() {\n            return linear;\n        }\n\n        public void setConstant(float constant) {\n            this.constant = constant;\n        }\n\n        public void setExponent(float exponent) {\n            this.exponent = exponent;\n        }\n\n        public void setLinear(float linear) {\n            this.linear = linear;\n        }\n    }\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u70b9\u5149\u6e90\u7531\u989c\u8272\u3001\u5f3a\u5ea6\u3001\u4f4d\u7f6e\u548c\u8870\u51cf\u6a21\u578b\u5b9a\u4e49\u3002</p> <p>\u73af\u5883\u5149\u4ec5\u7531\u989c\u8272\u548c\u5f3a\u5ea6\u5b9a\u4e49\uff1a</p> <pre><code>package org.lwjglb.engine.scene.lights;\n\nimport org.joml.Vector3f;\n\npublic class AmbientLight {\n\n    private Vector3f color; // \u989c\u8272\n\n    private float intensity; // \u5f3a\u5ea6\n\n    public AmbientLight(float intensity, Vector3f color) {\n        this.intensity = intensity;\n        this.color = color;\n    }\n\n    public AmbientLight() {\n        this(1.0f, new Vector3f(1.0f, 1.0f, 1.0f)); // \u9ed8\u8ba4\u5f3a\u5ea6\u4e3a1\uff0c\u989c\u8272\u4e3a\u767d\u8272\n    }\n\n    public Vector3f getColor() {\n        return color;\n    }\n\n    public float getIntensity() {\n        return intensity;\n    }\n\n    public void setColor(Vector3f color) {\n        this.color = color;\n    }\n\n    public void setColor(float r, float g, float b) {\n        color.set(r, g, b);\n    }\n\n    public void setIntensity(float intensity) {\n        this.intensity = intensity;\n    }\n}\n</code></pre> <p>\u65b9\u5411\u5149\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.scene.lights;\n\nimport org.joml.Vector3f;\n\npublic class DirLight { // \u65b9\u5411\u5149\u7c7b\n\n    private Vector3f color; // \u989c\u8272\n\n    private Vector3f direction; // \u65b9\u5411\n\n    private float intensity; // \u5f3a\u5ea6\n\n    public DirLight(Vector3f color, Vector3f direction, float intensity) {\n        this.color = color;\n        this.direction = direction;\n        this.intensity = intensity;\n    }\n\n    public Vector3f getColor() {\n        return color;\n    }\n\n    public Vector3f getDirection() {\n        return direction;\n    }\n\n    public float getIntensity() {\n        return intensity;\n    }\n\n    public void setColor(Vector3f color) {\n        this.color = color;\n    }\n\n    public void setColor(float r, float g, float b) {\n        color.set(r, g, b);\n    }\n\n    public void setDirection(Vector3f direction) {\n        this.direction = direction;\n    }\n\n    public void setIntensity(float intensity) {\n        this.intensity = intensity;\n    }\n\n    public void setPosition(float x, float y, float z) { // \u6ce8\u610f\uff1a\u8fd9\u91cc\u65b9\u6cd5\u540d\u662fsetPosition\uff0c\u4f46\u5b9e\u9645\u8bbe\u7f6e\u7684\u662fdirection\n        direction.set(x, y, z);\n    }\n}\n</code></pre> <p>\u6700\u540e\uff0c\u805a\u5149\u706f\u4ec5\u5305\u542b\u4e00\u4e2a\u70b9\u5149\u6e90\u5f15\u7528\u4ee5\u53ca\u5149\u9525\u53c2\u6570\uff1a</p> <pre><code>package org.lwjglb.engine.scene.lights;\n\nimport org.joml.Vector3f;\n\npublic class SpotLight { // \u805a\u5149\u706f\u7c7b\n\n    private Vector3f coneDirection; // \u9525\u4f53\u65b9\u5411\n    private float cutOff;           // \u622a\u6b62\u89d2\u7684\u4f59\u5f26\u503c\n    private float cutOffAngle;      // \u622a\u6b62\u89d2\uff08\u89d2\u5ea6\u5236\uff09\n    private PointLight pointLight;  // \u5185\u542b\u7684\u70b9\u5149\u6e90\n\n    public SpotLight(PointLight pointLight, Vector3f coneDirection, float cutOffAngle) {\n        this.pointLight = pointLight;\n        this.coneDirection = coneDirection;\n        this.cutOffAngle = cutOffAngle;\n        setCutOffAngle(cutOffAngle); // \u521d\u59cb\u5316\u65f6\u8ba1\u7b97\u622a\u6b62\u89d2\u7684\u4f59\u5f26\u503c\n    }\n\n    public Vector3f getConeDirection() {\n        return coneDirection;\n    }\n\n    public float getCutOff() {\n        return cutOff;\n    }\n\n    public float getCutOffAngle() {\n        return cutOffAngle;\n    }\n\n    public PointLight getPointLight() {\n        return pointLight;\n    }\n\n    public void setConeDirection(float x, float y, float z) {\n        coneDirection.set(x, y, z);\n    }\n\n    public void setConeDirection(Vector3f coneDirection) {\n        this.coneDirection = coneDirection;\n    }\n\n    public final void setCutOffAngle(float cutOffAngle) {\n        this.cutOffAngle = cutOffAngle;\n        cutOff = (float) Math.cos(Math.toRadians(cutOffAngle)); // \u5c06\u89d2\u5ea6\u8f6c\u6362\u4e3a\u5f27\u5ea6\u5e76\u8ba1\u7b97\u4f59\u5f26\n    }\n\n    public void setPointLight(PointLight pointLight) {\n        this.pointLight = pointLight;\n    }\n}\n</code></pre> <p>\u6240\u6709\u5149\u6e90\u5c06\u5b58\u50a8\u5728 <code>Scene</code> \u7c7b\u4e2d\uff0c\u4e3a\u6b64\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <code>SceneLights</code> \u7684\u65b0\u7c7b\uff0c\u5b83\u5c06\u5b58\u50a8\u6240\u6709\u7c7b\u578b\u5149\u6e90\u7684\u5f15\u7528\uff08\u6ce8\u610f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u73af\u5883\u5149\u5b9e\u4f8b\u548c\u4e00\u4e2a\u65b9\u5411\u5149\u5b9e\u4f8b\uff09\uff1a</p> <pre><code>package org.lwjglb.engine.scene.lights;\n\nimport org.joml.Vector3f;\n\nimport java.util.*;\n\npublic class SceneLights { // \u573a\u666f\u5149\u7167\u96c6\u5408\u7c7b\n\n    private AmbientLight ambientLight;      // \u73af\u5883\u5149\n    private DirLight dirLight;              // \u65b9\u5411\u5149\n    private List&lt;PointLight&gt; pointLights;   // \u70b9\u5149\u6e90\u5217\u8868\n    private List&lt;SpotLight&gt; spotLights;     // \u805a\u5149\u706f\u5217\u8868\n\n    public SceneLights() {\n        ambientLight = new AmbientLight(); // \u9ed8\u8ba4\u73af\u5883\u5149\n        pointLights = new ArrayList&lt;&gt;();\n        spotLights = new ArrayList&lt;&gt;();\n        dirLight = new DirLight(new Vector3f(1, 1, 1), new Vector3f(0, 1, 0), 1.0f); // \u9ed8\u8ba4\u65b9\u5411\u5149\n    }\n\n    public AmbientLight getAmbientLight() {\n        return ambientLight;\n    }\n\n    public DirLight getDirLight() {\n        return dirLight;\n    }\n\n    public List&lt;PointLight&gt; getPointLights() {\n        return pointLights;\n    }\n\n    public List&lt;SpotLight&gt; getSpotLights() {\n        return spotLights;\n    }\n\n    public void setSpotLights(List&lt;SpotLight&gt; spotLights) { // \u539f\u6587\u6b64\u5904\u65b9\u6cd5\u540d\u4e0d\u5b8c\u6574\uff0c\u8865\u5145\u4e3asetSpotLights\n        this.spotLights = spotLights;\n    }\n}\n</code></pre> <p>\u6211\u4eec\u5c06\u5728 <code>Scene</code> \u7c7b\u4e2d\u62e5\u6709\u4e00\u4e2a <code>SceneLights</code> \u7684\u5f15\u7528\uff1a</p> <pre><code>public class Scene {\n    // ...\n    private SceneLights sceneLights; // \u573a\u666f\u5149\u7167\n    // ...\n    public SceneLights getSceneLights() {\n        return sceneLights;\n    }\n    // ...\n    public void setSceneLights(SceneLights sceneLights) {\n        this.sceneLights = sceneLights;\n    }\n}\n</code></pre>"},{"location":"11-light/#_9","title":"\u6a21\u578b\u52a0\u8f7d\u4fee\u6539","text":"<p>\u6211\u4eec\u9700\u8981\u4fee\u6539 <code>ModelLoader</code> \u7c7b\u4ee5\u5b9e\u73b0\uff1a</p> <ul> <li>\u83b7\u53d6\u6750\u8d28\u7684\u66f4\u591a\u5c5e\u6027\uff0c\u7279\u522b\u662f\u73af\u5883\u989c\u8272\u3001\u955c\u9762\u989c\u8272\u548c\u9ad8\u5149\u7cfb\u6570\uff08shininess factor\uff09\u3002</li> <li>\u4e3a\u6bcf\u4e2a\u7f51\u683c\u52a0\u8f7d\u6cd5\u7ebf\u6570\u636e\u3002</li> </ul> <p>\u4e3a\u4e86\u83b7\u53d6\u6750\u8d28\u7684\u66f4\u591a\u5c5e\u6027\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 <code>processMaterial</code> \u65b9\u6cd5\uff1a</p> <pre><code>public class ModelLoader {\n    // ...\n    private static Material processMaterial(AIMaterial aiMaterial, String modelDir, TextureCache textureCache) {\n        Material material = new Material();\n        try (MemoryStack stack = MemoryStack.stackPush()) {\n            AIColor4D color = AIColor4D.create();\n\n            int result = aiGetMaterialColor(aiMaterial, AI_MATKEY_COLOR_AMBIENT, aiTextureType_NONE, 0,\n                    color); // \u83b7\u53d6\u73af\u5883\u5149\u989c\u8272\n            if (result == aiReturn_SUCCESS) {\n                material.setAmbientColor(new Vector4f(color.r(), color.g(), color.b(), color.a()));\n            }\n\n            result = aiGetMaterialColor(aiMaterial, AI_MATKEY_COLOR_DIFFUSE, aiTextureType_NONE, 0,\n                    color); // \u83b7\u53d6\u6f2b\u53cd\u5c04\u989c\u8272\n            if (result == aiReturn_SUCCESS) {\n                material.setDiffuseColor(new Vector4f(color.r(), color.g(), color.b(), color.a()));\n            }\n\n            result = aiGetMaterialColor(aiMaterial, AI_MATKEY_COLOR_SPECULAR, aiTextureType_NONE, 0,\n                    color); // \u83b7\u53d6\u955c\u9762\u5149\u989c\u8272\n            if (result == aiReturn_SUCCESS) {\n                material.setSpecularColor(new Vector4f(color.r(), color.g(), color.b(), color.a()));\n            }\n\n            float reflectance = 0.0f; // \u53cd\u5c04\u7387/\u9ad8\u5149\u5f3a\u5ea6\n            float[] shininessFactor = new float[]{0.0f}; // Assimp\u4e2d\u7684\u9ad8\u5149\u5f3a\u5ea6\n            int[] pMax = new int[]{1}; // \u671f\u671b\u8bfb\u53d6\u7684\u6d6e\u70b9\u6570\u6570\u91cf\n            result = aiGetMaterialFloatArray(aiMaterial, AI_MATKEY_SHININESS_STRENGTH, aiTextureType_NONE, 0, shininessFactor, pMax); // \u83b7\u53d6\u9ad8\u5149\u5f3a\u5ea6\n            if (result == aiReturn_SUCCESS) { // \u539f\u6587\u6b64\u5904\u903b\u8f91\u6709\u8bef\uff0c\u5e94\u4e3a aiReturn_SUCCESS\n                reflectance = shininessFactor[0];\n            }\n            material.setReflectance(reflectance);\n\n            AIString aiTexturePath = AIString.calloc(stack);\n            aiGetMaterialTexture(aiMaterial, aiTextureType_DIFFUSE, 0, aiTexturePath, (IntBuffer) null,\n                    null, null, null, null, null); // \u83b7\u53d6\u6f2b\u53cd\u5c04\u7eb9\u7406\u8def\u5f84\n            String texturePath = aiTexturePath.dataString();\n            if (texturePath != null &amp;&amp; texturePath.length() &gt; 0) {\n                material.setTexturePath(modelDir + File.separator + new File(texturePath).getName());\n                textureCache.createTexture(material.getTexturePath());\n                material.setDiffuseColor(Material.DEFAULT_COLOR); // \u5982\u679c\u6709\u7eb9\u7406\uff0c\u5c06\u6f2b\u53cd\u5c04\u989c\u8272\u8bbe\u4e3a\u9ed8\u8ba4\u503c\uff0c\u4ee5\u7eb9\u7406\u4e3a\u4e3b\n            }\n\n            return material;\n        }\n    }\n    // ...\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u901a\u8fc7\u83b7\u53d6 <code>AI_MATKEY_COLOR_AMBIENT</code> \u5c5e\u6027\u6765\u5f97\u5230\u6750\u8d28\u7684\u73af\u5883\u5149\u989c\u8272\u3002\u955c\u9762\u5149\u989c\u8272\u901a\u8fc7\u4f7f\u7528 <code>AI_MATKEY_COLOR_SPECULAR</code> \u5c5e\u6027\u83b7\u5f97\u3002\u9ad8\u5149\u5ea6\uff08Shininess\uff09\u5219\u901a\u8fc7 <code>AI_MATKEY_SHININESS_STRENGTH</code> \u6807\u5fd7\u67e5\u8be2\u3002</p> <p>\u4e3a\u4e86\u52a0\u8f7d\u6cd5\u7ebf\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <code>processNormals</code> \u7684\u65b0\u65b9\u6cd5\uff0c\u5e76\u5728 <code>processMesh</code> \u65b9\u6cd5\u4e2d\u8c03\u7528\u5b83\u3002</p> <pre><code>public class ModelLoader {\n    // ...\n    private static Mesh processMesh(AIMesh aiMesh) {\n        float[] vertices = processVertices(aiMesh);   // \u5904\u7406\u9876\u70b9\n        float[] normals = processNormals(aiMesh);     // \u5904\u7406\u6cd5\u7ebf\n        float[] textCoords = processTextCoords(aiMesh); // \u5904\u7406\u7eb9\u7406\u5750\u6807\n        int[] indices = processIndices(aiMesh);       // \u5904\u7406\u7d22\u5f15\n\n        // \u7eb9\u7406\u5750\u6807\u53ef\u80fd\u672a\u88ab\u586b\u5145\u3002\u6211\u4eec\u81f3\u5c11\u9700\u8981\u7a7a\u69fd\u4f4d\n        if (textCoords.length == 0) {\n            int numElements = (vertices.length / 3) * 2;\n            textCoords = new float[numElements];\n        }\n\n        return new Mesh(vertices, normals, textCoords, indices); // \u521b\u5efa\u7f51\u683c\uff0c\u5305\u542b\u6cd5\u7ebf\u6570\u636e\n    }\n\n    private static float[] processNormals(AIMesh aiMesh) {\n        AIVector3D.Buffer buffer = aiMesh.mNormals(); // \u83b7\u53d6\u6cd5\u7ebf\u7f13\u51b2\u533a\n        if (buffer == null) { // \u68c0\u67e5\u6cd5\u7ebf\u662f\u5426\u5b58\u5728\n             return new float[]{}; // \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u7a7a\u6570\u7ec4\n        }\n        float[] data = new float[buffer.remaining() * 3];\n        int pos = 0;\n        while (buffer.remaining() &gt; 0) {\n            AIVector3D normal = buffer.get();\n            data[pos++] = normal.x();\n            data[pos++] = normal.y();\n            data[pos++] = normal.z();\n        }\n        return data;\n    }\n    // ...\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539 <code>Material</code> \u548c <code>Mesh</code> \u7c7b\u6765\u5b58\u50a8\u65b0\u7684\u4fe1\u606f\u3002<code>Material</code> \u7c7b\u7684\u66f4\u6539\u5982\u4e0b\uff1a</p> <pre><code>public class Material {\n    // ...\n    private Vector4f ambientColor;  // \u73af\u5883\u5149\u989c\u8272\n    // ...\n    private float reflectance;      // \u53cd\u5c04\u7387\uff08\u9ad8\u5149\u5f3a\u5ea6\uff09\n    private Vector4f specularColor; // \u955c\u9762\u5149\u989c\u8272\n    // ...\n    public Material() {\n        // ...\n        ambientColor = DEFAULT_COLOR; // \u9ed8\u8ba4\u73af\u5883\u5149\u989c\u8272\n        specularColor = DEFAULT_COLOR; // \u9ed8\u8ba4\u955c\u9762\u5149\u989c\u8272\n        // ...\n    }\n    // ...\n    public Vector4f getAmbientColor() {\n        return ambientColor;\n    }\n    // ...\n    public float getReflectance() {\n        return reflectance;\n    }\n\n    public Vector4f getSpecularColor() {\n        return specularColor;\n    }\n    // ...\n    public void setAmbientColor(Vector4f ambientColor) {\n        this.ambientColor = ambientColor;\n    }\n    // ...\n    public void setReflectance(float reflectance) {\n        this.reflectance = reflectance;\n    }\n\n    public void setSpecularColor(Vector4f specularColor) {\n        this.specularColor = specularColor;\n    }\n    // ...\n}\n</code></pre> <p><code>Mesh</code> \u7c7b\u73b0\u5728\u63a5\u53d7\u4e00\u4e2a\u65b0\u7684\u6d6e\u70b9\u6570\u7ec4\u7528\u4e8e\u6cd5\u7ebf\u6570\u636e\uff0c\u5e76\u56e0\u6b64\u4e3a\u5176\u521b\u5efa\u4e00\u4e2a\u65b0\u7684VBO\uff1a</p> <pre><code>public class Mesh {\n    // ...\n    public Mesh(float[] positions, float[] normals, float[] textCoords, int[] indices) {\n        // ... \uff08\u9876\u70b9VBO\u7684\u521b\u5efa\u4ee3\u7801\u5e94\u5728\u6b64\u4e4b\u524d\uff09\n        // \u6cd5\u7ebf VBO\n        int vboId = glGenBuffers(); // \u539f\u6587\u6b64\u5904\u53d8\u91cf\u540dvboId\u4e0e\u9876\u70b9VBO\u7684vboId\u91cd\u590d\uff0c\u5e94\u533a\u5206\u6216\u4f5c\u4e3a\u5217\u8868\u6dfb\u52a0\n        vboIdList.add(vboId);\n        FloatBuffer normalsBuffer = MemoryUtil.memCallocFloat(normals.length);\n        if (normals.length &gt; 0) { // \u4ec5\u5f53\u6cd5\u7ebf\u6570\u636e\u5b58\u5728\u65f6\u586b\u5145\n            normalsBuffer.put(normals).flip(); // \u539f\u6587\u7f3a\u5931flip()\uff0c\u4e14put(0, normals)\u7528\u6cd5\u5b58\u7591\uff0c\u6539\u4e3a\u6807\u51c6\u7528\u6cd5\n        }\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, normalsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(1); // \u5c5e\u6027\u4f4d\u7f6e1\u7528\u4e8e\u6cd5\u7ebf\n        glVertexAttribPointer(1, 3, GL_FLOAT, false, 0, 0);\n        MemoryUtil.memFree(normalsBuffer); // \u91ca\u653eCPU\u7aef\u5185\u5b58\n\n        // \u7eb9\u7406\u5750\u6807 VBO\n        // ... \uff08\u7eb9\u7406\u5750\u6807VBO\u7684\u521b\u5efa\u4ee3\u7801\uff09\n        // \u539f\u6587\u6b64\u5904 glGenBuffers \u7b49\u4ee3\u7801\u7f3a\u5931\uff0c\u4f46\u903b\u8f91\u4e0a\u5e94\u8be5\u6709\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer textCoordsBuffer = MemoryUtil.memCallocFloat(textCoords.length);\n        if (textCoords.length &gt; 0) {\n            textCoordsBuffer.put(textCoords).flip();\n        }\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, textCoordsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(2); // \u5c5e\u6027\u4f4d\u7f6e2\u7528\u4e8e\u7eb9\u7406\u5750\u6807\n        glVertexAttribPointer(2, 2, GL_FLOAT, false, 0, 0);\n        MemoryUtil.memFree(textCoordsBuffer);\n\n        // \u7d22\u5f15 VBO\n        // ... \uff08\u7d22\u5f15VBO\u7684\u521b\u5efa\u4ee3\u7801\uff09\n        // \u539f\u6587\u6b64\u5904\u91ca\u653enormalsBuffer\u7684\u4f4d\u7f6e\u4e0d\u5f53\uff0c\u5e94\u5728glBufferData\u4e4b\u540e\n        // ...\n    }\n    // ...\n}\n</code></pre>"},{"location":"11-light/#_10","title":"\u4f7f\u7528\u5149\u7167\u8fdb\u884c\u6e32\u67d3","text":"<p>\u73b0\u5728\u662f\u65f6\u5019\u5728\u6e32\u67d3\u65f6\u4f7f\u7528\u5149\u7167\u4e86\uff0c\u8ba9\u6211\u4eec\u4ece\u7740\u8272\u5668\u5f00\u59cb\uff0c\u7279\u522b\u662f\u9876\u70b9\u7740\u8272\u5668\uff08<code>scene.vert</code>\uff09\uff1a</p> \u672c\u7ae0\u7684\u9876\u70b9\u7740\u8272\u5668\u5148\u524d\u7684\u9876\u70b9\u7740\u8272\u5668 <pre><code>#version 330\n\nlayout (location=0) in vec3 position;   // \u9876\u70b9\u4f4d\u7f6e\uff0c\u5c5e\u6027\u4f4d\u7f6e0\nlayout (location=1) in vec3 normal;     // \u9876\u70b9\u6cd5\u7ebf\uff0c\u5c5e\u6027\u4f4d\u7f6e1\nlayout (location=2) in vec2 texCoord;   // \u7eb9\u7406\u5750\u6807\uff0c\u5c5e\u6027\u4f4d\u7f6e2\n\nout vec3 outPosition;  // \u8f93\u51fa\u5230\u7247\u6bb5\u7740\u8272\u5668\u7684\u9876\u70b9\u4f4d\u7f6e\uff08\u89c6\u56fe\u7a7a\u95f4\uff09\nout vec3 outNormal;    // \u8f93\u51fa\u5230\u7247\u6bb5\u7740\u8272\u5668\u7684\u6cd5\u7ebf\uff08\u89c6\u56fe\u7a7a\u95f4\uff09\nout vec2 outTextCoord; // \u8f93\u51fa\u5230\u7247\u6bb5\u7740\u8272\u5668\u7684\u7eb9\u7406\u5750\u6807\n\nuniform mat4 projectionMatrix; // \u6295\u5f71\u77e9\u9635\nuniform mat4 viewMatrix;       // \u89c6\u56fe\u77e9\u9635\nuniform mat4 modelMatrix;      // \u6a21\u578b\u77e9\u9635\n\nvoid main()\n{\n    mat4 modelViewMatrix = viewMatrix * modelMatrix; // \u6a21\u578b\u89c6\u56fe\u77e9\u9635\n    vec4 mvPosition =  modelViewMatrix * vec4(position, 1.0); // \u8f6c\u6362\u5230\u89c6\u56fe\u7a7a\u95f4\u7684\u4f4d\u7f6e\n    gl_Position = projectionMatrix * mvPosition; // \u6700\u7ec8\u88c1\u526a\u7a7a\u95f4\u4f4d\u7f6e\n    outPosition = mvPosition.xyz; // \u5c06\u89c6\u56fe\u7a7a\u95f4\u4f4d\u7f6e\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\n    // \u5c06\u6cd5\u7ebf\u8f6c\u6362\u5230\u89c6\u56fe\u7a7a\u95f4\uff0c\u5e76\u8fdb\u884c\u5f52\u4e00\u5316\u3002\u6ce8\u610fw\u5206\u91cf\u4e3a0\uff0c\u4ee5\u907f\u514d\u5e73\u79fb\u5f71\u54cd\n    outNormal = normalize(transpose(inverse(modelViewMatrix)) * vec4(normal, 0.0)).xyz; // \u6b63\u786e\u7684\u6cd5\u7ebf\u53d8\u6362\n    // \u539f\u6587\u7684 outNormal = normalize(modelViewMatrix * vec4(normal, 0.0)).xyz; \u4ec5\u5728modelViewMatrix\u53ea\u5305\u542b\u65cb\u8f6c\u548c\u5747\u5300\u7f29\u653e\u65f6\u6b63\u786e\n    outTextCoord = texCoord; // \u4f20\u9012\u7eb9\u7406\u5750\u6807\n}\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u6cd5\u7ebf\u6570\u636e\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u8f93\u5165\u5c5e\u6027\uff0c\u5e76\u4ec5\u5c06\u8be5\u6570\u636e\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u3002\u5728\u6211\u4eec\u7ee7\u7eed\u8ba8\u8bba\u7247\u6bb5\u7740\u8272\u5668\u4e4b\u524d\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\u5fc5\u987b\u5f3a\u8c03\u3002\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f60\u53ef\u4ee5\u770b\u5230\uff0c<code>mvVertexNormal</code>\uff08\u5e94\u4e3a <code>outNormal</code>\uff09\u8fd9\u4e2a\u5305\u542b\u9876\u70b9\u6cd5\u7ebf\u7684\u53d8\u91cf\uff0c\u88ab\u8f6c\u6362\u5230\u4e86\u6a21\u578b\u89c6\u56fe\u7a7a\u95f4\u5750\u6807\u7cfb\u3002\u8fd9\u662f\u901a\u8fc7\u5c06 <code>normal</code> \u4e58\u4ee5 <code>modelViewMatrix</code>\uff08\u5bf9\u4e8e\u6cd5\u7ebf\uff0c\u901a\u5e38\u662f\u6a21\u578b\u89c6\u56fe\u77e9\u9635\u7684\u9006\u8f6c\u7f6e\u77e9\u9635\uff09\u6765\u5b8c\u6210\u7684\uff0c\u5c31\u50cf\u5904\u7406\u9876\u70b9\u4f4d\u7f6e\u4e00\u6837\u3002\u4f46\u6709\u4e00\u4e2a\u7ec6\u5fae\u7684\u533a\u522b\uff0c\u5728\u4e58\u4ee5\u77e9\u9635\u4e4b\u524d\uff0c\u8be5\u9876\u70b9\u6cd5\u7ebf\u7684w\u5206\u91cf\u88ab\u8bbe\u7f6e\u4e3a0\uff1a<code>vec4(vertexNormal, 0.0)</code>\uff08\u8fd9\u91cc\u6307<code>normal</code>\uff09\u3002\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6cd5\u7ebf\u88ab\u65cb\u8f6c\u548c\u7f29\u653e\uff0c\u4f46\u6211\u4eec\u4e0d\u5e0c\u671b\u5b83\u88ab\u5e73\u79fb\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u5b83\u7684\u65b9\u5411\u800c\u4e0d\u662f\u5b83\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7\u5c06\u5176w\u5206\u91cf\u8bbe\u7f6e\u4e3a0\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u8fd9\u4e5f\u662f\u4f7f\u7528\u9f50\u6b21\u5750\u6807\u7684\u4f18\u70b9\u4e4b\u4e00\uff0c\u901a\u8fc7\u8bbe\u7f6ew\u5206\u91cf\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u5e94\u7528\u54ea\u4e9b\u53d8\u6362\u3002\u4f60\u53ef\u4ee5\u624b\u52a8\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\u8fd0\u7b97\uff0c\u770b\u770b\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u5bf9\u4e8e\u6cd5\u7ebf\u7684\u6b63\u786e\u53d8\u6362\uff0c\u5e94\u4f7f\u7528\u6a21\u578b\u89c6\u56fe\u77e9\u9635\u7684\u9006\u8f6c\u7f6e\u77e9\u9635\uff0c<code>transpose(inverse(modelViewMatrix))</code>\uff0c\u4ee5\u5904\u7406\u975e\u5747\u5300\u7f29\u653e\u3002\u5982\u679c\u6a21\u578b\u89c6\u56fe\u77e9\u9635\u53ea\u5305\u542b\u65cb\u8f6c\u548c\u5747\u5300\u7f29\u653e\uff0c\u5219\u76f4\u63a5\u4e58\u4ee5\u6a21\u578b\u89c6\u56fe\u77e9\u9635\uff08\u6216\u5176\u5de6\u4e0a3x3\u90e8\u5206\uff09\u5728\u65b9\u5411\u4e0a\u662f\u53ef\u884c\u7684\uff0c\u4f46\u4ecd\u9700\u5f52\u4e00\u5316\u3002\uff09</p> <p><code>scene.frag</code> \u7247\u6bb5\u7740\u8272\u5668\u7684\u66f4\u6539\u66f4\u4e3a\u590d\u6742\uff0c\u8ba9\u6211\u4eec\u4e00\u6b65\u6b65\u6765\uff1a</p> <pre><code>#version 330\n\nconst int MAX_POINT_LIGHTS = 5; // \u652f\u6301\u7684\u6700\u5927\u70b9\u5149\u6e90\u6570\u91cf\nconst int MAX_SPOT_LIGHTS = 5;  // \u652f\u6301\u7684\u6700\u5927\u805a\u5149\u706f\u6570\u91cf\nconst float SPECULAR_POWER = 10.0; // \u955c\u9762\u9ad8\u5149\u6307\u6570 (\u539f\u6587\u4e3a10\uff0c\u901a\u5e38\u4e3a\u6d6e\u70b9\u6570)\n\nin vec3 outPosition;  // \u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u5165\u7684\u89c6\u56fe\u7a7a\u95f4\u4f4d\u7f6e\nin vec3 outNormal;    // \u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u5165\u7684\u89c6\u56fe\u7a7a\u95f4\u6cd5\u7ebf (\u5df2\u5f52\u4e00\u5316)\nin vec2 outTextCoord; // \u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u5165\u7684\u7eb9\u7406\u5750\u6807\n\nout vec4 fragColor; // \u8f93\u51fa\u7684\u7247\u6bb5\u989c\u8272\n// ...\n</code></pre> <p>\u9996\u5148\uff0c\u6211\u4eec\u4e3a\u652f\u6301\u7684\u70b9\u5149\u6e90\u548c\u805a\u5149\u706f\u7684\u6700\u5927\u6570\u91cf\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5e38\u91cf\u3002\u6211\u4eec\u9700\u8981\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5149\u6e90\u7684\u6570\u636e\u5c06\u4f5c\u4e3auniform\u6570\u7ec4\u4f20\u9012\uff0c\u800c\u6570\u7ec4\u5728\u7f16\u8bd1\u65f6\u9700\u8981\u6709\u786e\u5b9a\u7684\u5927\u5c0f\u3002\u4f60\u4e5f\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4ece\u9876\u70b9\u7740\u8272\u5668\u63a5\u6536\u6cd5\u7ebf\u6570\u636e\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u5c06\u7528\u4e8e\u5149\u7167\u6570\u636e\u5efa\u6a21\u7684\u7ed3\u6784\u4f53\uff1a</p> <pre><code>// ...\nstruct Attenuation // \u8870\u51cf\u7ed3\u6784\u4f53\n{\n    float constant; // \u5e38\u6570\u9879\n    float linear;   // \u7ebf\u6027\u9879\n    float exponent; // \u6307\u6570\u9879\n};\nstruct Material // \u6750\u8d28\u7ed3\u6784\u4f53\n{\n    vec4 ambient;     // \u73af\u5883\u5149\u989c\u8272\n    vec4 diffuse;     // \u6f2b\u53cd\u5c04\u989c\u8272\n    vec4 specular;    // \u955c\u9762\u5149\u989c\u8272\n    float reflectance; // \u53cd\u5c04\u7387/\u9ad8\u5149\u5f3a\u5ea6\n};\nstruct AmbientLight // \u73af\u5883\u5149\u7ed3\u6784\u4f53\n{\n    float intensity; // \u5f3a\u5ea6 (\u539f\u6587\u4e3a factor\uff0c\u8fd9\u91cc\u6539\u4e3aintensity\u66f4\u4e00\u81f4)\n    vec3 color;     // \u989c\u8272\n};\nstruct PointLight { // \u70b9\u5149\u6e90\u7ed3\u6784\u4f53\n    vec3 position;  // \u4f4d\u7f6e (\u89c6\u56fe\u7a7a\u95f4)\n    vec3 color;     // \u989c\u8272\n    float intensity; // \u5f3a\u5ea6\n    Attenuation att; // \u8870\u51cf\u53c2\u6570\n};\nstruct SpotLight // \u805a\u5149\u706f\u7ed3\u6784\u4f53\n{\n    PointLight pl;   // \u5185\u542b\u7684\u70b9\u5149\u6e90\n    vec3 conedir;    // \u9525\u4f53\u65b9\u5411 (\u89c6\u56fe\u7a7a\u95f4\uff0c\u5df2\u5f52\u4e00\u5316)\n    float cutoff;    // \u622a\u6b62\u89d2\u7684\u4f59\u5f26\u503c\n};\nstruct DirLight // \u65b9\u5411\u5149\u7ed3\u6784\u4f53\n{\n    vec3 color;     // \u989c\u8272\n    vec3 direction; // \u65b9\u5411 (\u89c6\u56fe\u7a7a\u95f4\uff0c\u5df2\u5f52\u4e00\u5316)\n    float intensity; // \u5f3a\u5ea6\n};\n// ...\n</code></pre> <p>\u4e4b\u540e\uff0c\u6211\u4eec\u4e3a\u5149\u7167\u6570\u636e\u5b9a\u4e49\u65b0\u7684uniform\u53d8\u91cf\uff1a</p> <pre><code>// ...\nuniform sampler2D txtSampler; // \u7eb9\u7406\u91c7\u6837\u5668\nuniform Material material;    // \u6750\u8d28\nuniform AmbientLight ambientLight; // \u73af\u5883\u5149\nuniform PointLight pointLights[MAX_POINT_LIGHTS]; // \u70b9\u5149\u6e90\u6570\u7ec4\nuniform SpotLight spotLights[MAX_SPOT_LIGHTS];   // \u805a\u5149\u706f\u6570\u7ec4\nuniform DirLight dirLight;    // \u65b9\u5411\u5149 (\u539f\u6587\u7f3a\u5931\u5206\u53f7\uff0c\u8865\u4e0a)\nuniform vec3 cameraPosition; // \u76f8\u673a\u4f4d\u7f6e (\u89c6\u56fe\u7a7a\u95f4\uff0c\u901a\u5e38\u4e3a(0,0,0))\n// ...\n</code></pre> <p>\u6211\u4eec\u73b0\u5728\u5c06\u5b9a\u4e49\u4e00\u4e9b\u51fd\u6570\u6765\u8ba1\u7b97\u6bcf\u79cd\u5149\u6e90\u7c7b\u578b\u7684\u6548\u679c\uff0c\u4ece\u73af\u5883\u5149\u5f00\u59cb\uff1a</p> <pre><code>// ...\n// \u8ba1\u7b97\u73af\u5883\u5149\u989c\u8272\u8d21\u732e\nvec4 calcAmbient(AmbientLight light, vec4 materialAmbientColor) { // \u53c2\u6570\u540d\u4fee\u6539\u4ee5\u66f4\u6e05\u6670\n    return vec4(light.intensity * light.color, 1.0) * materialAmbientColor;\n}\n// ...\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u662f\u5c06\u73af\u5883\u5149\u7684\u989c\u8272\u4e58\u4ee5\u4e00\u4e2a\u5f3a\u5ea6\u56e0\u5b50\uff0c\u7136\u540e\u5e94\u7528\u4e8e\u6750\u8d28\u7684\u73af\u5883\u5149\u989c\u8272\u3002\u73b0\u5728\u6211\u4eec\u5c06\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u5c06\u89c4\u5b9a\u6240\u6709\u7c7b\u578b\u5149\u6e90\u7684\u5149\u7167\u989c\u8272\u662f\u5982\u4f55\u8ba1\u7b97\u7684\uff08\u4e3b\u8981\u9488\u5bf9\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\uff09\uff1a</p> <pre><code>// ...\n// \u8ba1\u7b97\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u989c\u8272\u8d21\u732e\nvec4 calcLightColor(vec4 materialDiffuse, vec4 materialSpecular, vec3 lightColor, float light_intensity, vec3 position_vs, vec3 to_light_dir_vs, vec3 normal_vs, vec3 camera_pos_vs) {\n    // position_vs: \u7247\u6bb5\u7684\u89c6\u56fe\u7a7a\u95f4\u4f4d\u7f6e\n    // to_light_dir_vs: \u4ece\u7247\u6bb5\u6307\u5411\u5149\u6e90\u7684\u89c6\u56fe\u7a7a\u95f4\u65b9\u5411 (\u5df2\u5f52\u4e00\u5316)\n    // normal_vs: \u7247\u6bb5\u7684\u89c6\u56fe\u7a7a\u95f4\u6cd5\u7ebf (\u5df2\u5f52\u4e00\u5316)\n    // camera_pos_vs: \u76f8\u673a\u5728\u89c6\u56fe\u7a7a\u95f4\u7684\u4f4d\u7f6e\n\n    vec4 diffuseColor = vec4(0, 0, 0, 0); // \u521d\u59cb\u5316\u6f2b\u53cd\u5c04\u989c\u8272 (alpha\u5e94\u4e3a0)\n    vec4 specColor = vec4(0, 0, 0, 0);    // \u521d\u59cb\u5316\u955c\u9762\u53cd\u5c04\u989c\u8272 (alpha\u5e94\u4e3a0)\n\n    // \u6f2b\u53cd\u5c04\u5149\n    // \u6cd5\u7ebf\u548c\u5149\u7167\u65b9\u5411\u7684\u70b9\u79ef\uff0c\u786e\u4fdd\u7ed3\u679c\u4e0d\u4e3a\u8d1f\n    float diffuseFactor = max(dot(normal_vs, to_light_dir_vs), 0.0);\n    diffuseColor = materialDiffuse * vec4(lightColor, 1.0) * light_intensity * diffuseFactor;\n\n    // \u955c\u9762\u53cd\u5c04\u5149\n    // \u8ba1\u7b97\u4ece\u7247\u6bb5\u6307\u5411\u76f8\u673a\u7684\u65b9\u5411 (\u89c6\u56fe\u7a7a\u95f4)\n    vec3 viewDir = normalize(camera_pos_vs - position_vs); // \u539f\u6587: vec3 camera_direction = normalize(-position); \u5047\u8bbe\u76f8\u673a\u5728(0,0,0)\n    // \u8ba1\u7b97\u4ece\u5149\u6e90\u6307\u5411\u7247\u6bb5\u7684\u65b9\u5411\n    vec3 from_light_dir_vs = -to_light_dir_vs;\n    // \u8ba1\u7b97\u53cd\u5c04\u5149\u7ebf\u65b9\u5411\n    vec3 reflected_light_vs = normalize(reflect(from_light_dir_vs, normal_vs));\n    // \u53cd\u5c04\u5149\u7ebf\u548c\u89c6\u7ebf\u65b9\u5411\u7684\u70b9\u79ef\n    float specularFactor = max(dot(viewDir, reflected_light_vs), 0.0);\n    // \u5e94\u7528\u9ad8\u5149\u6307\u6570\n    specularFactor = pow(specularFactor, material.reflectance &gt; 0.0 ? SPECULAR_POWER : 0.0); // \u539f\u6587: pow(specularFactor, SPECULAR_POWER); \u53ef\u6839\u636e\u6750\u8d28\u53cd\u5c04\u7387\u8c03\u6574\n                                                                                         // \u5b9e\u9645\u4e0aSPECULAR_POWER\u5e94\u4e0e\u6750\u8d28\u7684shininess/reflectance\u5173\u8054\uff0c\u6216\u8005material.reflectance\u672c\u8eab\u5c31\u662f\u9ad8\u5149\u6307\u6570\n                                                                                         // \u6b64\u5904\u5047\u8bbeSPECULAR_POWER\u662f\u5168\u5c40\u7684\uff0cmaterial.reflectance\u662f\u955c\u9762\u53cd\u5c04\u5f3a\u5ea6\u7cfb\u6570\n\n    // specColor = materialSpecular * vec4(lightColor, 1.0) * light_intensity * specularFactor * material.reflectance;\n    // \u539f\u6587\u7684 material.reflectance \u662f\u9ad8\u5149\u7cfb\u6570\uff0c\u800cBlinn-Phong\u4e2d\u9ad8\u5149\u989c\u8272\u3001\u5f3a\u5ea6\u3001\u56e0\u5b50\u548c\u6750\u8d28\u9ad8\u5149\u7cfb\u6570\u76f8\u4e58\n    // \u51af\u6c0f\u6a21\u578b\u4e2d\uff0cmaterial.reflectance\u66f4\u50cf\u662f\u63a7\u5236\u955c\u9762\u53cd\u5c04\u5f3a\u5ea6\u7684\u7cfb\u6570\uff0c\u800cSPECULAR_POWER\u662f\u9ad8\u5149\u9510\u5229\u5ea6\n    // \u6b64\u5904\u6309\u539f\u6587\u7ed3\u6784\uff0c\u4f46\u6ce8\u610f\u533a\u5206material.reflectance\u7684\u542b\u4e49\uff0c\u5b83\u53ef\u80fd\u662f\u9ad8\u5149\u7cfb\u6570\uff0c\u4e5f\u53ef\u80fd\u662f\u955c\u9762\u53cd\u5c04\u7684\u5f3a\u5ea6\n    specColor = materialSpecular * vec4(lightColor, 1.0) * light_intensity * specularFactor;\n    if (material.reflectance &lt;= 0.0) { // \u5982\u679c\u6750\u8d28\u6ca1\u6709\u955c\u9762\u53cd\u5c04\u80fd\u529b\n        specColor = vec4(0.0);\n    }\n\n\n    return (diffuseColor + specColor);\n}\n// ...\n</code></pre> <p>\u524d\u9762\u7684\u4ee3\u7801\u76f8\u5bf9\u76f4\u63a5\uff0c\u5b83\u53ea\u662f\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\uff0c\u4ee5\u53ca\u955c\u9762\u53cd\u5c04\u5206\u91cf\u7684\u989c\u8272\uff0c\u5e76\u901a\u8fc7\u5149\u7ebf\u4f20\u64ad\u5230\u6211\u4eec\u6b63\u5728\u5904\u7406\u7684\u9876\u70b9\u65f6\u6240\u906d\u53d7\u7684\u8870\u51cf\u6765\u8c03\u5236\u5b83\u4eec\uff08\u8870\u51cf\u5728\u8c03\u7528\u51fd\u6570\u5916\u90e8\u5904\u7406\uff09\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5c06\u4e3a\u6bcf\u79cd\u5149\u6e90\u7c7b\u578b\u8c03\u7528\u7684\u51fd\u6570\uff0c\u6211\u4eec\u5c06\u4ece\u70b9\u5149\u6e90\u5f00\u59cb\uff1a</p> <pre><code>// ...\n// \u8ba1\u7b97\u70b9\u5149\u6e90\u7684\u989c\u8272\u8d21\u732e\nvec4 calcPointLight(Material mat, PointLight light, vec3 position_vs, vec3 normal_vs, vec3 camera_pos_vs) { // \u589e\u52a0Material\u53c2\u6570\n    vec3 light_direction_vs = light.position - position_vs; // \u4ece\u7247\u6bb5\u5230\u5149\u6e90\u7684\u5411\u91cf\n    vec3 to_light_dir_vs  = normalize(light_direction_vs); // \u5f52\u4e00\u5316\n    vec4 light_color_contrib = calcLightColor(mat.diffuse, mat.specular, light.color, light.intensity, position_vs, to_light_dir_vs, normal_vs, camera_pos_vs);\n\n    // \u5e94\u7528\u8870\u51cf\n    float distance = length(light_direction_vs);\n    float attenuation = 1.0 / (light.att.constant + light.att.linear * distance +\n                        light.att.exponent * distance * distance);\n    return light_color_contrib * attenuation; // \u539f\u6587\u662f light_color / attenuationInv\uff0c\u7b49\u6548\n}\n// ...\n</code></pre> <p>\u5982\u4f60\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u662f\u8ba1\u7b97\u4e86\u5230\u5149\u6e90\u7684\u65b9\u5411\uff08\u4f5c\u4e3a\u6cd5\u7ebf\u2014\u2014\u6b64\u5904\u539f\u6587\u63cf\u8ff0\u4e0d\u51c6\u786e\uff0c\u5e94\u4e3a\u201c\u65b9\u5411\u5411\u91cf\u201d\uff09\uff0c\u5e76\u4f7f\u7528\u8be5\u4fe1\u606f\u6765\u8ba1\u7b97\u5149\u7167\u989c\u8272\uff0c\u4f7f\u7528\u4e86\u6750\u8d28\u7684\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u989c\u8272\u3001\u5149\u7684\u989c\u8272\u3001\u5149\u7684\u5f3a\u5ea6\u3001\u7247\u6bb5\u4f4d\u7f6e\u3001\u5149\u7684\u65b9\u5411\u4ee5\u53ca\u6cd5\u7ebf\u65b9\u5411\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u5e94\u7528\u8870\u51cf\u3002\u805a\u5149\u706f\u7684\u51fd\u6570\u5982\u4e0b\uff1a</p> <pre><code>// ...\n// \u8ba1\u7b97\u805a\u5149\u706f\u7684\u989c\u8272\u8d21\u732e\nvec4 calcSpotLight(Material mat, SpotLight light, vec3 position_vs, vec3 normal_vs, vec3 camera_pos_vs) { // \u589e\u52a0Material\u53c2\u6570\n    vec3 light_direction_vs = light.pl.position - position_vs; // \u4ece\u7247\u6bb5\u5230\u5149\u6e90\u7684\u5411\u91cf\n    vec3 to_light_dir_vs  = normalize(light_direction_vs);    // \u5f52\u4e00\u5316\n    vec3 from_light_dir_vs  = -to_light_dir_vs;               // \u4ece\u5149\u6e90\u5230\u7247\u6bb5\u7684\u65b9\u5411\n    // \u8ba1\u7b97\u7247\u6bb5\u5728\u5149\u9525\u5185\u7684\u56e0\u5b50\n    float spot_factor = dot(from_light_dir_vs, normalize(light.conedir)); // \u539f\u6587\u662f spot_alfa\n\n    vec4 color = vec4(0, 0, 0, 0);\n\n    if (spot_factor &gt; light.cutoff) // \u5982\u679c\u5728\u5149\u9525\u5185\n    {\n        // \u8ba1\u7b97\u70b9\u5149\u6e90\u6548\u679c\n        color = calcPointLight(mat, light.pl, position_vs, normal_vs, camera_pos_vs);\n        // \u5e94\u7528\u805a\u5149\u706f\u7684\u8fb9\u7f18\u8870\u51cf\u6548\u679c\n        // \u539f\u6587\u516c\u5f0f: color *= (1.0 - (1.0 - spot_alfa)/(1.0 - light.cutoff));\n        // \u8fd9\u4e2a\u516c\u5f0f\u4f7f\u5f97\u4e2d\u5fc3\u6700\u4eae(spot_alfa=1)\uff0c\u8fb9\u7f18(spot_alfa=light.cutoff)\u4e3a0\n        // \u66f4\u5e38\u89c1\u7684\u5e73\u6ed1\u8fc7\u6e21\u662f pow(spot_factor, spotlight_exponent) \u6216 smoothstep\n        // \u8fd9\u91cc\u9075\u5faa\u539f\u6587\u516c\u5f0f\uff0c\u4f46\u6ce8\u610f spot_alfa \u548c light.cutoff \u90fd\u662f\u4f59\u5f26\u503c\n        // (1.0 - spot_alfa) \u662f\u89d2\u5ea6\u5dee\u76f8\u5173\u7684\u91cf\uff0c(1.0 - light.cutoff) \u4e5f\u662f\n        // \u5f53 spot_alfa \u63a5\u8fd1 1 (cos(0)), \u56e0\u5b50\u63a5\u8fd1 1\n        // \u5f53 spot_alfa \u63a5\u8fd1 light.cutoff, \u56e0\u5b50\u63a5\u8fd1 0\n        float spot_attenuation = (spot_factor - light.cutoff) / (1.0 - light.cutoff); // \u7b80\u5316\u7684\u7ebf\u6027\u8870\u51cf\uff0c\u4ece0\u52301\n                                                                                        // \u6216\u4f7f\u7528\u539f\u6587\u7684 (1.0 - (1.0 - spot_factor)/(1.0 - light.cutoff))\n        spot_attenuation = clamp(spot_attenuation, 0.0, 1.0);\n        color *= spot_attenuation; // \u4f7f\u7528\u7b80\u5316\u7248\u672c\uff0c\u6216\u539f\u6587\u7248\u672c\n    }\n    return color;\n}\n// ...\n</code></pre> <p>\u8be5\u8fc7\u7a0b\u4e0e\u70b9\u5149\u6e90\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6211\u4eec\u9700\u8981\u63a7\u5236\u7247\u6bb5\u662f\u5426\u5728\u5149\u9525\u5185\u90e8\u3002\u5728\u5149\u9525\u5185\u90e8\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5982\u524d\u6240\u8ff0\u5e94\u7528\u4e00\u4e9b\u8870\u51cf\u3002\u6700\u540e\uff0c\u65b9\u5411\u5149\u7684\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>// ...\n// \u8ba1\u7b97\u65b9\u5411\u5149\u7684\u989c\u8272\u8d21\u732e\nvec4 calcDirLight(Material mat, DirLight light, vec3 position_vs, vec3 normal_vs, vec3 camera_pos_vs) { // \u589e\u52a0Material\u53c2\u6570\n    // \u5bf9\u4e8e\u65b9\u5411\u5149\uff0cto_light_dir \u5c31\u662f\u5149\u6e90\u65b9\u5411\u7684\u53cd\u65b9\u5411\n    return calcLightColor(mat.diffuse, mat.specular, light.color, light.intensity, position_vs, normalize(light.direction), normal_vs, camera_pos_vs);\n}\n// ...\n</code></pre> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u6307\u5411\u5149\u6e90\u7684\u65b9\u5411\uff08<code>light.direction</code>\u901a\u5e38\u5b9a\u4e49\u4e3a\u5149\u7ebf\u4f20\u64ad\u7684\u65b9\u5411\uff0c\u6240\u4ee5<code>to_light_dir</code>\u662f<code>normalize(light.direction)</code>\uff0c\u5982\u679c<code>light.direction</code>\u662f\u4ece\u7269\u4f53\u6307\u5411\u5149\u6e90\uff0c\u5219\u9700\u8981\u53d6\u53cd\uff09\uff0c\u5e76\u4e14\u7531\u4e8e\u6ca1\u6709\u8870\u51cf\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u8003\u8651\u5149\u6e90\u4f4d\u7f6e\u3002\u6700\u540e\uff0c\u5728<code>main</code>\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u904d\u5386\u4e0d\u540c\u7c7b\u578b\u7684\u5149\u6e90\uff0c\u5b83\u4eec\u5c06\u8d21\u732e\u4e8e\u6700\u7ec8\u7247\u6bb5\u989c\u8272\u7684\u6f2b\u53cd\u5c04-\u955c\u9762\u53cd\u5c04\u5206\u91cf\uff1a</p> <pre><code>// ...\nvoid main() {\n    vec4 tex_color = texture(txtSampler, outTextCoord); // \u4ece\u7eb9\u7406\u91c7\u6837\u989c\u8272\n\n    // \u83b7\u53d6\u6750\u8d28\u5c5e\u6027\n    vec4 matAmbient = material.ambient;\n    vec4 matDiffuse = material.diffuse;\n    vec4 matSpecular = material.specular;\n\n    // \u5982\u679c\u6709\u7eb9\u7406\uff0c\u901a\u5e38\u7eb9\u7406\u989c\u8272\u4f1a\u8c03\u5236\u6216\u66ff\u6362\u6f2b\u53cd\u5c04\u989c\u8272\n    // \u539f\u6587\u5904\u7406\u65b9\u5f0f: diffuse = text_color + material.diffuse\uff0c specular = text_color + material.specular\n    // \u8fd9\u610f\u5473\u7740\u7eb9\u7406\u989c\u8272\u548c\u6750\u8d28\u989c\u8272\u76f8\u52a0\uff0c\u53ef\u80fd\u5bfc\u81f4\u989c\u8272\u8fc7\u9971\u548c\u3002\n    // \u901a\u5e38\u505a\u6cd5\u662f: diffuse = tex_color * material.diffuse (\u5982\u679cmaterial.diffuse\u662f\u767d\u8272\uff0c\u5219tex_color\u4e3b\u5bfc)\n    // \u6216\u8005: if (hasTexture) diffuse = tex_color; else diffuse = material.diffuse;\n    // \u6b64\u5904\u6309\u539f\u6587\u903b\u8f91\uff0c\u4f46\u9700\u6ce8\u610f\u5176\u6548\u679c\n\n    if (tex_color.a &gt; 0.0) { // \u5982\u679c\u7eb9\u7406\u6709\u6548 (\u5047\u8bbe\u900f\u660e\u5ea6\u4e3a0\u8868\u793a\u65e0\u7eb9\u7406\u6216\u5168\u900f\u660e)\n        // \u6839\u636e\u5b9e\u9645\u9700\u6c42\uff0c\u7eb9\u7406\u53ef\u4ee5\u5f71\u54cd\u73af\u5883\u5149\u3001\u6f2b\u53cd\u5c04\u3001\u955c\u9762\u53cd\u5c04\n        // \u539f\u6587\u5c06\u5176\u7b80\u5355\u4e0e\u6750\u8d28\u989c\u8272\u76f8\u52a0\uff0c\u8fd9\u91cc\u6539\u4e3a\u66f4\u5e38\u89c1\u7684\u8c03\u5236\u65b9\u5f0f\u6216\u66ff\u6362\n        matAmbient = tex_color * material.ambient; // \u7eb9\u7406\u8c03\u5236\u73af\u5883\u8272 (\u6216\u8005\u4ec5\u7528\u4e8e\u6f2b\u53cd\u5c04)\n        matDiffuse = tex_color * material.diffuse; // \u7eb9\u7406\u8c03\u5236\u6f2b\u53cd\u5c04\u8272\n        // \u955c\u9762\u53cd\u5c04\u901a\u5e38\u4e0d\u53d7\u6f2b\u53cd\u5c04\u7eb9\u7406\u5f71\u54cd\uff0c\u9664\u975e\u6709\u4e13\u95e8\u7684\u955c\u9762\u8d34\u56fe\n        // matSpecular = tex_color * material.specular; // \u539f\u6587\u4e5f\u52a0\u4e86\uff0c\u53ef\u80fd\u9700\u8981\u8c03\u6574\n    }\n\n\n    // \u8ba1\u7b97\u73af\u5883\u5149\u8d21\u732e\n    vec4 ambient = calcAmbient(ambientLight, matAmbient); // \u4f7f\u7528\u6750\u8d28\u73af\u5883\u8272\n\n    // \u521d\u59cb\u5316\u6f2b\u53cd\u5c04\u548c\u955c\u9762\u53cd\u5c04\u7d2f\u52a0\u5668\n    vec4 diffuseSpecularComp = vec4(0.0);\n\n    // \u8ba1\u7b97\u65b9\u5411\u5149\u8d21\u732e\n    diffuseSpecularComp += calcDirLight(material, dirLight, outPosition, normalize(outNormal), vec3(0.0) /*cameraPosition*/); // \u89c6\u56fe\u7a7a\u95f4\u76f8\u673a\u4f4d\u7f6e(0,0,0)\n\n    // \u8ba1\u7b97\u6240\u6709\u70b9\u5149\u6e90\u7684\u8d21\u732e\n    for (int i=0; i&lt;MAX_POINT_LIGHTS; i++) {\n        if (pointLights[i].intensity &gt; 0.0) { // \u53ea\u5904\u7406\u6709\u5f3a\u5ea6\u7684\u5149\u6e90\n            diffuseSpecularComp += calcPointLight(material, pointLights[i], outPosition, normalize(outNormal), vec3(0.0));\n        }\n    }\n\n    // \u8ba1\u7b97\u6240\u6709\u805a\u5149\u706f\u7684\u8d21\u732e\n    for (int i=0; i&lt;MAX_SPOT_LIGHTS; i++) {\n        if (spotLights[i].pl.intensity &gt; 0.0) { // \u53ea\u5904\u7406\u6709\u5f3a\u5ea6\u7684\u5149\u6e90\n            diffuseSpecularComp += calcSpotLight(material, spotLights[i], outPosition, normalize(outNormal), vec3(0.0));\n        }\n    }\n    fragColor = ambient + diffuseSpecularComp; // \u6700\u7ec8\u989c\u8272 = \u73af\u5883\u5149 + (\u6f2b\u53cd\u5c04 + \u955c\u9762\u53cd\u5c04)\n    fragColor.a = matDiffuse.a; // \u4fdd\u6301\u539f\u59cbAlpha\u503c (\u5982\u679c\u7eb9\u7406\u6709Alpha)\n}\n</code></pre> <p>\u73b0\u5728\u8f6e\u5230\u7814\u7a76\u6211\u4eec\u5c06\u5982\u4f55\u4fee\u6539 <code>SceneRender</code> \u7c7b\u4ee5\u5728\u6e32\u67d3\u8fc7\u7a0b\u4e2d\u5305\u542b\u5149\u7167\u3002\u7b2c\u4e00\u6b65\u662f\u521b\u5efa\u65b0\u7684uniform\u53d8\u91cf\uff1a</p> <pre><code>public class SceneRender {\n\n    private static final int MAX_POINT_LIGHTS = 5;\n    private static final int MAX_SPOT_LIGHTS = 5;\n    // ...\n    private void createUniforms(ShaderProgram shaderProgram) { // \u4f20\u5165 shaderProgram\n        // ... (\u5176\u4ed6uniforms)\n        uniformsMap.createUniform(\"material.ambient\");\n        uniformsMap.createUniform(\"material.diffuse\");\n        uniformsMap.createUniform(\"material.specular\");\n        uniformsMap.createUniform(\"material.reflectance\");\n\n        uniformsMap.createUniform(\"ambientLight.intensity\"); // \u539f\u6587\u662f factor\uff0c\u6539\u4e3a intensity\n        uniformsMap.createUniform(\"ambientLight.color\");\n\n        // uniformsMap.createUniform(\"cameraPosition\"); // \u6dfb\u52a0\u76f8\u673a\u4f4d\u7f6e uniform\n\n        for (int i = 0; i &lt; MAX_POINT_LIGHTS; i++) {\n            String name = \"pointLights[\" + i + \"]\";\n            uniformsMap.createUniform(name + \".position\");\n            uniformsMap.createUniform(name + \".color\");\n            uniformsMap.createUniform(name + \".intensity\");\n            uniformsMap.createUniform(name + \".att.constant\");\n            uniformsMap.createUniform(name + \".att.linear\");\n            uniformsMap.createUniform(name + \".att.exponent\");\n        }\n        for (int i = 0; i &lt; MAX_SPOT_LIGHTS; i++) {\n            String name = \"spotLights[\" + i + \"]\";\n            uniformsMap.createUniform(name + \".pl.position\");\n            uniformsMap.createUniform(name + \".pl.color\");\n            uniformsMap.createUniform(name + \".pl.intensity\");\n            uniformsMap.createUniform(name + \".pl.att.constant\");\n            uniformsMap.createUniform(name + \".pl.att.linear\");\n            uniformsMap.createUniform(name + \".pl.att.exponent\");\n            uniformsMap.createUniform(name + \".conedir\");\n            uniformsMap.createUniform(name + \".cutoff\");\n        }\n\n        uniformsMap.createUniform(\"dirLight.color\");\n        uniformsMap.createUniform(\"dirLight.direction\");\n        uniformsMap.createUniform(\"dirLight.intensity\");\n    }\n    // ...\n}\n</code></pre> <p>\u5f53\u6211\u4eec\u4f7f\u7528\u6570\u7ec4\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5217\u8868\u7684\u6bcf\u4e2a\u5143\u7d20\u521b\u5efa\u4e00\u4e2auniform\u3002\u56e0\u6b64\uff0c\u4f8b\u5982\uff0c\u5bf9\u4e8e <code>pointLights</code> \u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <code>pointLights[0]</code>\u3001<code>pointLights[1]</code> \u7b49\u7684uniform\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u540c\u6837\u9002\u7528\u4e8e\u7ed3\u6784\u4f53\u5c5e\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u6709 <code>pointLights[0].color</code>\u3001<code>pointLights[1].color</code> \u7b49\u3002</p> <p>\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u65b9\u6cd5\uff0c\u5728\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u65f6\u66f4\u65b0\u5149\u7167\u7684uniform\uff0c\u8be5\u65b9\u6cd5\u540d\u4e3a <code>updateLights</code>\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class SceneRender {\n    // ...\n    private void updateLights(Scene scene, ShaderProgram shaderProgram) { // \u4f20\u5165 shaderProgram\n        Matrix4f viewMatrix = scene.getCamera().getViewMatrix();\n\n        // uniformsMap.setUniform(\"cameraPosition\", scene.getCamera().getPosition()); // \u8bbe\u7f6e\u76f8\u673a\u4e16\u754c\u5750\u6807\uff0cshader\u4e2d\u8f6c\u89c6\u56fe\u5750\u6807\n                                                                                   // \u6216\u76f4\u63a5\u4f20 (0,0,0) \u5982\u679c\u6240\u6709\u8ba1\u7b97\u90fd\u5728\u89c6\u56fe\u7a7a\u95f4\n\n        SceneLights sceneLights = scene.getSceneLights();\n        AmbientLight ambientLight = sceneLights.getAmbientLight();\n        uniformsMap.setUniform(\"ambientLight.intensity\", ambientLight.getIntensity()); // \u539f\u6587\u662f factor\n        uniformsMap.setUniform(\"ambientLight.color\", ambientLight.getColor());\n\n        DirLight dirLight = sceneLights.getDirLight();\n        // \u65b9\u5411\u5149\u7684\u65b9\u5411\u9700\u8981\u8f6c\u6362\u5230\u89c6\u56fe\u7a7a\u95f4\n        Vector4f auxDir = new Vector4f(dirLight.getDirection(), 0); // w=0 \u8868\u793a\u65b9\u5411\u5411\u91cf\n        auxDir.mul(viewMatrix); // \u4e58\u4ee5\u89c6\u56fe\u77e9\u9635\n        Vector3f dir = new Vector3f(auxDir.x, auxDir.y, auxDir.z).normalize(); // \u5f52\u4e00\u5316\n        uniformsMap.setUniform(\"dirLight.color\", dirLight.getColor());\n        uniformsMap.setUniform(\"dirLight.direction\", dir);\n        uniformsMap.setUniform(\"dirLight.intensity\", dirLight.getIntensity());\n\n        List&lt;PointLight&gt; pointLights = sceneLights.getPointLights();\n        int numPointLights = pointLights.size();\n        for (int i = 0; i &lt; MAX_POINT_LIGHTS; i++) {\n            PointLight pointLight = (i &lt; numPointLights) ? pointLights.get(i) : null;\n            String name = \"pointLights[\" + i + \"]\";\n            updatePointLight(pointLight, name, viewMatrix, shaderProgram); // \u4f20\u5165 shaderProgram\n        }\n\n\n        List&lt;SpotLight&gt; spotLights = sceneLights.getSpotLights();\n        int numSpotLights = spotLights.size();\n        for (int i = 0; i &lt; MAX_SPOT_LIGHTS; i++) {\n            SpotLight spotLight = (i &lt; numSpotLights) ? spotLights.get(i) : null;\n            String name = \"spotLights[\" + i + \"]\";\n            updateSpotLight(spotLight, name, viewMatrix, shaderProgram); // \u4f20\u5165 shaderProgram\n        }\n    }\n    // ...\n}\n</code></pre> <p>\u4ee3\u7801\u975e\u5e38\u76f4\u63a5\uff0c\u6211\u4eec\u9996\u5148\u8bbe\u7f6e\u73af\u5883\u5149\u548c\u65b9\u5411\u5149\u7684uniform\uff0c\u7136\u540e\u904d\u5386\u70b9\u5149\u6e90\u548c\u805a\u5149\u706f\uff0c\u5b83\u4eec\u6709\u4e13\u95e8\u7684\u65b9\u6cd5\u6765\u4e3a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8bbe\u7f6euniform\uff1a</p> <pre><code>public class SceneRender {\n    // ...\n    private void updatePointLight(PointLight pointLight, String prefix, Matrix4f viewMatrix, ShaderProgram shaderProgram) { // \u4f20\u5165 shaderProgram\n        Vector3f lightPositionVS = new Vector3f(); // \u89c6\u56fe\u7a7a\u95f4\u4e2d\u7684\u5149\u6e90\u4f4d\u7f6e\n        Vector3f color = new Vector3f(0,0,0); // \u9ed8\u8ba4\u989c\u8272\uff08\u5982\u679c\u5149\u6e90\u4e3anull\uff09\n        float intensity = 0.0f;              // \u9ed8\u8ba4\u5f3a\u5ea6\n        float constant = 1.0f;               // \u9ed8\u8ba4\u8870\u51cf\u5e38\u6570\u9879 (\u907f\u514d\u9664\u4ee50)\n        float linear = 0.0f;\n        float exponent = 0.0f;\n\n        if (pointLight != null) {\n            Vector4f aux = new Vector4f(pointLight.getPosition(), 1); // w=1 \u8868\u793a\u4f4d\u7f6e\u5411\u91cf\n            aux.mul(viewMatrix); // \u8f6c\u6362\u5230\u89c6\u56fe\u7a7a\u95f4\n            lightPositionVS.set(aux.x, aux.y, aux.z);\n            color.set(pointLight.getColor());\n            intensity = pointLight.getIntensity();\n            PointLight.Attenuation attenuation = pointLight.getAttenuation();\n            constant = attenuation.getConstant();\n            linear = attenuation.getLinear();\n            exponent = attenuation.getExponent();\n        } else {\n            // \u5982\u679c pointLight \u4e3a null\uff0c\u6211\u4eec\u4ecd\u9700\u8bbe\u7f6e uniform\uff0c\u901a\u5e38\u8bbe\u4e3a\u65e0\u5f71\u54cd\u7684\u503c\uff08\u5982\u5f3a\u5ea6\u4e3a0\uff09\n            // intensity \u5df2\u7ecf\u4e3a0.0f\uff0c\u5176\u4ed6\u503c\u53ef\u4ee5\u4fdd\u6301\u9ed8\u8ba4\n        }\n\n        uniformsMap.setUniform(prefix + \".position\", lightPositionVS);\n        uniformsMap.setUniform(prefix + \".color\", color);\n        uniformsMap.setUniform(prefix + \".intensity\", intensity);\n        uniformsMap.setUniform(prefix + \".att.constant\", constant);\n        uniformsMap.setUniform(prefix + \".att.linear\", linear);\n        uniformsMap.setUniform(prefix + \".att.exponent\", exponent);\n    }\n\n    private void updateSpotLight(SpotLight spotLight, String prefix, Matrix4f viewMatrix, ShaderProgram shaderProgram) { // \u4f20\u5165 shaderProgram\n        PointLight pointLight = null;\n        Vector3f coneDirectionVS = new Vector3f(0,0,-1); // \u9ed8\u8ba4\u9525\u4f53\u65b9\u5411 (\u89c6\u56fe\u7a7a\u95f4)\n        float cutoff = 0.0f; // \u9ed8\u8ba4\u622a\u6b62\u503c\n\n        if (spotLight != null) {\n            Vector4f auxConeDir = new Vector4f(spotLight.getConeDirection(), 0); // w=0 \u9525\u4f53\u65b9\u5411\n            auxConeDir.mul(viewMatrix); // \u8f6c\u6362\u5230\u89c6\u56fe\u7a7a\u95f4\n            coneDirectionVS.set(auxConeDir.x, auxConeDir.y, auxConeDir.z).normalize();\n            cutoff = spotLight.getCutOff();\n            pointLight = spotLight.getPointLight();\n        }\n\n        uniformsMap.setUniform(prefix + \".conedir\", coneDirectionVS);\n        uniformsMap.setUniform(prefix + \".cutoff\", cutoff);\n        // \u66f4\u65b0\u805a\u5149\u706f\u5185\u542b\u7684\u70b9\u5149\u6e90\u5c5e\u6027\n        updatePointLight(pointLight, prefix + \".pl\", viewMatrix, shaderProgram);\n    }\n    // ...\n}\n</code></pre> <p>\u6b63\u5982\u6211\u4eec\u6240\u8bf4\uff0c\u8fd9\u4e9b\u5149\u7167\u5750\u6807\u5fc5\u987b\u5728\u89c6\u56fe\u7a7a\u95f4\u4e2d\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u5728\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u4e2d\u8bbe\u7f6e\u5149\u7167\u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u4e58\u4ee5\u89c6\u56fe\u77e9\u9635\uff0c\u4ee5\u4fbf\u80fd\u591f\u5728\u6211\u4eec\u7684\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0 <code>render</code> \u65b9\u6cd5\u4ee5\u8c03\u7528 <code>updateLights</code> \u65b9\u6cd5\uff0c\u5e76\u6b63\u786e\u8bbe\u7f6e\u6a21\u578b\u6750\u8d28\u7684\u65b0\u5143\u7d20\uff1a</p> <pre><code>public class SceneRender {\n    // ...\n    public void render(Scene scene, ShaderProgram shaderProgram) { // \u4f20\u5165 shaderProgram\n        // ...\n        shaderProgram.bind(); // \u7ed1\u5b9a\u7740\u8272\u5668\u7a0b\u5e8f\n\n        // \u66f4\u65b0\u6295\u5f71\u77e9\u9635\u3001\u89c6\u56fe\u77e9\u9635\u7b49\u5168\u5c40 uniform\n        // uniformsMap.setUniform(\"projectionMatrix\", scene.getProjection().getProjMatrix());\n        // uniformsMap.setUniform(\"viewMatrix\", scene.getCamera().getViewMatrix());\n\n        updateLights(scene, shaderProgram); // \u66f4\u65b0\u5149\u7167\u76f8\u5173\u7684uniform\n\n        // \u6e32\u67d3\u6a21\u578b\n        Map&lt;String, Model&gt; modelsMap = scene.getModels(); // \u5047\u8bbe\u573a\u666f\u4e2d\u5b58\u50a8\u4e86\u6a21\u578b\n        for (Model model : modelsMap.values()) { // \u904d\u5386\u6a21\u578b\n            // uniformsMap.setUniform(\"modelMatrix\", model.getModelMatrix()); // \u8bbe\u7f6e\u5f53\u524d\u6a21\u578b\u7684\u6a21\u578b\u77e9\u9635 (\u5047\u8bbeModel\u6709\u6b64\u65b9\u6cd5)\n                                                                         // \u6216\u8005\u4eceEntity\u83b7\u53d6\n\n            List&lt;Entity&gt; entities = scene.getEntitiesByModelId(model.getId()); // \u83b7\u53d6\u4f7f\u7528\u6b64\u6a21\u578b\u7684\u5b9e\u4f53\n\n            for (Material material : model.getMaterialList()) { // \u904d\u5386\u6a21\u578b\u7684\u6750\u8d28\n                // \u8bbe\u7f6e\u6750\u8d28\u76f8\u5173\u7684uniform\n                uniformsMap.setUniform(\"material.ambient\", material.getAmbientColor());\n                uniformsMap.setUniform(\"material.diffuse\", material.getDiffuseColor());\n                uniformsMap.setUniform(\"material.specular\", material.getSpecularColor());\n                uniformsMap.setUniform(\"material.reflectance\", material.getReflectance());\n\n                if (material.hasTexture()) { // \u5047\u8bbeMaterial\u6709hasTexture() \u548c getTexture()\n                    // \u7ed1\u5b9a\u7eb9\u7406\n                    // glActiveTexture(GL_TEXTURE0);\n                    // material.getTexture().bind();\n                    // uniformsMap.setUniform(\"txtSampler\", 0); // \u8bbe\u7f6e\u7eb9\u7406\u91c7\u6837\u5668\u5355\u5143\n                }\n\n                // \u6e32\u67d3\u4f7f\u7528\u6b64\u6750\u8d28\u7684\u7f51\u683c/\u5b9e\u4f53\n                for (Entity entity : entities) {\n                    if (entity.getModelId().equals(model.getId()) /* &amp;&amp; entity uses this material */) {\n                        // Matrix4f modelMatrix = entity.updateModelMatrix(); // \u6216\u8005\u76f4\u63a5\u83b7\u53d6\n                        // uniformsMap.setUniform(\"modelMatrix\", modelMatrix);\n                        // \u5b9e\u9645\u6e32\u67d3\u8c03\u7528\uff0c\u53ef\u80fd\u5728Model\u6216Mesh\u7c7b\u4e2d\n                        // model.render(material); // \u6216\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\n                    }\n                }\n            }\n        }\n        shaderProgram.unbind(); // \u89e3\u7ed1\u7740\u8272\u5668\u7a0b\u5e8f\n        // ...\n    }\n    // ...\n}\n</code></pre> <p>\u6211\u4eec\u8fd8\u9700\u8981\u5411 <code>UniformsMap</code> \u7c7b\u6dfb\u52a0\u4e00\u5bf9\u65b9\u6cd5\uff0c\u7528\u4e8e\u521b\u5efa\u548c\u8bbe\u7f6e\u6d6e\u70b9\u6570\u548c\u4e09\u7ef4\u5411\u91cf\u7684uniform\uff1a</p> <pre><code>public class UniformsMap {\n    private Map&lt;String, Integer&gt; uniforms; // \u5b58\u50a8uniform\u540d\u79f0\u548c\u5176\u4f4d\u7f6e\n    private int shaderProgramId; // \u7740\u8272\u5668\u7a0b\u5e8fID\n\n    public UniformsMap(int shaderProgramId) {\n        this.shaderProgramId = shaderProgramId;\n        uniforms = new HashMap&lt;&gt;();\n    }\n\n    public void createUniform(String uniformName) {\n        int uniformLocation = glGetUniformLocation(shaderProgramId, uniformName);\n        if (uniformLocation &lt; 0) {\n            // System.err.println(\"Could not find uniform [\" + uniformName + \"] in shader program [\" + shaderProgramId + \"]\");\n            // \u629b\u51fa\u5f02\u5e38\u6216\u8bb0\u5f55\u65e5\u5fd7\uff0c\u539f\u6587\u672a\u5904\u7406\n            throw new RuntimeException(\"Could not find uniform [\" + uniformName + \"]\");\n        }\n        uniforms.put(uniformName, uniformLocation);\n    }\n\n    private int getUniformLocation(String uniformName) {\n        Integer location = uniforms.get(uniformName);\n        if (location == null) {\n            // System.err.println(\"Uniform [\" + uniformName + \"] has not been created.\");\n            throw new RuntimeException(\"Uniform [\" + uniformName + \"] has not been created.\");\n        }\n        return location;\n    }\n    // ...\n    public void setUniform(String uniformName, float value) {\n        glUniform1f(getUniformLocation(uniformName), value);\n    }\n\n    public void setUniform(String uniformName, Vector3f value) {\n        glUniform3f(getUniformLocation(uniformName), value.x, value.y, value.z);\n    }\n\n    public void setUniform(String uniformName, Vector4f value) { // \u8865\u5145Vector4f\u7684setUniform\n        glUniform4f(getUniformLocation(uniformName), value.x, value.y, value.z, value.w);\n    }\n\n    public void setUniform(String uniformName, Matrix4f value) { // \u8865\u5145Matrix4f\u7684setUniform\n        try (MemoryStack stack = MemoryStack.stackPush()) {\n            FloatBuffer fb = value.get(stack.mallocFloat(16));\n            glUniformMatrix4fv(getUniformLocation(uniformName), false, fb);\n        }\n    }\n    // ...\n}\n</code></pre>"},{"location":"11-light/#version-330","title":"version 330","text":"<p>layout (location=0) in vec3 position; layout (location=1) in vec2 texCoord;</p> <p>out vec2 outTextCoord;</p> <p>uniform mat4 projectionMatrix; uniform mat4 viewMatrix; uniform mat4 modelMatrix;</p> <p>void main() { gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0); outTextCoord = texCoord; }</p>"},{"location":"11-light/#_11","title":"\u5149\u7167\u63a7\u5236","text":"<p>\u6700\u540e\u4e00\u6b65\u662f\u5728 <code>Main</code> \u7c7b\u4e2d\u4f7f\u7528\u5149\u7167\u3002\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Imgui \u521b\u5efa\u4e00\u4e2aGUI\uff0c\u4ee5\u63d0\u4f9b\u4e00\u4e9b\u5143\u7d20\u6765\u63a7\u5236\u5149\u7167\u53c2\u6570\u3002\u6211\u4eec\u5c06\u5728\u4e00\u4e2a\u540d\u4e3a <code>LightControls</code> \u7684\u65b0\u7c7b\u4e2d\u5b8c\u6210\u6b64\u64cd\u4f5c\u3002\u4ee3\u7801\u867d\u7136\u5197\u957f\uff0c\u4f46\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u7f6e\u4e00\u7ec4\u5c5e\u6027\u6765\u4eceGUI\u63a7\u4ef6\u83b7\u53d6\u503c\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u65b9\u6cd5\u6765\u7ed8\u5236\u6240\u9700\u7684\u9762\u677f\u548c\u63a7\u4ef6\u3002</p> <pre><code>package org.lwjglb.game;\n\nimport imgui.*;\nimport imgui.flag.ImGuiCond;\nimport imgui.type.ImFloat; // \u4f7f\u7528 ImGui \u7684\u7c7b\u578b\nimport imgui.type.ImBoolean; // \u5982\u6709\u9700\u8981\nimport org.joml.*;\nimport org.lwjglb.engine.*;\nimport org.lwjglb.engine.scene.Scene;\nimport org.lwjglb.engine.scene.lights.*;\n\npublic class LightControls implements IGuiInstance {\n\n    // \u4f7f\u7528 ImGui \u7684\u7c7b\u578b\u6216\u5305\u88c5\u57fa\u672c\u7c7b\u578b\u6570\u7ec4\n    private final ImFloat ambientIntensity; // \u539f\u6587 ambientFactor\n    private final float[] ambientColorArr;\n\n    private final float[] dirLightDirectionArr;\n    private final float[] dirLightColorArr;\n    private final ImFloat dirLightIntensity;\n\n    // \u5047\u8bbe\u53ea\u6709\u4e00\u4e2a\u70b9\u5149\u6e90\u548c\u805a\u5149\u706f\u7528\u4e8eGUI\u63a7\u5236\n    private final float[] pointLightPositionArr;\n    private final float[] pointLightColorArr;\n    private final ImFloat pointLightIntensity;\n\n    private final float[] spotLightPositionArr;\n    private final float[] spotLightColorArr;\n    private final ImFloat spotLightIntensity;\n    private final float[] spotLightConeDirArr;\n    private final ImFloat spotLightCutOffAngle; // \u89d2\u5ea6\u503c\n\n    public LightControls(Scene scene) {\n        SceneLights sceneLights = scene.getSceneLights();\n\n        AmbientLight ambientLight = sceneLights.getAmbientLight();\n        ambientIntensity = new ImFloat(ambientLight.getIntensity());\n        Vector3f color = ambientLight.getColor();\n        ambientColorArr = new float[]{color.x, color.y, color.z};\n\n        DirLight dirLight = sceneLights.getDirLight();\n        color = dirLight.getColor();\n        dirLightColorArr = new float[]{color.x, color.y, color.z};\n        Vector3f dir = dirLight.getDirection();\n        dirLightDirectionArr = new float[]{dir.x, dir.y, dir.z};\n        dirLightIntensity = new ImFloat(dirLight.getIntensity());\n\n        // \u5047\u8bbe\u573a\u666f\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u5149\u6e90\u548c\u805a\u5149\u706f\u7528\u4e8eGUI\u63a7\u5236\n        // \u5982\u679c\u5217\u8868\u4e3a\u7a7a\uff0c\u5219\u5e94\u8fdb\u884c\u76f8\u5e94\u5904\u7406\uff08\u4f8b\u5982\uff0c\u521b\u5efa\u9ed8\u8ba4\u5149\u6e90\u6216\u7981\u7528GUI\u90e8\u5206\uff09\n        PointLight pointLight = sceneLights.getPointLights().isEmpty() ?\n                new PointLight(new Vector3f(1,1,1), new Vector3f(0,0,0), 0) :\n                sceneLights.getPointLights().get(0);\n        color = pointLight.getColor();\n        pointLightColorArr = new float[]{color.x, color.y, color.z};\n        Vector3f pos = pointLight.getPosition();\n        pointLightPositionArr = new float[]{pos.x, pos.y, pos.z};\n        pointLightIntensity = new ImFloat(pointLight.getIntensity());\n\n        SpotLight spotLight = sceneLights.getSpotLights().isEmpty() ?\n                new SpotLight(new PointLight(new Vector3f(1,1,1), new Vector3f(0,0,0), 0), new Vector3f(0,0,-1), 0) :\n                sceneLights.getSpotLights().get(0);\n        PointLight spotPointLight = spotLight.getPointLight();\n        color = spotPointLight.getColor();\n        spotLightColorArr = new float[]{color.x, color.y, color.z};\n        pos = spotPointLight.getPosition();\n        spotLightPositionArr = new float[]{pos.x, pos.y, pos.z};\n        spotLightIntensity = new ImFloat(spotPointLight.getIntensity());\n        spotLightCutOffAngle = new ImFloat(spotLight.getCutOffAngle());\n        Vector3f coneDir = spotLight.getConeDirection();\n        spotLightConeDirArr = new float[]{coneDir.x, coneDir.y, coneDir.z};\n    }\n\n    @Override\n    public void drawGui() {\n        ImGui.newFrame();\n        ImGui.setNextWindowPos(0, 0, ImGuiCond.Always);\n        ImGui.setNextWindowSize(450, 500); // \u589e\u52a0\u9ad8\u5ea6\u4ee5\u5bb9\u7eb3\u66f4\u591a\u63a7\u4ef6\n\n        ImGui.begin(\"\u5149\u7167\u63a7\u5236 (Light Controls)\");\n        if (ImGui.collapsingHeader(\"\u73af\u5883\u5149 (Ambient Light)\")) {\n            ImGui.sliderFloat(\"\u73af\u5883\u5149\u5f3a\u5ea6 (Ambient factor)\", ambientIntensity.getData(), 0.0f, 1.0f, \"%.2f\");\n            ImGui.colorEdit3(\"\u73af\u5883\u5149\u989c\u8272 (Ambient color)\", ambientColorArr);\n        }\n\n        if (ImGui.collapsingHeader(\"\u65b9\u5411\u5149 (Directional Light)\")) {\n            ImGui.sliderFloat(\"\u65b9\u5411\u5149 X (Dir Light - x)\", dirLightDirectionArr, 0, -1.0f, 1.0f, \"%.2f\"); // \u6570\u7ec4\u7d22\u5f150\n            ImGui.sliderFloat(\"\u65b9\u5411\u5149 Y (Dir Light - y)\", dirLightDirectionArr, 1, -1.0f, 1.0f, \"%.2f\"); // \u6570\u7ec4\u7d22\u5f151\n            ImGui.sliderFloat(\"\u65b9\u5411\u5149 Z (Dir Light - z)\", dirLightDirectionArr, 2, -1.0f, 1.0f, \"%.2f\"); // \u6570\u7ec4\u7d22\u5f152\n            ImGui.colorEdit3(\"\u65b9\u5411\u5149\u989c\u8272 (Dir Light color)\", dirLightColorArr);\n            ImGui.sliderFloat(\"\u65b9\u5411\u5149\u5f3a\u5ea6 (Dir Light Intensity)\", dirLightIntensity.getData(), 0.0f, 1.0f, \"%.2f\");\n        }\n\n        if (ImGui.collapsingHeader(\"\u70b9\u5149\u6e90 (Point Light)\")) {\n            ImGui.sliderFloat(\"\u70b9\u5149\u6e90 X (Point Light - x)\", pointLightPositionArr, 0, -10.0f, 10.0f, \"%.2f\");\n            ImGui.sliderFloat(\"\u70b9\u5149\u6e90 Y (Point Light - y)\", pointLightPositionArr, 1, -10.0f, 10.0f, \"%.2f\");\n            ImGui.sliderFloat(\"\u70b9\u5149\u6e90 Z (Point Light - z)\", pointLightPositionArr, 2, -10.0f, 10.0f, \"%.2f\");\n            ImGui.colorEdit3(\"\u70b9\u5149\u6e90\u989c\u8272 (Point Light color)\", pointLightColorArr);\n            ImGui.sliderFloat(\"\u70b9\u5149\u6e90\u5f3a\u5ea6 (Point Light Intensity)\", pointLightIntensity.getData(), 0.0f, 1.0f, \"%.2f\");\n        }\n\n        if (ImGui.collapsingHeader(\"\u805a\u5149\u706f (Spot Light)\")) {\n            ImGui.text(\"\u5149\u6e90\u5c5e\u6027 (Point Light Properties):\");\n            ImGui.sliderFloat(\"\u805a\u5149\u706f\u6e90 X (Spot Light Source - x)\", spotLightPositionArr, 0, -10.0f, 10.0f, \"%.2f\");\n            ImGui.sliderFloat(\"\u805a\u5149\u706f\u6e90 Y (Spot Light Source - y)\", spotLightPositionArr, 1, -10.0f, 10.0f, \"%.2f\");\n            ImGui.sliderFloat(\"\u805a\u5149\u706f\u6e90 Z (Spot Light Source - z)\", spotLightPositionArr, 2, -10.0f, 10.0f, \"%.2f\");\n            ImGui.colorEdit3(\"\u805a\u5149\u706f\u6e90\u989c\u8272 (Spot Light Source color)\", spotLightColorArr);\n            ImGui.sliderFloat(\"\u805a\u5149\u706f\u6e90\u5f3a\u5ea6 (Spot Light Source Intensity)\", spotLightIntensity.getData(), 0.0f, 1.0f, \"%.2f\");\n            ImGui.separator();\n            ImGui.text(\"\u9525\u4f53\u5c5e\u6027 (Cone Properties):\");\n            ImGui.sliderFloat(\"\u805a\u5149\u706f\u622a\u6b62\u89d2 (Spot Light cutoff Angle)\", spotLightCutOffAngle.getData(), 0.0f, 180.0f, \"%.1f\"); // \u901a\u5e38\u89d2\u5ea6\u57280-180\n            ImGui.sliderFloat(\"\u9525\u4f53\u65b9\u5411 X (Dir cone - x)\", spotLightConeDirArr, 0, -1.0f, 1.0f, \"%.2f\");\n            ImGui.sliderFloat(\"\u9525\u4f53\u65b9\u5411 Y (Dir cone - y)\", spotLightConeDirArr, 1, -1.0f, 1.0f, \"%.2f\");\n            ImGui.sliderFloat(\"\u9525\u4f53\u65b9\u5411 Z (Dir cone - z)\", spotLightConeDirArr, 2, -1.0f, 1.0f, \"%.2f\");\n        }\n\n        ImGui.end();\n        ImGui.endFrame(); // \u539f\u6587\u7f3a\u5931\n        ImGui.render();\n    }\n    // ...\n}\n</code></pre> <p>\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b9\u6cd5\u6765\u5904\u7406GUI\u8f93\u5165\uff0c\u5728\u8be5\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u6839\u636e\u9f20\u6807\u72b6\u6001\u66f4\u65b0Imgui\uff0c\u5e76\u68c0\u67e5\u8f93\u5165\u662f\u5426\u5df2\u88abGUI\u63a7\u4ef6\u6d88\u8017\u3002\u5982\u679c\u662f\uff0c\u6211\u4eec\u53ea\u9700\u6839\u636e\u7528\u6237\u8f93\u5165\u586b\u5145\u7c7b\u7684\u5c5e\u6027\uff1a</p> <pre><code>public class LightControls implements IGuiInstance {\n    // ...\n    @Override\n    public boolean handleGuiInput(Scene scene, Window window) {\n        ImGuiIO io = ImGui.getIO(); // \u539f\u6587\u662f imGuiIO\n        MouseInput mouseInput = window.getMouseInput();\n        Vector2f mousePos = mouseInput.getCurrentPos();\n        io.setMousePos(mousePos.x, mousePos.y); // \u539f\u6587\u662f addMousePosEvent\uff0c\u65b0\u7248API\u53ef\u80fd\u662fsetMousePos\n        io.setMouseButtonDown(0, mouseInput.isLeftButtonPressed()); // \u539f\u6587\u662f addMouseButtonEvent\n        io.setMouseButtonDown(1, mouseInput.isRightButtonPressed());// \u539f\u6587\u662f addMouseButtonEvent\n\n        boolean consumed = io.getWantCaptureMouse() || io.getWantCaptureKeyboard();\n        if (consumed) {\n            SceneLights sceneLights = scene.getSceneLights();\n\n            AmbientLight ambientLight = sceneLights.getAmbientLight();\n            ambientLight.setIntensity(ambientIntensity.get());\n            ambientLight.setColor(ambientColorArr[0], ambientColorArr[1], ambientColorArr[2]);\n\n            DirLight dirLight = sceneLights.getDirLight();\n            dirLight.setDirection(new Vector3f(dirLightDirectionArr[0], dirLightDirectionArr[1], dirLightDirectionArr[2]));\n            dirLight.setColor(dirLightColorArr[0], dirLightColorArr[1], dirLightColorArr[2]);\n            dirLight.setIntensity(dirLightIntensity.get());\n\n\n            if (!sceneLights.getPointLights().isEmpty()) {\n                PointLight pointLight = sceneLights.getPointLights().get(0);\n                pointLight.setPosition(pointLightPositionArr[0], pointLightPositionArr[1], pointLightPositionArr[2]);\n                pointLight.setColor(pointLightColorArr[0], pointLightColorArr[1], pointLightColorArr[2]);\n                pointLight.setIntensity(pointLightIntensity.get());\n            }\n\n            if (!sceneLights.getSpotLights().isEmpty()) {\n                SpotLight spotLight = sceneLights.getSpotLights().get(0);\n                PointLight spotPointLight = spotLight.getPointLight(); // \u539f\u6587\u662f pointLight = spotLight.getPointLight(); \u53d8\u91cf\u540d\u91cd\u590d\n                spotPointLight.setPosition(spotLightPositionArr[0], spotLightPositionArr[1], spotLightPositionArr[2]);\n                spotPointLight.setColor(spotLightColorArr[0], spotLightColorArr[1], spotLightColorArr[2]);\n                spotPointLight.setIntensity(spotLightIntensity.get());\n                spotLight.setCutOffAngle(spotLightCutOffAngle.get()); // \u539f\u6587 spotLightColor[0] \u662f\u4e00\u4e2a\u660e\u663e\u7684\u9519\u8bef\n                spotLight.setConeDirection(new Vector3f(spotLightConeDirArr[0], spotLightConeDirArr[1], spotLightConeDirArr[2]));\n            }\n        }\n        return consumed;\n    }\n}\n</code></pre> <p>\u6700\u540e\u4e00\u6b65\u662f\u66f4\u65b0 <code>Main</code> \u7c7b\u4ee5\u521b\u5efa\u5149\u7167\uff0c\u79fb\u9664\u4e4b\u524d\u7684 <code>drawGui</code> \u548c <code>handleGuiInput</code> \u65b9\u6cd5\uff08\u6211\u4eec\u73b0\u5728\u5728 <code>LightControls</code> \u7c7b\u4e2d\u5904\u7406\u8fd9\u4e9b\uff09\uff1a</p> <pre><code>public class Main implements IAppLogic {\n    // ...\n    private LightControls lightControls;\n    private Entity cubeEntity; // \u58f0\u660e\u5b9e\u4f53\u53d8\u91cf\n\n    public static void main(String[] args) {\n        // ...\n        Main main = new Main(); // \u521b\u5efa Main \u5b9e\u4f8b\n        Engine gameEng = new Engine(\"chapter-11\", new Window.WindowOptions(), main);\n        gameEng.run(); // \u542f\u52a8\u5f15\u64ce\n        // ...\n    }\n    // ...\n    @Override // \u786e\u4fdd\u5b9e\u73b0 IAppLogic \u63a5\u53e3\u7684\u65b9\u6cd5\u90fd\u6709 @Override\n    public void init(Window window, Scene scene, Render render) throws Exception { // ModelLoader.loadModel \u53ef\u80fd\u629b\u51fa\u5f02\u5e38\n        Model cubeModel = ModelLoader.loadModel(\"cube-model\", \"resources/models/cube/cube.obj\",\n                scene.getTextureCache());\n        scene.addModel(cubeModel);\n\n        cubeEntity = new Entity(\"cube-entity\", cubeModel.getId());\n        cubeEntity.setPosition(0, 0f, -2);\n        // cubeEntity.updateModelMatrix(); // updateModelMatrix \u901a\u5e38\u5728\u6e32\u67d3\u524d\u6216\u4f4d\u7f6e\u6539\u53d8\u540e\u8c03\u7528\uff0c\u6b64\u5904\u53ef\u80fd\u4e0d\u9700\u8981\u7acb\u5373\u8c03\u7528\n        scene.addEntity(cubeEntity);\n\n        SceneLights sceneLights = new SceneLights();\n        sceneLights.getAmbientLight().setIntensity(0.3f);\n        scene.setSceneLights(sceneLights); // \u8bbe\u7f6e\u573a\u666f\u5149\u7167\n        sceneLights.getPointLights().add(new PointLight(new Vector3f(1, 1, 1),\n                new Vector3f(0, 0, -1.4f), 1.0f));\n\n        Vector3f coneDir = new Vector3f(0, 0, -1);\n        // \u521b\u5efa\u805a\u5149\u706f\u65f6\uff0c\u70b9\u5149\u6e90\u5f3a\u5ea6\u521d\u59cb\u53ef\u4ee5\u4e3a0\uff0c\u6216\u6839\u636e\u9700\u8981\u8bbe\u7f6e\n        sceneLights.getSpotLights().add(new SpotLight(new PointLight(new Vector3f(1, 1, 1),\n                new Vector3f(0, 0, -1.4f), 1.0f /* \u539f\u6587\u4e3a0.0f, GUI\u53ef\u8c03 */), coneDir, 60.0f /* \u539f\u6587140.0f\uff0c\u89d2\u5ea6\u53ef\u4ee5\u8c03\u6574 */));\n\n\n        lightControls = new LightControls(scene);\n        scene.setGuiInstance(lightControls); // \u5c06GUI\u5b9e\u4f8b\u8bbe\u7f6e\u5230\u573a\u666f\u4e2d\n    }\n    // ...\n    @Override\n    public void input(Window window, Scene scene, long diffTimeMillis) { // \u539f update \u65b9\u6cd5\u540d\u901a\u5e38\u7528\u4e8e\u903b\u8f91\u66f4\u65b0\n        // \u68c0\u67e5GUI\u662f\u5426\u6d88\u8017\u4e86\u8f93\u5165\n        if (scene.getGuiInstance() != null &amp;&amp; scene.getGuiInstance().handleGuiInput(scene, window)) {\n            return; // \u5982\u679cGUI\u6d88\u8017\u4e86\u8f93\u5165\uff0c\u5219\u4e0d\u5904\u7406\u6e38\u620f\u5185\u8f93\u5165\n        }\n        // \u6b64\u5904\u53ef\u4ee5\u6dfb\u52a0\u6e38\u620f\u903b\u8f91\u76f8\u5173\u7684\u8f93\u5165\u5904\u7406\n    }\n\n    @Override\n    public void update(Window window, Scene scene, long diffTimeMillis) {\n        // \u6e38\u620f\u903b\u8f91\u66f4\u65b0\uff0c\u4f8b\u5982\u5b9e\u4f53\u79fb\u52a8\u3001\u52a8\u753b\u7b49\n        // cubeEntity.rotate(0, (float)Math.toRadians(0.5f * diffTimeMillis / 1000.0f), 0); // \u793a\u4f8b\uff1a\u8ba9\u7acb\u65b9\u4f53\u65cb\u8f6c\n        // cubeEntity.updateModelMatrix(); // \u5982\u679c\u4f4d\u7f6e\u6216\u671d\u5411\u6539\u53d8\uff0c\u66f4\u65b0\u6a21\u578b\u77e9\u9635\n    }\n}\n</code></pre> <p>\u6700\u7ec8\u4f60\u5c06\u80fd\u591f\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u4e1c\u897f\u3002</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"12-sky-box/","title":"\u7b2c12\u7ae0 - \u5929\u7a7a\u76d2\uff08Sky Box\uff09","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5929\u7a7a\u76d2\uff08Sky Box\uff09\u3002\u5929\u7a7a\u76d2\u5c06\u5141\u8bb8\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u80cc\u666f\uff0c\u4ee5\u7ed9\u4eba\u4e00\u79cd\u6211\u4eec\u76843D\u4e16\u754c\u66f4\u5927\u7684\u9519\u89c9\u3002\u8be5\u80cc\u666f\u56f4\u7ed5\u76f8\u673a\u4f4d\u7f6e\u5305\u88f9\uff0c\u5e76\u8986\u76d6\u6574\u4e2a\u7a7a\u95f4\u3002\u6211\u4eec\u5c06\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u6280\u672f\u662f\u6784\u5efa\u4e00\u4e2a\u5927\u7acb\u65b9\u4f53\uff0c\u8be5\u7acb\u65b9\u4f53\u5c06\u663e\u793a\u57283D\u573a\u666f\u5468\u56f4\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u76f8\u673a\u4f4d\u7f6e\u7684\u4e2d\u5fc3\u5c06\u662f\u7acb\u65b9\u4f53\u7684\u4e2d\u5fc3\u3002\u8be5\u7acb\u65b9\u4f53\u7684\u4fa7\u9762\u5c06\u5305\u88f9\u7740\u5e26\u6709\u5c71\u4e18\u3001\u84dd\u5929\u548c\u4e91\u5f69\u7684\u7eb9\u7406\uff0c\u8fd9\u4e9b\u7eb9\u7406\u5c06\u4ee5\u4e00\u79cd\u56fe\u50cf\u770b\u8d77\u6765\u50cf\u8fde\u7eed\u666f\u89c2\u7684\u65b9\u5f0f\u8fdb\u884c\u6620\u5c04\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"12-sky-box/#_1","title":"\u5929\u7a7a\u76d2","text":"<p>\u4e0b\u56fe\u63cf\u7ed8\u4e86\u5929\u7a7a\u76d2\u7684\u6982\u5ff5\u3002</p> <p></p> <p>\u521b\u5efa\u5929\u7a7a\u76d2\u7684\u8fc7\u7a0b\u53ef\u4ee5\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ul> <li>\u521b\u5efa\u4e00\u4e2a\u5927\u7acb\u65b9\u4f53\u3002</li> <li>\u5728\u5176\u4e0a\u5e94\u7528\u4e00\u4e2a\u7eb9\u7406\uff0c\u8be5\u7eb9\u7406\u63d0\u4f9b\u6211\u4eec\u6b63\u5728\u770b\u5230\u4e00\u4e2a\u6ca1\u6709\u8fb9\u7f18\u7684\u5de8\u5927\u666f\u89c2\u7684\u9519\u89c9\u3002</li> <li>\u6e32\u67d3\u7acb\u65b9\u4f53\uff0c\u4f7f\u5176\u4fa7\u9762\u4f4d\u4e8e\u8fdc\u5904\uff0c\u5e76\u4e14\u5176\u539f\u70b9\u4f4d\u4e8e\u76f8\u673a\u7684\u4e2d\u5fc3\u3002</li> </ul> <p>\u6211\u4eec\u5c06\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>SkyBox</code>\u7684\u65b0\u7c7b\uff0c\u5176\u6784\u9020\u51fd\u6570\u63a5\u6536\u5305\u542b\u5929\u7a7a\u76d2\u7acb\u65b9\u4f53\uff08\u53ca\u5176\u7eb9\u7406\uff09\u76843D\u6a21\u578b\u7684\u8def\u5f84\u4ee5\u53ca\u7eb9\u7406\u7f13\u5b58\u7684\u5f15\u7528\u3002\u8be5\u7c7b\u5c06\u52a0\u8f7d\u8be5\u6a21\u578b\u5e76\u521b\u5efa\u4e00\u4e2a\u4e0e\u8be5\u6a21\u578b\u5173\u8054\u7684<code>Entity</code>\u5b9e\u4f8b\u3002<code>SkyBox</code>\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\u3002</p> <pre><code>package org.lwjglb.engine.scene;\n\nimport org.lwjglb.engine.graph.*;\n\npublic class SkyBox {\n\n    private Entity skyBoxEntity;\n    private Model skyBoxModel;\n\n    public SkyBox(String skyBoxModelPath, TextureCache textureCache) {\n        skyBoxModel = ModelLoader.loadModel(\"skybox-model\", skyBoxModelPath, textureCache);\n        skyBoxEntity = new Entity(\"skyBoxEntity-entity\", skyBoxModel.getId());\n    }\n\n    public Entity getSkyBoxEntity() {\n        return skyBoxEntity;\n    }\n\n    public Model getSkyBoxModel() {\n        return skyBoxModel;\n    }\n}\n</code></pre> <p>\u6211\u4eec\u5c06\u5728<code>Scene</code>\u7c7b\u4e2d\u5b58\u50a8\u5bf9<code>SkyBox</code>\u7c7b\u7684\u5f15\u7528\uff1a</p> <pre><code>public class Scene {\n    ...\n    private SkyBox skyBox;\n    ...\n    public SkyBox getSkyBox() {\n        return skyBox;\n    }\n    ...\n    public void setSkyBox(SkyBox skyBox) {\n        this.skyBox = skyBox;\n    }\n    ...\n}\n</code></pre> <p>\u4e0b\u4e00\u6b65\u662f\u4e3a\u5929\u7a7a\u76d2\u521b\u5efa\u53e6\u4e00\u7ec4\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u3002\u4f46\u662f\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u91cd\u7528\u6211\u4eec\u5df2\u6709\u7684\u573a\u666f\u7740\u8272\u5668\u5462\uff1f\u7b54\u6848\u662f\uff0c\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5c06\u9700\u8981\u7684\u7740\u8272\u5668\u662f\u8fd9\u4e9b\u7740\u8272\u5668\u7684\u7b80\u5316\u7248\u672c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e0d\u4f1a\u5bf9\u5929\u7a7a\u76d2\u5e94\u7528\u5149\u7167\u3002\u4e0b\u9762\u60a8\u53ef\u4ee5\u770b\u5230\u5929\u7a7a\u76d2\u9876\u70b9\u7740\u8272\u5668\uff08<code>skybox.vert</code>\uff09\u3002</p> <pre><code>#version 330\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 normal;\nlayout (location=2) in vec2 texCoord;\n\nout vec2 outTextCoord;\n\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 modelMatrix;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n    outTextCoord = texCoord;\n}\n</code></pre> <p>\u60a8\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u4ecd\u7136\u4f7f\u7528\u6a21\u578b\u77e9\u9635\u3002\u7531\u4e8e\u6211\u4eec\u5c06\u7f29\u653e\u5929\u7a7a\u76d2\uff0c\u6211\u4eec\u9700\u8981\u6a21\u578b\u77e9\u9635\u3002\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e9b\u5176\u4ed6\u5b9e\u73b0\uff0c\u5b83\u4eec\u5728\u5f00\u59cb\u65f6\u589e\u52a0\u6a21\u62df\u5929\u7a7a\u76d2\u7684\u7acb\u65b9\u4f53\u7684\u5927\u5c0f\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u4e58\u4ee5\u6a21\u578b\u548c\u89c6\u56fe\u77e9\u9635\u3002\u6211\u4eec\u9009\u62e9\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u66f4\u7075\u6d3b\uff0c\u5e76\u4e14\u5141\u8bb8\u6211\u4eec\u5728\u8fd0\u884c\u65f6\u66f4\u6539\u5929\u7a7a\u76d2\u7684\u5927\u5c0f\uff0c\u4f46\u5982\u679c\u60a8\u613f\u610f\uff0c\u53ef\u4ee5\u8f7b\u677e\u5207\u6362\u5230\u5176\u4ed6\u65b9\u6cd5\u3002</p> <p>\u7247\u6bb5\u7740\u8272\u5668\uff08<code>skybox.frag</code>\uff09\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u662f\u4ece\u7eb9\u7406\u6216\u6f2b\u53cd\u5c04\u989c\u8272\u4e2d\u83b7\u53d6\u989c\u8272\u3002</p> <pre><code>#version 330\n\nin vec2 outTextCoord;\nout vec4 fragColor;\n\nuniform vec4 diffuse;\nuniform sampler2D txtSampler;\nuniform int hasTexture;\n\nvoid main()\n{\n    if (hasTexture == 1) {\n        fragColor = texture(txtSampler, outTextCoord);\n    } else {\n        fragColor = diffuse;\n    }\n}\n</code></pre> <p>\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>SkyBoxRender</code>\u7684\u65b0\u7c7b\u6765\u4f7f\u7528\u8fd9\u4e9b\u7740\u8272\u5668\u5e76\u6267\u884c\u6e32\u67d3\u3002\u8be5\u7c7b\u9996\u5148\u521b\u5efa\u7740\u8272\u5668\u7a0b\u5e8f\u5e76\u8bbe\u7f6e\u6240\u9700\u7684\u7edf\u4e00\u53d8\u91cf\u3002</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.joml.Matrix4f;\nimport org.lwjglb.engine.scene.*;\n\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL20.*;\nimport static org.lwjgl.opengl.GL30.glBindVertexArray;\n\npublic class SkyBoxRender {\n\n    private ShaderProgram shaderProgram;\n\n    private UniformsMap uniformsMap;\n\n    private Matrix4f viewMatrix;\n\n    public SkyBoxRender() {\n        List&lt;ShaderProgram.ShaderModuleData&gt; shaderModuleDataList = new ArrayList&lt;&gt;();\n        shaderModuleDataList.add(new ShaderProgram.ShaderModuleData(\"resources/shaders/skybox.vert\", GL_VERTEX_SHADER));\n        shaderModuleDataList.add(new ShaderProgram.ShaderModuleData(\"resources/shaders/skybox.frag\", GL_FRAGMENT_SHADER));\n        shaderProgram = new ShaderProgram(shaderModuleDataList);\n        viewMatrix = new Matrix4f();\n        createUniforms();\n    }\n    ...\n}\n</code></pre> <p>\u65b9\u6cd5<code>createUniforms</code> \u50cf\u8fd9\u6837\u5b9a\u4e49:</p> <pre><code>public class SkyBoxRender {\n    ...\n    private void createUniforms() {\n        uniformsMap = new UniformsMap(shaderProgram.getProgramId());\n        uniformsMap.createUniform(\"projectionMatrix\");\n        uniformsMap.createUniform(\"viewMatrix\");\n        uniformsMap.createUniform(\"modelMatrix\");\n        uniformsMap.createUniform(\"diffuse\");\n        uniformsMap.createUniform(\"txtSampler\");\n        uniformsMap.createUniform(\"hasTexture\");\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e9bUniform\u53d8\u91cf\u6765\u4fdd\u5b58\u6e32\u67d3\u65f6\u6240\u9700\u7684\u6570\u636e\u3002\u4e0b\u4e00\u6b65\u662f\u4e3a\u5929\u7a7a\u76d2\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6e32\u67d3\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u5728\u5168\u5c40\u6e32\u67d3\u65b9\u6cd5\u4e2d\u88ab\u8c03\u7528\u3002</p> <pre><code>public class SkyBoxRender {\n    ...\n    public void render(Scene scene) {\n        SkyBox skyBox = scene.getSkyBox();\n        if (skyBox == null) {\n            return;\n        }\n        shaderProgram.bind();\n\n        uniformsMap.setUniform(\"projectionMatrix\", scene.getProjection().getProjMatrix());\n        viewMatrix.set(scene.getCamera().getViewMatrix());\n        viewMatrix.m30(0);\n        viewMatrix.m31(0);\n        viewMatrix.m32(0);\n        uniformsMap.setUniform(\"viewMatrix\", viewMatrix);\n        uniformsMap.setUniform(\"txtSampler\", 0);\n\n        Model skyBoxModel = skyBox.getSkyBoxModel();\n        Entity skyBoxEntity = skyBox.getSkyBoxEntity();\n        TextureCache textureCache = scene.getTextureCache();\n        for (Material material : skyBoxModel.getMaterialList()) {\n            Texture texture = textureCache.getTexture(material.getTexturePath());\n            glActiveTexture(GL_TEXTURE0);\n            texture.bind();\n\n            uniformsMap.setUniform(\"diffuse\", material.getDiffuseColor());\n            uniformsMap.setUniform(\"hasTexture\", texture.getTexturePath().equals(TextureCache.DEFAULT_TEXTURE) ? 0 : 1);\n\n            for (Mesh mesh : material.getMeshList()) {\n                glBindVertexArray(mesh.getVaoId());\n\n                uniformsMap.setUniform(\"modelMatrix\", skyBoxEntity.getModelMatrix());\n                glDrawElements(GL_TRIANGLES, mesh.getNumVertices(), GL_UNSIGNED_INT, 0);\n            }\n        }\n\n        glBindVertexArray(0);\n\n        shaderProgram.unbind();\n    }\n}\n</code></pre> <p>\u60a8\u5c06\u770b\u5230\u6211\u4eec\u5728\u5c06\u6570\u636e\u52a0\u8f7d\u5230\u5173\u8054\u7684\u7edf\u4e00\u53d8\u91cf\u4e4b\u524d\u4fee\u6539\u4e86\u89c6\u56fe\u77e9\u9635\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5f53\u6211\u4eec\u79fb\u52a8\u76f8\u673a\u65f6\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u79fb\u52a8\u6574\u4e2a\u4e16\u754c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u53ea\u662f\u6309\u539f\u6837\u4e58\u4ee5\u89c6\u56fe\u77e9\u9635\uff0c\u5f53\u76f8\u673a\u79fb\u52a8\u65f6\uff0c\u5929\u7a7a\u76d2\u4e5f\u4f1a\u88ab\u4f4d\u79fb\u3002\u4f46\u6211\u4eec\u4e0d\u5e0c\u671b\u8fd9\u6837\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u56fa\u5b9a\u5728\u539f\u70b9\u5750\u6807\uff080, 0, 0\uff09\u5904\u3002\u8fd9\u901a\u8fc7\u5c06\u5305\u542b\u5e73\u79fb\u589e\u91cf\u7684\u89c6\u56fe\u77e9\u9635\u90e8\u5206\uff08<code>m30</code>\u3001<code>m31</code>\u548c<code>m32</code>\u5206\u91cf\uff09\u8bbe\u7f6e\u4e3a0\u6765\u5b9e\u73b0\u3002\u60a8\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u60a8\u53ef\u4ee5\u5b8c\u5168\u907f\u514d\u4f7f\u7528\u89c6\u56fe\u77e9\u9635\uff0c\u56e0\u4e3a\u5929\u7a7a\u76d2\u5fc5\u987b\u56fa\u5b9a\u5728\u539f\u70b9\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u4f1a\u770b\u5230\u5929\u7a7a\u76d2\u4e0d\u4f1a\u968f\u76f8\u673a\u65cb\u8f6c\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u6211\u4eec\u9700\u8981\u5b83\u65cb\u8f6c\u4f46\u4e0d\u5e73\u79fb\u3002\u8981\u6e32\u67d3\u5929\u7a7a\u76d2\uff0c\u6211\u4eec\u53ea\u9700\u8bbe\u7f6e\u7edf\u4e00\u53d8\u91cf\u5e76\u6e32\u67d3\u4e0e\u5929\u7a7a\u76d2\u5173\u8054\u7684\u7acb\u65b9\u4f53\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a <code>cleanup</code> \u65b9\u6cd5\u6765\u6b63\u786e\u91ca\u653e\u8d44\u6e90\u3002</p> <pre><code>public class SkyBoxRender {\n    ...\n    public void cleanup() {\n        shaderProgram.cleanup();\n    }\n    ...\n}\n</code></pre> <p>\u5728<code>Render</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u4f8b\u5316<code>SkyBoxRender</code>\u7c7b\u5e76\u8c03\u7528\u6e32\u67d3\u65b9\u6cd5\uff1a</p> <pre><code>public class Render {\n    ...\n    private SkyBoxRender skyBoxRender;\n    ...\n\n    public Render(Window window) {\n        ...\n        skyBoxRender = new SkyBoxRender();\n    }\n\n    public void render(Window window, Scene scene) {\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n        glViewport(0, 0, window.getWidth(), window.getHeight());\n\n        skyBoxRender.render(scene);\n        sceneRender.render(scene);\n        guiRender.render(scene);\n    }\n    ...\n}\n</code></pre> <p>\u60a8\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u9996\u5148\u6e32\u67d3\u5929\u7a7a\u76d2\u3002\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u573a\u666f\u4e2d\u6709\u5e26\u6709\u900f\u660e\u5ea6\u76843D\u6a21\u578b\uff0c\u6211\u4eec\u5e0c\u671b\u5b83\u4eec\u4e0e\u5929\u7a7a\u76d2\uff08\u800c\u4e0d\u662f\u9ed1\u8272\u80cc\u666f\uff09\u6df7\u5408\u3002</p> <p>\u6700\u540e\uff0c\u5728<code>Main</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u5728\u573a\u666f\u4e2d\u8bbe\u7f6e\u5929\u7a7a\u76d2\uff0c\u5e76\u521b\u5efa\u4e00\u7ec4\u74e6\u7247\u4ee5\u7ed9\u4eba\u4e00\u79cd\u65e0\u9650\u5730\u5f62\u7684\u9519\u89c9\u3002\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u5757\u74e6\u7247\uff0c\u5b83\u4eec\u968f\u76f8\u673a\u4f4d\u7f6e\u79fb\u52a8\uff0c\u4ee5\u4fbf\u59cb\u7ec8\u663e\u793a\u3002</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    private static final int NUM_CHUNKS = 4;\n\n    private Entity[][] terrainEntities;\n\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-12\", new Window.WindowOptions(), main);\n        ...\n    }\n    ...\n\n    @Override\n    public void init(Window window, Scene scene, Render render) {\n        String quadModelId = \"quad-model\";\n        Model quadModel = ModelLoader.loadModel(\"quad-model\", \"resources/models/quad/quad.obj\",\n                scene.getTextureCache());\n        scene.addModel(quadModel);\n\n        int numRows = NUM_CHUNKS * 2 + 1;\n        int numCols = numRows;\n        terrainEntities = new Entity[numRows][numCols];\n        for (int j = 0; j &lt; numRows; j++) {\n            for (int i = 0; i &lt; numCols; i++) {\n                Entity entity = new Entity(\"TERRAIN_\" + j + \"_\" + i, quadModelId);\n                terrainEntities[j][i] = entity;\n                scene.addEntity(entity);\n            }\n        }\n\n        SceneLights sceneLights = new SceneLights();\n        sceneLights.getAmbientLight().setIntensity(0.2f);\n        scene.setSceneLights(sceneLights);\n\n        SkyBox skyBox = new SkyBox(\"resources/models/skybox/skybox.obj\", scene.getTextureCache());\n        skyBox.getSkyBoxEntity().setScale(50);\n        scene.setSkyBox(skyBox);\n\n        scene.getCamera().moveUp(0.1f);\n\n        updateTerrain(scene);\n    }\n\n    @Override\n    public void input(Window window, Scene scene, long diffTimeMillis, boolean inputConsumed) {\n        float move = diffTimeMillis * MOVEMENT_SPEED;\n        Camera camera = scene.getCamera();\n        if (window.isKeyPressed(GLFW_KEY_W)) {\n            camera.moveForward(move);\n        } else if (window.isKeyPressed(GLFW_KEY_S)) {\n            camera.moveBackwards(move);\n        }\n        if (window.isKeyPressed(GLFW_KEY_A)) {\n            camera.moveLeft(move);\n        } else if (window.isKeyPressed(GLFW_KEY_D)) {\n            camera.moveRight(move);\n        }\n\n        MouseInput mouseInput = window.getMouseInput();\n        if (mouseInput.isRightButtonPressed()) {\n            Vector2f displVec = mouseInput.getDisplVec();\n            camera.addRotation((float) Math.toRadians(-displVec.x * MOUSE_SENSITIVITY), (float) Math.toRadians(-displVec.y * MOUSE_SENSITIVITY));\n        }\n    }\n\n    @Override\n    public void update(Window window, Scene scene, long diffTimeMillis) {\n        updateTerrain(scene);\n    }\n\n    public void updateTerrain(Scene scene) {\n        int cellSize = 10;\n        Camera camera = scene.getCamera();\n        Vector3f cameraPos = camera.getPosition();\n        int cellCol = (int) (cameraPos.x / cellSize);\n        int cellRow = (int) (cameraPos.z / cellSize);\n\n        int numRows = NUM_CHUNKS * 2 + 1;\n        int numCols = numRows;\n        int zOffset = -NUM_CHUNKS;\n        float scale = cellSize / 2.0f;\n        for (int j = 0; j &lt; numRows; j++) {\n            int xOffset = -NUM_CHUNKS;\n            for (int i = 0; i &lt; numCols; i++) {\n                Entity entity = terrainEntities[j][i];\n                entity.setScale(scale);\n                entity.setPosition((cellCol + xOffset) * 2.0f, 0, (cellRow + zOffset) * 2.0f);\n                entity.getModelMatrix().identity().scale(scale).translate(entity.getPosition());\n                xOffset++;\n            }\n            zOffset++;\n        }\n    }\n}\n</code></pre> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"13-fog/","title":"\u7b2c13\u7ae0 - \u96fe\uff08Fog\uff09","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u56de\u987e\u5982\u4f55\u5728\u6211\u4eec\u7684\u6e38\u620f\u5f15\u64ce\u4e2d\u521b\u5efa\u96fe\u6548\u679c\u3002\u901a\u8fc7\u8fd9\u79cd\u6548\u679c\uff0c\u6211\u4eec\u5c06\u6a21\u62df\u8fdc\u5904\u7269\u4f53\u5982\u4f55\u53d8\u6697\u5e76\u4f3c\u4e4e\u6d88\u5931\u5728\u6d53\u96fe\u4e2d\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"13-fog/#_1","title":"\u6982\u5ff5","text":"<p>\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u68c0\u67e5\u5b9a\u4e49\u96fe\u7684\u5c5e\u6027\u3002\u7b2c\u4e00\u4e2a\u662f\u96fe\u7684\u989c\u8272\u3002\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u96fe\u662f\u7070\u8272\u7684\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u6548\u679c\u6765\u6a21\u62df\u88ab\u4e0d\u540c\u989c\u8272\u96fe\u4fb5\u88ad\u7684\u5e7f\u9614\u533a\u57df\u3002\u5c5e\u6027\u662f\u96fe\u7684\u5bc6\u5ea6\u3002</p> <p>\u56e0\u6b64\uff0c\u4e3a\u4e86\u5e94\u7528\u96fe\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u968f\u77403D\u573a\u666f\u5bf9\u8c61\u79bb\u76f8\u673a\u8d8a\u6765\u8d8a\u8fdc\uff0c\u5c06\u5176\u6de1\u5165\u96fe\u7684\u989c\u8272\u3002\u9760\u8fd1\u76f8\u673a\u7684\u5bf9\u8c61\u4e0d\u4f1a\u53d7\u5230\u96fe\u7684\u5f71\u54cd\uff0c\u4f46\u8fdc\u5904\u7684\u5bf9\u8c61\u5c06\u65e0\u6cd5\u533a\u5206\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u80fd\u591f\u8ba1\u7b97\u4e00\u4e2a\u56e0\u5b50\uff0c\u8be5\u56e0\u5b50\u53ef\u7528\u4e8e\u6df7\u5408\u96fe\u989c\u8272\u548c\u6bcf\u4e2a\u7247\u6bb5\u989c\u8272\uff0c\u4ee5\u6a21\u62df\u8be5\u6548\u679c\u3002\u8be5\u56e0\u5b50\u9700\u8981\u53d6\u51b3\u4e8e\u5230\u76f8\u673a\u7684\u8ddd\u79bb\u3002</p> <p>\u6211\u4eec\u5c06\u8be5\u56e0\u5b50\u79f0\u4e3a\\(fogFactor\\)\uff0c\u5e76\u5c06\u5176\u8303\u56f4\u8bbe\u7f6e\u4e3a0\u52301\u3002\u5f53\\(fogFactor\\)\u4e3a1\u65f6\uff0c\u8868\u793a\u5bf9\u8c61\u4e0d\u4f1a\u53d7\u5230\u96fe\u7684\u5f71\u54cd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u662f\u4e00\u4e2a\u9644\u8fd1\u7684\u5bf9\u8c61\u3002\u5f53\\(fogFactor\\)\u53d6\u503c\u4e3a0\u65f6\uff0c\u8868\u793a\u5bf9\u8c61\u5c06\u5b8c\u5168\u9690\u85cf\u5728\u96fe\u4e2d\u3002</p> <p>\u56e0\u6b64\uff0c\u8ba1\u7b97\u96fe\u989c\u8272\u6240\u9700\u7684\u65b9\u7a0b\u662f\uff1a</p> \\[finalColor = (1 - fogFactor) \\cdot fogColor + fogFactor \\cdot framentColor\\] <ul> <li>\\(finalColor\\) \u662f\u5e94\u7528\u96fe\u6548\u679c\u540e\u4ea7\u751f\u7684\u989c\u8272\u3002</li> <li>\\(fogFactor\\) \u662f\u63a7\u5236\u96fe\u989c\u8272\u548c\u7247\u6bb5\u989c\u8272\u5982\u4f55\u6df7\u5408\u7684\u53c2\u6570\u3002\u5b83\u57fa\u672c\u4e0a\u63a7\u5236\u7740\u5bf9\u8c61\u7684\u53ef\u89c1\u6027\u3002</li> <li>\\(fogColor\\) \u662f\u96fe\u7684\u989c\u8272\u3002</li> <li>\\(fragmentColor\\) \u662f\u672a\u5e94\u7528\u4efb\u4f55\u96fe\u6548\u679c\u7684\u7247\u6bb5\u989c\u8272\u3002</li> </ul> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u6765\u6839\u636e\u8ddd\u79bb\u8ba1\u7b97\\(fogFactor\\)\u3002\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u7b2c\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u662f\u4f7f\u7528\u7ebf\u6027\u6a21\u578b\u3002\u8fd9\u662f\u4e00\u4e2a\u6a21\u578b\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u8ddd\u79bb\uff0c\u4ee5\u7ebf\u6027\u65b9\u5f0f\u6539\u53d8\\(fogFactor\\)\u7684\u503c\u3002</p> <p>\u7ebf\u6027\u6a21\u578b\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u53c2\u6570\u5b9a\u4e49\uff1a</p> <ul> <li>\\(fogStart\\)\uff1a\u5f00\u59cb\u5e94\u7528\u96fe\u6548\u679c\u7684\u8ddd\u79bb\u3002</li> <li>\\(fogFinish\\)\uff1a\u96fe\u6548\u679c\u8fbe\u5230\u6700\u5927\u503c\u7684\u8ddd\u79bb\u3002</li> <li>\\(distance\\)\uff1a\u5230\u76f8\u673a\u7684\u8ddd\u79bb\u3002</li> </ul> <p>\u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\uff0c\u8981\u5e94\u7528\u7684\u65b9\u7a0b\u662f\uff1a</p> \\[\\displaystyle fogFactor = \\frac{(fogFinish - distance)}{(fogFinish - fogStart)}\\] <p>\u5bf9\u4e8e\u8ddd\u79bb\u5c0f\u4e8e\\(fogStart\\)\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u53ea\u9700\u5c06\\(fogFactor\\)\u8bbe\u7f6e\u4e3a\\(1\\)\u3002\u4e0b\u56fe\u663e\u793a\u4e86\\(fogFactor\\)\u968f\u8ddd\u79bb\u7684\u53d8\u5316\u3002</p> <p></p> <p>\u7ebf\u6027\u6a21\u578b\u6613\u4e8e\u8ba1\u7b97\uff0c\u4f46\u4e0d\u591f\u771f\u5b9e\uff0c\u5e76\u4e14\u6ca1\u6709\u8003\u8651\u96fe\u7684\u5bc6\u5ea6\u3002\u5b9e\u9645\u4e0a\uff0c\u96fe\u503e\u5411\u4e8e\u4ee5\u66f4\u5e73\u6ed1\u7684\u65b9\u5f0f\u589e\u957f\u3002\u56e0\u6b64\uff0c\u4e0b\u4e00\u4e2a\u5408\u9002\u7684\u6a21\u578b\u662f\u6307\u6570\u6a21\u578b\u3002\u8be5\u6a21\u578b\u7684\u65b9\u7a0b\u5982\u4e0b\uff1a</p> \\[\\displaystyle fogFactor = e^{-(distance \\cdot fogDensity)^{exponent}} = \\frac{1}{e^{(distance \\cdot fogDensity)^{exponent}}}\\] <p>\u5f15\u5165\u7684\u65b0\u53d8\u91cf\u662f\uff1a</p> <ul> <li>\\(fogDensity\\)\uff0c\u5b83\u6a21\u62df\u96fe\u7684\u539a\u5ea6\u6216\u5bc6\u5ea6\u3002</li> <li>\\(exponent\\)\uff0c\u7528\u4e8e\u63a7\u5236\u96fe\u968f\u8ddd\u79bb\u589e\u52a0\u7684\u901f\u5ea6\u3002</li> </ul> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u4e0a\u8ff0\u65b9\u7a0b\u5728\u4e0d\u540c\u6307\u6570\u503c\uff08\u84dd\u8272\u7ebf\u4e3a\\(2\\)\uff0c\u7ea2\u8272\u7ebf\u4e3a\\(4\\)\uff09\u4e0b\u7684\u4e24\u4e2a\u56fe\u3002</p> <p></p> <p>\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u5c06\u6307\u6570\u503c\u8bbe\u7f6e\u4e3a\u4e8c\u7684\u516c\u5f0f\uff08\u60a8\u53ef\u4ee5\u8f7b\u677e\u4fee\u6539\u793a\u4f8b\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u503c\uff09\u3002</p>"},{"location":"13-fog/#_2","title":"\u5b9e\u73b0","text":"<p>\u73b0\u5728\u7406\u8bba\u5df2\u7ecf\u89e3\u91ca\u6e05\u695a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u4ed8\u8bf8\u5b9e\u8df5\u3002\u6211\u4eec\u5c06\u5728\u573a\u666f\u7247\u6bb5\u7740\u8272\u5668\uff08<code>scene.frag</code>\uff09\u4e2d\u5b9e\u73b0\u8be5\u6548\u679c\uff0c\u56e0\u4e3a\u90a3\u91cc\u6709\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u53d8\u91cf\u3002\u6211\u4eec\u5c06\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u6a21\u62df\u96fe\u5c5e\u6027\u3002</p> <pre><code>...\nstruct Fog\n{\n    int activeFog;\n    vec3 color;\n    float density;\n};\n...\n</code></pre> <p><code>active</code> \u5c5e\u6027\u5c06\u7528\u4e8e\u6fc0\u6d3b\u6216\u505c\u7528\u96fe\u6548\u679c\u3002\u96fe\u5c06\u901a\u8fc7\u53e6\u4e00\u4e2a\u540d\u4e3a <code>fog</code> \u7684\u7edf\u4e00\u53d8\u91cf\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002</p> <pre><code>...\nuniform Fog fog;\n...\n</code></pre> <p>\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <code>calcFog</code> \u7684\u51fd\u6570\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\u3002</p> <pre><code>...\nvec4 calcFog(vec3 pos, vec4 color, Fog fog, vec3 ambientLight, DirLight dirLight) {\n    vec3 fogColor = fog.color * (ambientLight + dirLight.color * dirLight.intensity);\n    float distance = length(pos);\n    float fogFactor = 1.0 / exp((distance * fog.density) * (distance * fog.density));\n    fogFactor = clamp(fogFactor, 0.0, 1.0);\n\n    vec3 resultColor = mix(fogColor, color.xyz, fogFactor);\n    return vec4(resultColor.xyz, color.w);\n}\n...\n</code></pre> <p>\u6b63\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u5230\u9876\u70b9\u7684\u8ddd\u79bb\u3002\u9876\u70b9\u5750\u6807\u5728 <code>pos</code> \u53d8\u91cf\u4e2d\u5b9a\u4e49\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u957f\u5ea6\u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528\u6307\u6570\u6a21\u578b\u8ba1\u7b97\u96fe\u56e0\u5b50\uff0c\u6307\u6570\u4e3a\u4e8c\uff08\u76f8\u5f53\u4e8e\u4e58\u4ee5\u4e24\u6b21\uff09\u3002\u6211\u4eec\u5c06 <code>fogFactor</code> \u9650\u5236\u5728 \\(0\\) \u5230 \\(1\\) \u7684\u8303\u56f4\u5185\uff0c\u5e76\u4f7f\u7528 <code>mix</code> \u51fd\u6570\u3002\u5728 GLSL \u4e2d\uff0c<code>mix</code> \u51fd\u6570\u7528\u4e8e\u6df7\u5408\u96fe\u989c\u8272\u548c\u7247\u6bb5\u989c\u8272\uff08\u7531\u53d8\u91cf <code>color</code> \u5b9a\u4e49\uff09\u3002\u5b83\u7b49\u6548\u4e8e\u5e94\u7528\u4ee5\u4e0b\u65b9\u7a0b\uff1a</p> \\[resultColor = (1 - fogFactor) \\cdot fog.color + fogFactor \\cdot color\\] <p>\u6211\u4eec\u8fd8\u4fdd\u7559\u4e86\u539f\u59cb\u989c\u8272\u7684 w \u5206\u91cf\uff0c\u5373\u900f\u660e\u5ea6\u3002\u6211\u4eec\u4e0d\u5e0c\u671b\u8fd9\u4e2a\u5206\u91cf\u53d7\u5230\u5f71\u54cd\uff0c\u56e0\u4e3a\u7247\u6bb5\u5e94\u8be5\u4fdd\u6301\u5176\u900f\u660e\u5ea6\u7ea7\u522b\u3002</p> <p>\u5728\u7247\u6bb5\u7740\u8272\u5668\u7684\u672b\u5c3e\uff0c\u5e94\u7528\u6240\u6709\u5149\u7167\u6548\u679c\u540e\uff0c\u5982\u679c\u96fe\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u8fd4\u56de\u503c\u8d4b\u7ed9\u7247\u6bb5\u989c\u8272\u3002</p> <pre><code>...\n    if (fog.activeFog == 1) {\n        fragColor = calcFog(outPosition, fragColor, fog, ambientLight.color, dirLight);\n    }\n...\n</code></pre> <p>\u6211\u4eec\u8fd8\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <code>Fog</code> \u7684\u65b0\u7c7b\uff0c\u5b83\u662f\u53e6\u4e00\u4e2a POJO\uff08Plain Old Java Object\uff09\uff0c\u5305\u542b\u96fe\u5c5e\u6027\u3002</p> <pre><code>package org.lwjglb.engine.scene;\n\nimport org.joml.Vector3f;\n\npublic class Fog {\n\n    private boolean active;\n    private Vector3f color;\n    private float density;\n\n    public Fog() {\n        active = false;\n        color = new Vector3f();\n    }\n\n    public Fog(boolean active, Vector3f color, float density) {\n        this.color = color;\n        this.density = density;\n        this.active = active;\n    }\n\n    public Vector3f getColor() {\n        return color;\n    }\n\n    public float getDensity() {\n        return density;\n    }\n\n    public boolean isActive() {\n        return active;\n    }\n\n    public void setActive(boolean active) {\n        this.active = active;\n    }\n\n    public void setColor(Vector3f color) {\n        this.color = color;\n    }\n\n    public void setDensity(float density) {\n        this.density = density;\n    }\n}\n</code></pre> <p>\u6211\u4eec\u5c06\u5728 <code>Scene</code> \u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a <code>Fog</code> \u5b9e\u4f8b\u3002</p> <pre><code>public class Scene {\n    ...\n    private Fog fog;\n    ...\n    public Scene(int width, int height) {\n        ...\n        fog = new Fog();\n    }\n    ...\n    public Fog getFog() {\n        return fog;\n    }\n    ...\n    public void setFog(Fog fog) {\n        this.fog = fog;\n    }\n    ...    \n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u5728 <code>SceneRender</code> \u7c7b\u4e2d\u8bbe\u7f6e\u6240\u6709\u8fd9\u4e9b\u5143\u7d20\u3002\u6211\u4eec\u9996\u5148\u4e3a <code>Fog</code> \u7ed3\u6784\u4f53\u8bbe\u7f6e\u7edf\u4e00\u53d8\u91cf\u503c\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    private void createUniforms() {\n        ...\n        uniformsMap.createUniform(\"fog.activeFog\");\n        uniformsMap.createUniform(\"fog.color\");\n        uniformsMap.createUniform(\"fog.density\");\n    }\n    ...\n}\n</code></pre> <p>\u5728 <code>render</code> \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5148\u542f\u7528\u6df7\u5408\uff0c\u7136\u540e\u586b\u5145 <code>Fog</code> \u7edf\u4e00\u53d8\u91cf\uff1a</p> <pre><code>public class SceneRender {\n    ...\n     public void render(Scene scene) {\n        glEnable(GL_BLEND);\n        glBlendEquation(GL_FUNC_ADD);\n        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\n        shaderProgram.bind();\n        ...\n        Fog fog = scene.getFog();\n        uniformsMap.setUniform(\"fog.activeFog\", fog.isActive() ? 1 : 0);\n        uniformsMap.setUniform(\"fog.color\", fog.getColor());\n        uniformsMap.setUniform(\"fog.density\", fog.getDensity());\n        ...\n        shaderProgram.unbind();\n        glDisable(GL_BLEND);\n    }\n    ...\n}\n</code></pre> <p>\u6700\u540e\uff0c\u6211\u4eec\u5c06\u4fee\u6539 <code>Main</code> \u7c7b\u6765\u8bbe\u7f6e\u96fe\uff0c\u5e76\u53ea\u4f7f\u7528\u4e00\u4e2a\u56db\u8fb9\u5f62\u4f5c\u4e3a\u5730\u5f62\uff0c\u5e76\u8fdb\u884c\u7f29\u653e\u4ee5\u663e\u793a\u96fe\u7684\u6548\u679c\u3002</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-13\", new Window.WindowOptions(), main);\n        ...\n    }\n    ...\n    public void init(Window window, Scene scene, Render render) {\n        String terrainModelId = \"terrain\";\n        Model terrainModel = ModelLoader.loadModel(terrainModelId, \"resources/models/terrain/terrain.obj\",\n                scene.getTextureCache());\n        scene.addModel(terrainModel);\n        Entity terrainEntity = new Entity(\"terrainEntity\", terrainModelId);\n        terrainEntity.setScale(100.0f);\n        terrainEntity.updateModelMatrix();\n        scene.addEntity(terrainEntity);\n\n        SceneLights sceneLights = new SceneLights();\n        AmbientLight ambientLight = sceneLights.getAmbientLight();\n        ambientLight.setIntensity(0.5f);\n        ambientLight.setColor(0.3f, 0.3f, 0.3f);\n\n        DirLight dirLight = sceneLights.getDirLight();\n        dirLight.setPosition(0, 1, 0);\n        dirLight.setIntensity(1.0f);\n        scene.setSceneLights(sceneLights);\n\n        SkyBox skyBox = new SkyBox(\"resources/models/skybox/skybox.obj\", scene.getTextureCache());\n        skyBox.getSkyBoxEntity().setScale(50);\n        scene.setSkyBox(skyBox);\n\n        scene.setFog(new Fog(true, new Vector3f(0.5f, 0.5f, 0.5f), 0.95f));\n\n        scene.getCamera().moveUp(0.1f);\n    }\n    ...\n    public void update(Window window, Scene scene, long diffTimeMillis) {\n        // Nothing to be done here\n    }\n}\n</code></pre> <p>\u9700\u8981\u5f3a\u8c03\u7684\u4e00\u70b9\u662f\uff0c\u6211\u4eec\u5fc5\u987b\u660e\u667a\u5730\u9009\u62e9\u96fe\u7684\u989c\u8272\u3002\u5f53\u6211\u4eec\u6ca1\u6709\u5929\u7a7a\u76d2\u800c\u53ea\u6709\u56fa\u5b9a\u989c\u8272\u80cc\u666f\u65f6\uff0c\u8fd9\u4e00\u70b9\u5c24\u4e3a\u91cd\u8981\u3002\u6211\u4eec\u5e94\u8be5\u5c06\u96fe\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u4e0e\u6e05\u9664\u989c\u8272\u76f8\u540c\u3002\u5982\u679c\u60a8\u53d6\u6d88\u6ce8\u91ca\u6e32\u67d3\u5929\u7a7a\u76d2\uff08Sky Box\uff09\u7684\u4ee3\u7801\u5e76\u91cd\u65b0\u8fd0\u884c\u793a\u4f8b\uff0c\u60a8\u5c06\u5f97\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u5185\u5bb9\u3002</p> <p>\u60a8\u5e94\u8be5\u80fd\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u753b\u9762\uff1a</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"14-normal-mapping/","title":"\u7b2c14\u7ae0 - \u6cd5\u7ebf\u8d34\u56fe\uff08Normal Mapping\uff09","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u89e3\u91ca\u4e00\u79cd\u80fd\u591f\u663e\u8457\u6539\u5584\u6211\u4eec3D\u6a21\u578b\u5916\u89c2\u7684\u6280\u672f\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u80fd\u591f\u5c06\u7eb9\u7406\u5e94\u7528\u4e8e\u590d\u6742\u76843D\u6a21\u578b\uff0c\u4f46\u8ddd\u79bb\u771f\u5b9e\u7269\u4f53\u7684\u5916\u89c2\u8fd8\u6709\u5f88\u8fdc\u7684\u8ddd\u79bb\u3002\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u8868\u9762\u5e76\u975e\u5b8c\u5168\u5e73\u5766\uff0c\u5b83\u4eec\u5b58\u5728\u6211\u4eec\u5f53\u524d3D\u6a21\u578b\u6240\u6ca1\u6709\u7684\u7f3a\u9677\u3002</p> <p>\u4e3a\u4e86\u6e32\u67d3\u66f4\u771f\u5b9e\u7684\u573a\u666f\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\uff08Normal Mapping\uff09\u3002\u5982\u679c\u60a8\u89c2\u5bdf\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5e73\u9762\uff0c\u60a8\u4f1a\u53d1\u73b0\u5373\u4f7f\u5728\u8fdc\u5904\uff0c\u8fd9\u4e9b\u7f3a\u9677\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5149\u7ebf\u5728\u5176\u4e0a\u7684\u53cd\u5c04\u65b9\u5f0f\u770b\u5230\u3002\u57283D\u573a\u666f\u4e2d\uff0c\u5e73\u9762\u5c06\u6ca1\u6709\u7f3a\u9677\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5176\u5e94\u7528\u7eb9\u7406\uff0c\u4f46\u6211\u4eec\u4e0d\u4f1a\u6539\u53d8\u5149\u7ebf\u5728\u5176\u4e0a\u7684\u53cd\u5c04\u65b9\u5f0f\u3002\u8fd9\u5c31\u662f\u533a\u522b\u6240\u5728\u3002</p> <p>\u6211\u4eec\u53ef\u80fd\u4f1a\u8003\u8651\u901a\u8fc7\u589e\u52a0\u4e09\u89d2\u5f62\u6570\u91cf\u6765\u589e\u52a0\u6a21\u578b\u7684\u7ec6\u8282\u5e76\u53cd\u6620\u8fd9\u4e9b\u7f3a\u9677\uff0c\u4f46\u8fd9\u4f1a\u964d\u4f4e\u6027\u80fd\u3002\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u6539\u53d8\u5149\u7ebf\u5728\u8868\u9762\u4e0a\u7684\u53cd\u5c04\u65b9\u5f0f\u4ee5\u589e\u52a0\u771f\u5b9e\u611f\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u6cd5\u7ebf\u8d34\u56fe\u6280\u672f\u5b9e\u73b0\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"14-normal-mapping/#_1","title":"\u6982\u5ff5","text":"<p>\u8ba9\u6211\u4eec\u56de\u5230\u5e73\u9762\u793a\u4f8b\uff0c\u4e00\u4e2a\u5e73\u9762\u53ef\u4ee5\u7531\u5f62\u6210\u56db\u8fb9\u5f62\u7684\u4e24\u4e2a\u4e09\u89d2\u5f62\u5b9a\u4e49\u3002\u5982\u679c\u60a8\u8fd8\u8bb0\u5f97\u5149\u7167\u7ae0\u8282\uff0c\u6a21\u62df\u5149\u7ebf\u5982\u4f55\u53cd\u5c04\u7684\u5143\u7d20\u662f\u8868\u9762\u6cd5\u7ebf\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6574\u4e2a\u8868\u9762\u53ea\u6709\u4e00\u4e2a\u6cd5\u7ebf\uff0c\u8868\u9762\u4e0a\u7684\u6bcf\u4e2a\u7247\u6bb5\u5728\u8ba1\u7b97\u5149\u7ebf\u5982\u4f55\u5f71\u54cd\u5b83\u4eec\u65f6\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u6cd5\u7ebf\u3002\u8fd9\u5728\u4e0b\u56fe\u4e2d\u663e\u793a\u3002</p> <p></p> <p>\u5982\u679c\u6211\u4eec\u80fd\u6539\u53d8\u8868\u9762\u4e0a\u6bcf\u4e2a\u7247\u6bb5\u7684\u6cd5\u7ebf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6a21\u62df\u8868\u9762\u7f3a\u9677\uff0c\u4ee5\u66f4\u771f\u5b9e\u7684\u65b9\u5f0f\u6e32\u67d3\u5b83\u4eec\u3002\u8fd9\u5728\u4e0b\u56fe\u4e2d\u663e\u793a\u3002</p> <p></p> <p>\u6211\u4eec\u5c06\u901a\u8fc7\u52a0\u8f7d\u53e6\u4e00\u4e2a\u5b58\u50a8\u8868\u9762\u6cd5\u7ebf\u7684\u7eb9\u7406\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u6cd5\u7ebf\u7eb9\u7406\u7684\u6bcf\u4e2a\u50cf\u7d20\u5c06\u5305\u542b\u5b58\u50a8\u4e3a RGB \u503c\u7684\u6cd5\u7ebf\u7684 \\(x\\)\u3001y \u548c \\(z\\) \u5750\u6807\u503c\u3002</p> <p>\u8ba9\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u7eb9\u7406\u6765\u7ed8\u5236\u4e00\u4e2a\u56db\u8fb9\u5f62\u3002</p> <p></p> <p>\u4e0a\u9762\u56fe\u50cf\u7684\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u793a\u4f8b\u53ef\u80fd\u5982\u4e0b\u6240\u793a\u3002</p> <p></p> <p>\u6b63\u5982\u60a8\u6240\u89c1\uff0c\u8fd9\u5c31\u50cf\u6211\u4eec\u5bf9\u539f\u59cb\u7eb9\u7406\u5e94\u7528\u4e86\u989c\u8272\u8f6c\u6362\u3002\u6bcf\u4e2a\u50cf\u7d20\u4f7f\u7528\u989c\u8272\u5206\u91cf\u5b58\u50a8\u6cd5\u7ebf\u4fe1\u606f\u3002\u67e5\u770b\u6cd5\u7ebf\u8d34\u56fe\u65f6\u901a\u5e38\u4f1a\u770b\u5230\u7684\u4e00\u70b9\u662f\uff0c\u4e3b\u5bfc\u989c\u8272\u503e\u5411\u4e8e\u84dd\u8272\u3002\u8fd9\u662f\u56e0\u4e3a\u6cd5\u7ebf\u6307\u5411\u6b63 \\(z\\) \u8f74\u3002\u5bf9\u4e8e\u5e73\u9762\uff0c\\(z\\) \u5206\u91cf\u901a\u5e38\u6bd4 \\(x\\) \u548c \\(y\\) \u5206\u91cf\u7684\u503c\u9ad8\u5f97\u591a\uff0c\u56e0\u4e3a\u6cd5\u7ebf\u6307\u5411\u8868\u9762\u5916\u90e8\u3002\u7531\u4e8e \\(x\\)\u3001\\(y\\)\u3001\\(z\\) \u5750\u6807\u6620\u5c04\u5230 RGB\uff0c\u84dd\u8272\u5206\u91cf\u7684\u503c\u4e5f\u4f1a\u66f4\u9ad8\u3002</p> <p>\u56e0\u6b64\uff0c\u8981\u4f7f\u7528\u6cd5\u7ebf\u8d34\u56fe\u6e32\u67d3\u5bf9\u8c61\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u7eb9\u7406\uff0c\u5e76\u5728\u6e32\u67d3\u7247\u6bb5\u65f6\u4f7f\u7528\u5b83\u6765\u83b7\u53d6\u9002\u5f53\u7684\u6cd5\u7ebf\u503c\u3002</p>"},{"location":"14-normal-mapping/#_2","title":"\u5b9e\u73b0","text":"<p>\u901a\u5e38\uff0c\u6cd5\u7ebf\u8d34\u56fe\u4e0d\u662f\u4ee5\u90a3\u79cd\u65b9\u5f0f\u5b9a\u4e49\u7684\uff0c\u5b83\u4eec\u901a\u5e38\u5b9a\u4e49\u5728\u6240\u8c13\u7684\u5207\u7ebf\u7a7a\u95f4\u4e2d\u3002\u5207\u7ebf\u7a7a\u95f4\u662f\u6a21\u578b\u6bcf\u4e2a\u4e09\u89d2\u5f62\u7684\u5c40\u90e8\u5750\u6807\u7a7a\u95f4\uff08coordinate space\uff09\u3002\u5728\u8be5\u5750\u6807\u7a7a\u95f4\u4e2d\uff0c\\(z\\) \u8f74\u59cb\u7ec8\u6307\u5411\u8868\u9762\u5916\u90e8\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6cd5\u7ebf\u8d34\u56fe\u901a\u5e38\u5448\u84dd\u8272\u7684\u539f\u56e0\uff0c\u5373\u4f7f\u5bf9\u4e8e\u5177\u6709\u76f8\u5bf9\u9762\u7684\u590d\u6742\u6a21\u578b\u4e5f\u662f\u5982\u6b64\u3002\u4e3a\u4e86\u5904\u7406\u5207\u7ebf\u7a7a\u95f4\uff0c\u6211\u4eec\u9700\u8981\u6cd5\u7ebf\u3001\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u3002\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u6cd5\u7ebf\u5411\u91cf\uff0c\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u5411\u91cf\u662f\u5782\u76f4\u4e8e\u6cd5\u7ebf\u7684\u5411\u91cf\u3002\u6211\u4eec\u9700\u8981\u8fd9\u4e9b\u5411\u91cf\u6765\u8ba1\u7b97 <code>TBN</code> \u77e9\u9635\uff0c\u8fd9\u5c06\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684\u6570\u636e\u5230\u6211\u4eec\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u5750\u6807\u7a7a\u95f4\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u67e5\u770b\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u5f88\u68d2\u7684\u6559\u7a0b\u3002</p> <p>\u56e0\u6b64\uff0c\u7b2c\u4e00\u6b65\u662f\u6dfb\u52a0\u5bf9\u6cd5\u7ebf\u8d34\u56fe\u7684\u652f\u6301\uff0c\u52a0\u8f7d <code>ModelLoader</code> \u7c7b\uff0c\u5305\u62ec\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u4fe1\u606f\u3002\u5982\u679c\u60a8\u8fd8\u8bb0\u5f97\uff0c\u5728\u4e3a assimp \u8bbe\u7f6e\u6a21\u578b\u52a0\u8f7d\u6807\u5fd7\u65f6\uff0c\u6211\u4eec\u5305\u542b\u4e86\u8fd9\u4e2a\u6807\u5fd7\uff1a<code>aiProcess_CalcTangentSpace</code>\u3002\u8fd9\u4e2a\u6807\u5fd7\u5141\u8bb8\u81ea\u52a8\u8ba1\u7b97\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u6570\u636e\u3002</p> <p>\u5728 <code>processMaterial</code> \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5c06\u9996\u5148\u67e5\u8be2\u662f\u5426\u5b58\u5728\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u3002\u5982\u679c\u5b58\u5728\uff0c\u6211\u4eec\u5c06\u52a0\u8f7d\u8be5\u7eb9\u7406\u5e76\u5c06\u8be5\u7eb9\u7406\u8def\u5f84\u4e0e\u6750\u8d28\u5173\u8054\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    private static Material processMaterial(AIMaterial aiMaterial, String modelDir, TextureCache textureCache) {\n        ...\n        try (MemoryStack stack = MemoryStack.stackPush()) {\n            ...\n            AIString aiNormalMapPath = AIString.calloc(stack);\n            Assimp.aiGetMaterialTexture(aiMaterial, aiTextureType_NORMALS, 0, aiNormalMapPath, (IntBuffer) null,\n                    null, null, null, null, null);\n            String normalMapPath = aiNormalMapPath.dataString();\n            if (normalMapPath != null &amp;&amp; normalMapPath.length() &gt; 0) {\n                material.setNormalMapPath(modelDir + File.separator + new File(normalMapPath).getName());\n                textureCache.createTexture(material.getNormalMapPath());\n            }\n            return material;\n        }\n    }\n    ...\n}\n</code></pre> <p>\u5728 <code>processMesh</code> \u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u52a0\u8f7d\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u7684\u6570\u636e\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    private static Mesh processMesh(AIMesh aiMesh) {\n        ...\n        float[] tangents = processTangents(aiMesh, normals);\n        float[] bitangents = processBitangents(aiMesh, normals);\n        ...\n        return new Mesh(vertices, normals, tangents, bitangents, textCoords, indices);\n    }\n    ...\n}\n</code></pre> <p><code>processTangents</code> \u548c <code>processBitangents</code> \u65b9\u6cd5\u4e0e\u52a0\u8f7d\u6cd5\u7ebf\u7684\u65b9\u6cd5\u975e\u5e38\u76f8\u4f3c\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    private static float[] processBitangents(AIMesh aiMesh, float[] normals) {\n\n        AIVector3D.Buffer buffer = aiMesh.mBitangents();\n        float[] data = new float[buffer.remaining() * 3];\n        int pos = 0;\n        while (buffer.remaining() &gt; 0) {\n            AIVector3D aiBitangent = buffer.get();\n            data[pos++] = aiBitangent.x();\n            data[pos++] = aiBitangent.y();\n            data[pos++] = aiBitangent.z();\n        }\n\n        // Assimp may not calculate tangents with models that do not have texture coordinates. Just create empty values\n        if (data.length == 0) {\n            data = new float[normals.length];\n        }\n        return data;\n    }\n    ...\n    private static float[] processTangents(AIMesh aiMesh, float[] normals) {\n\n        AIVector3D.Buffer buffer = aiMesh.mTangents();\n        float[] data = new float[buffer.remaining() * 3];\n        int pos = 0;\n        while (buffer.remaining() &gt; 0) {\n            AIVector3D aiTangent = buffer.get();\n            data[pos++] = aiTangent.x();\n            data[pos++] = aiTangent.y();\n            data[pos++] = aiTangent.z();\n        }\n\n        // Assimp may not calculate tangents with models that do not have texture coordinates. Just create empty values\n        if (data.length == 0) {\n            data = new float[normals.length];\n        }\n        return data;\n    }\n    ...\n}\n</code></pre> <p>\u6b63\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539 <code>Mesh</code> \u548c <code>Material</code> \u7c7b\u6765\u4fdd\u5b58\u65b0\u6570\u636e\u3002\u8ba9\u6211\u4eec\u4ece <code>Mesh</code> \u7c7b\u5f00\u59cb\uff1a</p> <pre><code>public class Mesh {\n    ...\n    public Mesh(float[] positions, float[] normals, float[] tangents, float[] bitangents, float[] textCoords, int[] indices) {\n        ...\n        // Tangents VBO\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer tangentsBuffer = MemoryUtil.memCallocFloat(tangents.length);\n        tangentsBuffer.put(0, tangents);\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, tangentsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(2);\n        glVertexAttribPointer(2, 3, GL_FLOAT, false, 0, 0);\n\n        // Bitangents VBO\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer bitangentsBuffer = MemoryUtil.memCallocFloat(bitangents.length);\n        bitangentsBuffer.put(0, bitangents);\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, bitangentsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(3);\n        glVertexAttribPointer(3, 3, GL_FLOAT, false, 0, 0);\n\n        // Texture coordinates VBO\n        ...\n        glEnableVertexAttribArray(4);\n        glVertexAttribPointer(4, 2, GL_FLOAT, false, 0, 0);\n        ...\n        MemoryUtil.memFree(tangentsBuffer);\n        MemoryUtil.memFree(bitangentsBuffer);\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u4e3a\u5207\u7ebf\u548c\u526f\u5207\u7ebf\u6570\u636e\u521b\u5efa\u4e24\u4e2a\u65b0\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08\u5176\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u6cd5\u7ebf\u6570\u636e\uff09\uff0c\u56e0\u6b64\u9700\u8981\u66f4\u65b0\u7eb9\u7406\u5750\u6807\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7684\u4f4d\u7f6e\u3002</p> <p>\u5728 <code>Material</code> \u7c7b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5305\u542b\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u7684\u8def\u5f84\uff1a</p> <pre><code>public class Material {\n    ...\n    private String normalMapPath;\n    ...\n    public String getNormalMapPath() {\n        return normalMapPath;\n    }\n    ...\n    public void setNormalMapPath(String normalMapPath) {\n        this.normalMapPath = normalMapPath;\n    }\n    ...\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u4fee\u6539\u7740\u8272\u5668\uff0c\u4ece\u573a\u666f\u9876\u70b9\u7740\u8272\u5668\uff08<code>scene.vert</code>\uff09\u5f00\u59cb\uff1a</p> <pre><code>#version 330\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 normal;\nlayout (location=2) in vec3 tangent;\nlayout (location=3) in vec3 bitangent;\nlayout (location=4) in vec2 texCoord;\n\nout vec3 outPosition;\nout vec3 outNormal;\nout vec3 outTangent;\nout vec3 outBitangent;\nout vec2 outTextCoord;\n\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 modelMatrix;\n\nvoid main()\n{\n    mat4 modelViewMatrix = viewMatrix * modelMatrix;\n    vec4 mvPosition =  modelViewMatrix * vec4(position, 1.0);\n    gl_Position   = projectionMatrix * mvPosition;\n    outPosition   = mvPosition.xyz;\n    outNormal     = normalize(modelViewMatrix * vec4(normal, 0.0)).xyz;\n    outTangent    = normalize(modelViewMatrix * vec4(tangent, 0)).xyz;\n    outBitangent  = normalize(modelViewMatrix * vec4(bitangent, 0)).xyz;\n    outTextCoord  = texCoord;\n}\n</code></pre> <p>\u6b63\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e0e\u526f\u5207\u7ebf\u548c\u5207\u7ebf\u76f8\u5173\u7684\u65b0\u8f93\u5165\u6570\u636e\u3002\u6211\u4eec\u4ee5\u5904\u7406\u6cd5\u7ebf\u76f8\u540c\u7684\u65b9\u5f0f\u8f6c\u6362\u8fd9\u4e9b\u5143\u7d20\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\uff08<code>scene.frag</code>\uff09\uff1a</p> <pre><code>#version 330\n...\nin vec3 outTangent;\nin vec3 outBitangent;\n...\nstruct Material\n{\n    vec4 ambient;\n    vec4 diffuse;\n    vec4 specular;\n    float reflectance;\n    int hasNormalMap;\n};\n...\nuniform sampler2D normalSampler;\n...\n</code></pre> <p>\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u6765\u81ea\u9876\u70b9\u7740\u8272\u5668\u7684\u65b0\u8f93\u5165\uff0c\u5305\u62ec <code>Material</code> \u7ed3\u6784\u4f53\u7684\u4e00\u4e2a\u9644\u52a0\u5143\u7d20\uff0c\u8be5\u5143\u7d20\u6307\u793a\u662f\u5426\u5b58\u5728\u6cd5\u7ebf\u8d34\u56fe\uff08<code>hasNormalMap</code>\uff09\u3002\u6211\u4eec\u8fd8\u4e3a\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u7edf\u4e00\u53d8\u91cf\uff08<code>normalSampler</code>\uff09\u3002\u4e0b\u4e00\u6b65\u662f\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u6839\u636e\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u66f4\u65b0\u6cd5\u7ebf\uff1a</p> <pre><code>...\n...\nvec3 calcNormal(vec3 normal, vec3 tangent, vec3 bitangent, vec2 textCoords) {\n    mat3 TBN = mat3(tangent, bitangent, normal);\n    vec3 newNormal = texture(normalSampler, textCoords).rgb;\n    newNormal = normalize(newNormal * 2.0 - 1.0);\n    newNormal = normalize(TBN * newNormal);\n    return newNormal;\n}\n\nvoid main() {\n    vec4 text_color = texture(txtSampler, outTextCoord);\n    vec4 ambient = calcAmbient(ambientLight, text_color + material.ambient);\n    vec4 diffuse = text_color + material.diffuse;\n    vec4 specular = text_color + material.specular;\n\n    vec3 normal = outNormal;\n    if (material.hasNormalMap &gt; 0) {\n        normal = calcNormal(outNormal, outTangent, outBitangent, outTextCoord);\n    }\n\n    vec4 diffuseSpecularComp = calcDirLight(diffuse, specular, dirLight, outPosition, normal);\n\n    for (int i=0; i&lt;MAX_POINT_LIGHTS; i++) {\n        if (pointLights[i].intensity &gt; 0) {\n            diffuseSpecularComp += calcPointLight(diffuse, specular, pointLights[i], outPosition, normal);\n        }\n    }\n\n    for (int i=0; i&lt;MAX_SPOT_LIGHTS; i++) {\n        if (spotLights[i].pl.intensity &gt; 0) {\n            diffuseSpecularComp += calcSpotLight(diffuse, specular, spotLights[i], outPosition, normal);\n        }\n    }\n    fragColor = ambient + diffuseSpecularComp;\n\n    if (fog.activeFog == 1) {\n        fragColor = calcFog(outPosition, fragColor, fog, ambientLight.color, dirLight);\n    }\n}\n</code></pre> <p><code>calcNormal</code> \u51fd\u6570\u63a5\u53d7\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <ul> <li>\u9876\u70b9\u6cd5\u7ebf\u3002</li> <li>\u9876\u70b9\u5207\u7ebf\u3002</li> <li>\u9876\u70b9\u526f\u5207\u7ebf\u3002</li> <li>\u7eb9\u7406\u5750\u6807\u3002</li> </ul> <p>\u5728\u8be5\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8ba1\u7b97 TBN \u77e9\u9635\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u4ece\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u4e2d\u83b7\u53d6\u6cd5\u7ebf\u503c\uff0c\u5e76\u4f7f\u7528 TBN \u77e9\u9635\u4ece\u5207\u7ebf\u7a7a\u95f4\u8f6c\u6362\u5230\u89c6\u56fe\u7a7a\u95f4\u3002\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u83b7\u5f97\u7684\u989c\u8272\u662f\u6cd5\u7ebf\u5750\u6807\uff0c\u4f46\u7531\u4e8e\u5b83\u4eec\u5b58\u50a8\u4e3a RGB \u503c\uff0c\u56e0\u6b64\u5b83\u4eec\u5305\u542b\u5728 [0, 1] \u8303\u56f4\u5185\u3002\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a [-1, 1] \u8303\u56f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u4e58\u4ee5\u4e8c\u5e76\u51cf\u53bb 1\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u4ec5\u5728\u6750\u8d28\u5b9a\u4e49\u4e86\u6cd5\u7ebf\u8d34\u56fe\u7eb9\u7406\u65f6\u624d\u4f7f\u7528\u8be5\u51fd\u6570\u3002</p> <p>\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539 <code>SceneRender</code> \u7c7b\u6765\u521b\u5efa\u548c\u4f7f\u7528\u6211\u4eec\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u7684\u65b0\u6cd5\u7ebf\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    private void createUniforms() {\n        ...\n        uniformsMap.createUniform(\"normalSampler\");\n        ...\n        uniformsMap.createUniform(\"material.hasNormalMap\");\n        ...\n    }\n    public void render(Scene scene) {\n        ...\n        uniformsMap.setUniform(\"normalSampler\", 1);\n        ...\n        for (Model model : models) {\n            ...\n            for (Material material : model.getMaterialList()) {\n                ...\n                String normalMapPath = material.getNormalMapPath();\n                boolean hasNormalMapPath = normalMapPath != null;\n                uniformsMap.setUniform(\"material.hasNormalMap\", hasNormalMapPath ? 1 : 0);\n                ...\n                if (hasNormalMapPath) {\n                    Texture normalMapTexture = textureCache.getTexture(normalMapPath);\n                    glActiveTexture(GL_TEXTURE1);\n                    normalMapTexture.bind();\n                }\n                ...\n            }\n        }\n        ...\n    }\n    ...    \n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u66f4\u65b0\u5929\u7a7a\u76d2\u9876\u70b9\u7740\u8272\u5668\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u6cd5\u7ebf\u6570\u636e\u548c\u7eb9\u7406\u5750\u6807\u4e4b\u95f4\u6709\u4e86\u65b0\u7684\u5411\u91cf\uff1a <pre><code>#version 330\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 normal;\nlayout (location=4) in vec2 texCoord;\n...\n</code></pre></p> <p>\u6700\u540e\u4e00\u6b65\u662f\u66f4\u65b0 <code>Main</code> \u7c7b\u6765\u5c55\u793a\u8fd9\u79cd\u6548\u679c\u3002\u6211\u4eec\u5c06\u52a0\u8f7d\u4e24\u4e2a\u56db\u8fb9\u5f62\uff0c\u4e00\u4e2a\u5e26\u6709\u6cd5\u7ebf\u8d34\u56fe\uff0c\u4e00\u4e2a\u4e0d\u5e26\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5de6\u53f3\u7bad\u5934\u63a7\u5236\u5149\u7ebf\u89d2\u5ea6\u4ee5\u663e\u793a\u6548\u679c\u3002</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-14\", new Window.WindowOptions(), main);\n        ...\n    }\n    ...\n    public void init(Window window, Scene scene, Render render) {\n        String wallNoNormalsModelId = \"quad-no-normals-model\";\n        Model quadModelNoNormals = ModelLoader.loadModel(wallNoNormalsModelId, \"resources/models/wall/wall_nonormals.obj\",\n                scene.getTextureCache());\n        scene.addModel(quadModelNoNormals);\n\n        Entity wallLeftEntity = new Entity(\"wallLeftEntity\", wallNoNormalsModelId);\n        wallLeftEntity.setPosition(-3f, 0, 0);\n        wallLeftEntity.setScale(2.0f);\n        wallLeftEntity.updateModelMatrix();\n        scene.addEntity(wallLeftEntity);\n\n        String wallModelId = \"quad-model\";\n        Model quadModel = ModelLoader.loadModel(wallModelId, \"resources/models/wall/wall.obj\",\n                scene.getTextureCache());\n        scene.addModel(quadModel);\n\n        Entity wallRightEntity = new Entity(\"wallRightEntity\", wallModelId);\n        wallRightEntity.setPosition(3f, 0, 0);\n        wallRightEntity.setScale(2.0f);\n        wallRightEntity.updateModelMatrix();\n        scene.addEntity(wallRightEntity);\n\n        SceneLights sceneLights = new SceneLights();\n        sceneLights.getAmbientLight().setIntensity(0.2f);\n        DirLight dirLight = sceneLights.getDirLight();\n        dirLight.setPosition(1, 1, 0);\n        dirLight.setIntensity(1.0f);\n        scene.setSceneLights(sceneLights);\n\n        Camera camera = scene.getCamera();\n        camera.moveUp(5.0f);\n        camera.addRotation((float) Math.toRadians(90), 0);\n\n        lightAngle = -35;\n    }\n    ...\n    public void input(Window window, Scene scene, long diffTimeMillis, boolean inputConsumed) {\n        if (inputConsumed) {\n            return;\n        }\n        float move = diffTimeMillis * MOVEMENT_SPEED;\n        Camera camera = scene.getCamera();\n        if (window.isKeyPressed(GLFW_KEY_W)) {\n            camera.moveForward(move);\n        } else if (window.isKeyPressed(GLFW_KEY_S)) {\n            camera.moveBackwards(move);\n        }\n        if (window.isKeyPressed(GLFW_KEY_A)) {\n            camera.moveLeft(move);\n        } else if (window.isKeyPressed(GLFW_KEY_D)) {\n            camera.moveRight(move);\n        }\n        if (window.isKeyPressed(GLFW_KEY_LEFT)) {\n            lightAngle -= 2.5f;\n            if (lightAngle &lt; -90) {\n                lightAngle = -90;\n            }\n        } else if (window.isKeyPressed(GLFW_KEY_RIGHT)) {\n            lightAngle += 2.5f;\n            if (lightAngle &gt; 90) {\n                lightAngle = 90;\n            }\n        }\n\n        MouseInput mouseInput = window.getMouseInput();\n        if (mouseInput.isRightButtonPressed()) {\n            Vector2f displVec = mouseInput.getDisplVec();\n            camera.addRotation((float) Math.toRadians(-displVec.x * MOUSE_SENSITIVITY), (float) Math.toRadians(-displVec.y * MOUSE_SENSITIVITY));\n        }\n\n        SceneLights sceneLights = scene.getSceneLights();\n        DirLight dirLight = sceneLights.getDirLight();\n        double angRad = Math.toRadians(lightAngle);\n        dirLight.getDirection().x = (float) Math.sin(angRad);\n        dirLight.getDirection().y = (float) Math.cos(angRad);\n    }\n    ...\n}    \n</code></pre> <p>\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u6b63\u5982\u60a8\u6240\u89c1\uff0c\u5e94\u7528\u4e86\u6cd5\u7ebf\u7eb9\u7406\u7684\u56db\u8fb9\u5f62\u7ed9\u4eba\u4e00\u79cd\u4f53\u79ef\u66f4\u5927\u7684\u5370\u8c61\u3002\u5c3d\u7ba1\u5b83\u672c\u8d28\u4e0a\u4e0e\u53e6\u4e00\u4e2a\u56db\u8fb9\u5f62\u4e00\u6837\u662f\u5e73\u9762\uff0c\u4f46\u60a8\u53ef\u4ee5\u770b\u5230\u5149\u7ebf\u662f\u5982\u4f55\u53cd\u5c04\u7684\u3002</p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"15-animations/","title":"\u7b2c15\u7ae0 - \u52a8\u753b\uff08Animation\uff09","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ea\u52a0\u8f7d\u4e86\u9759\u60013D\u6a21\u578b\uff0c\u4f46\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4e3a\u5b83\u4eec\u5236\u4f5c\u52a8\u753b\u3002\u5728\u8003\u8651\u52a8\u753b\u65f6\uff0c\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\u4e3a\u6bcf\u4e2a\u6a21\u578b\u4f4d\u7f6e\u521b\u5efa\u4e0d\u540c\u7684\u7f51\u683c\uff0c\u5c06\u5b83\u4eec\u52a0\u8f7d\u5230GPU\u4e2d\u5e76\u6309\u987a\u5e8f\u7ed8\u5236\u5b83\u4eec\u4ee5\u521b\u5efa\u8fd0\u52a8\u7684\u9519\u89c9\u3002\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u67d0\u4e9b\u6e38\u620f\u6765\u8bf4\u662f\u5b8c\u7f8e\u7684\uff0c\u4f46\u5728\u5185\u5b58\u6d88\u8017\u65b9\u9762\u6548\u7387\u4e0d\u9ad8\u3002\u8fd9\u5c31\u662f\u9aa8\u9abc\u52a8\u753b\u53d1\u6325\u4f5c\u7528\u7684\u5730\u65b9\u3002\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u4f7f\u7528Assimp\u52a0\u8f7d\u8fd9\u4e9b\u6a21\u578b\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"15-animations/#_1","title":"\u6297\u952f\u9f7f\u652f\u6301","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u8fd8\u5c06\u6dfb\u52a0\u5bf9\u6297\u952f\u9f7f\u7684\u652f\u6301\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u6a21\u578b\u4e2d\u952f\u9f7f\u72b6\u7684\u8fb9\u7f18\u3002\u4e3a\u4e86\u6d88\u9664\u8fd9\u4e9b\u6548\u679c\uff0c\u6211\u4eec\u5c06\u5e94\u7528\u6297\u952f\u9f7f\uff0c\u5b83\u57fa\u672c\u4e0a\u4f7f\u7528\u591a\u4e2a\u6837\u672c\u7684\u503c\u6765\u6784\u5efa\u6bcf\u4e2a\u50cf\u7d20\u7684\u6700\u7ec8\u503c\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u56db\u4e2a\u91c7\u6837\u503c\u3002\u6211\u4eec\u9700\u8981\u5728\u56fe\u50cf\u521b\u5efa\u4e4b\u524d\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7a97\u53e3\u63d0\u793a\uff08\u5e76\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3\u9009\u9879\u6765\u63a7\u5236\u5b83\uff09\uff1a</p> <pre><code>public class Window {\n    ...\n    public Window(String title, WindowOptions opts, Callable&lt;Void&gt; resizeFunc) {\n        ...\n        if (opts.antiAliasing) {\n            glfwWindowHint(GLFW_SAMPLES, 4);\n        }\n        glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);\n        glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2);\n        ...\n    }\n    ...\n    public static class WindowOptions {\n        public boolean antiAliasing;\n        ...\n    }\n}\n</code></pre> <p>\u5728<code>Render</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u542f\u7528\u591a\u91cd\u91c7\u6837\uff08\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u79fb\u9664\u9762\u5254\u9664\u4ee5\u6b63\u786e\u6e32\u67d3\u793a\u4f8b\u6a21\u578b\uff09\uff1a</p> <pre><code>public class Render {\n    ...\n    public Render(Window window) {\n        GL.createCapabilities();\n        glEnable(GL_MULTISAMPLE);\n        glEnable(GL_DEPTH_TEST);\n\n        sceneRender = new SceneRender();\n        guiRender = new GuiRender(window);\n        skyBoxRender = new SkyBoxRender();\n    }\n    ...\n}\n</code></pre>"},{"location":"15-animations/#introduction","title":"\u4ecb\u7ecd\uff08Introduction\uff09","text":"<p>\u5728\u9aa8\u9abc\u52a8\u753b\u4e2d\uff0c\u6a21\u578b\u7684\u52a8\u753b\u65b9\u5f0f\u7531\u5176\u5e95\u5c42\u9aa8\u9abc\u5b9a\u4e49\u3002\u9aa8\u9abc\u7531\u79f0\u4e3a\u9aa8\u9abc\u7684\u7279\u6b8a\u5143\u7d20\u7684\u5c42\u6b21\u7ed3\u6784\u5b9a\u4e49\u3002\u8fd9\u4e9b\u9aa8\u9abc\u7531\u5b83\u4eec\u7684\u4f4d\u7f6e\u548c\u65cb\u8f6c\u5b9a\u4e49\u3002\u6211\u4eec\u8fd8\u8bf4\u8fc7\u5b83\u662f\u4e00\u4e2a\u5c42\u6b21\u7ed3\u6784\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u9aa8\u9abc\u7684\u6700\u7ec8\u4f4d\u7f6e\u53d7\u5176\u7236\u9aa8\u9abc\u4f4d\u7f6e\u7684\u5f71\u54cd\u3002\u4f8b\u5982\uff0c\u60f3\u60f3\u624b\u8155\uff1a\u5982\u679c\u89d2\u8272\u79fb\u52a8\u8098\u90e8\uff0c\u624b\u8155\u7684\u4f4d\u7f6e\u4f1a\u6539\u53d8\uff0c\u5982\u679c\u89d2\u8272\u79fb\u52a8\u80a9\u8180\uff0c\u624b\u8155\u7684\u4f4d\u7f6e\u4e5f\u4f1a\u6539\u53d8\u3002</p> <p>\u9aa8\u9abc\u4e0d\u9700\u8981\u4ee3\u8868\u7269\u7406\u9aa8\u9abc\u6216\u5173\u8282\uff1a\u5b83\u4eec\u662f\u5141\u8bb8\u521b\u610f\u4eba\u5458\u5efa\u6a21\u52a8\u753b\u7684\u5de5\u4ef6\u3002\u9664\u4e86\u9aa8\u9abc\u4e4b\u5916\uff0c\u6211\u4eec\u4ecd\u7136\u6709\u9876\u70b9\uff0c\u5373\u5b9a\u4e49\u6784\u62103D\u6a21\u578b\u7684\u4e09\u89d2\u5f62\u7684\u70b9\u3002\u4f46\u5728\u9aa8\u9abc\u52a8\u753b\u4e2d\uff0c\u9876\u70b9\u662f\u6839\u636e\u5b83\u4eec\u76f8\u5173\u7684\u9aa8\u9abc\u7684\u4f4d\u7f6e\u7ed8\u5236\u7684\u3002</p> <p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u67e5\u9605\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u8d44\u6599\uff0c\u4f46\u6211\u627e\u5230\u4e86\u4e24\u4e2a\u63d0\u4f9b\u4e86\u5173\u4e8e\u5982\u4f55\u521b\u5efa\u52a8\u753b\u6a21\u578b\u7684\u975e\u5e38\u597d\u7684\u89e3\u91ca\u7684\u8d44\u6599\u3002\u8fd9\u4e9b\u8d44\u6599\u53ef\u4ee5\u5728\u4ee5\u4e0b\u7f51\u5740\u67e5\u9605\uff1a</p> <ul> <li>http://www.3dgep.com/gpu-skinning-of-md5-models-in-opengl-and-cg/</li> <li>http://ogldev.atspace.co.uk/www/tutorial38/tutorial38.html</li> </ul> <p>\u5982\u679c\u60a8\u4f7f\u7528\u5f53\u524d\u4ee3\u7801\u52a0\u8f7d\u5305\u542b\u52a8\u753b\u7684\u6a21\u578b\uff0c\u60a8\u5c06\u83b7\u5f97\u6240\u8c13\u7684\u7ed1\u5b9a\u59ff\u52bf\u3002\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\uff08\u4f7f\u7528\u524d\u4e00\u7ae0\u7684\u4ee3\u7801\uff09\uff0c\u60a8\u5c06\u80fd\u591f\u5b8c\u7f8e\u5730\u770b\u52303D\u6a21\u578b\u3002\u7ed1\u5b9a\u59ff\u52bf\u5b9a\u4e49\u4e86\u6a21\u578b\u7684\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u3001\u7eb9\u7406\u5750\u6807\uff0c\u5b8c\u5168\u4e0d\u53d7\u52a8\u753b\u5f71\u54cd\u3002\u52a8\u753b\u6a21\u578b\u672c\u8d28\u4e0a\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u9644\u52a0\u4fe1\u606f\uff1a</p> <ul> <li>\u4e00\u4e2a\u6811\u72b6\u7ed3\u6784\uff0c\u7531\u9aa8\u9abc\u7ec4\u6210\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u4ee5\u7ec4\u5408\u53d8\u6362\u7684\u5c42\u6b21\u7ed3\u6784\u3002</li> <li>\u6bcf\u4e2a\u7f51\u683c\uff0c\u9664\u4e86\u5305\u542b\u9876\u70b9\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u7b49\u4fe1\u606f\u5916\uff0c\u8fd8\u5c06\u5305\u542b\u5173\u4e8e\u8be5\u9876\u70b9\u4e0e\u54ea\u4e9b\u9aa8\u9abc\u76f8\u5173\u7684\u4fe1\u606f\uff08\u901a\u8fc7\u4f7f\u7528\u9aa8\u9abc\u7d22\u5f15\uff09\u4ee5\u53ca\u5b83\u4eec\u53d7\u5f71\u54cd\u7684\u7a0b\u5ea6\uff08\u5373\u901a\u8fc7\u4f7f\u7528\u6743\u91cd\u56e0\u5b50\u6765\u8c03\u5236\u6548\u679c\uff09\u3002</li> <li>\u4e00\u7ec4\u52a8\u753b\u5173\u952e\u5e27\uff0c\u5b83\u4eec\u5b9a\u4e49\u4e86\u5e94\u8be5\u5e94\u7528\u4e8e\u6bcf\u4e2a\u9aa8\u9abc\u7684\u7279\u5b9a\u53d8\u6362\uff0c\u5e76\u56e0\u6b64\u5c06\u4fee\u6539\u76f8\u5173\u7684\u9876\u70b9\u3002\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u52a8\u753b\uff0c\u6bcf\u4e2a\u52a8\u753b\u53ef\u80fd\u7531\u591a\u4e2a\u52a8\u753b\u5173\u952e\u5e27\u7ec4\u6210\u3002\u5728\u52a8\u753b\u65f6\uff0c\u6211\u4eec\u904d\u5386\u8fd9\u4e9b\u5173\u952e\u5e27\uff08\u5b83\u4eec\u5b9a\u4e49\u4e86\u6301\u7eed\u65f6\u95f4\uff09\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u63d2\u503c\u3002\u672c\u8d28\u4e0a\uff0c\u5bf9\u4e8e\u7279\u5b9a\u7684\u65f6\u95f4\u77ac\u95f4\uff0c\u6211\u4eec\u6b63\u5728\u5bf9\u6bcf\u4e2a\u9876\u70b9\u5e94\u7528\u4e0e\u76f8\u5173\u9aa8\u9abc\u76f8\u5173\u7684\u53d8\u6362\u3002</li> </ul> <p>\u8ba9\u6211\u4eec\u9996\u5148\u56de\u987e\u4e00\u4e0bAssimp\u5904\u7406\u7684\u5305\u542b\u52a8\u753b\u4fe1\u606f\u7684\u7ed3\u6784\u3002\u6211\u4eec\u5c06\u9996\u5148\u4ece\u9aa8\u9abc\u548c\u6743\u91cd\u4fe1\u606f\u5f00\u59cb\u3002\u5bf9\u4e8e\u6bcf\u4e2a<code>AIMesh</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u548c\u7d22\u5f15\u3002\u7f51\u683c\u8fd8\u5b58\u50a8\u9aa8\u9abc\u5217\u8868\u3002\u6bcf\u4e2a\u9aa8\u9abc\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a</p> <ul> <li>\u4e00\u4e2a\u540d\u79f0\u3002</li> <li>\u4e00\u4e2a\u504f\u79fb\u77e9\u9635\uff1a\u7a0d\u540e\u5c06\u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u9aa8\u9abc\u5e94\u4f7f\u7528\u7684\u6700\u7ec8\u53d8\u6362\u3002</li> </ul> <p>\u9aa8\u9abc\u8fd8\u6307\u5411\u6743\u91cd\u5217\u8868\u3002\u6bcf\u4e2a\u6743\u91cd\u7531\u4ee5\u4e0b\u5c5e\u6027\u5b9a\u4e49\uff1a</p> <ul> <li>\u4e00\u4e2a\u6743\u91cd\u56e0\u5b50\uff0c\u5373\u7528\u4e8e\u8c03\u5236\u4e0e\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u9aa8\u9abc\u53d8\u6362\u5f71\u54cd\u7684\u6570\u5b57\u3002</li> <li>\u4e00\u4e2a\u9876\u70b9\u6807\u8bc6\u7b26\uff0c\u5373\u4e0e\u5f53\u524d\u9aa8\u9abc\u76f8\u5173\u7684\u9876\u70b9\u3002</li> </ul> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u6240\u6709\u8fd9\u4e9b\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p></p> <p>\u56e0\u6b64\uff0c\u6bcf\u4e2a\u9876\u70b9\uff0c\u9664\u4e86\u5305\u542b\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u548c\u7eb9\u7406\u5750\u6807\u5916\uff0c\u73b0\u5728\u8fd8\u5c06\u6709\u4e00\u7ec4\u5f71\u54cd\u8fd9\u4e9b\u9876\u70b9\u7684\u9aa8\u9abc\u7d22\u5f15\uff08\u901a\u5e38\u662f\u56db\u4e2a\u503c\uff09\uff08<code>jointIndices</code>\uff09\u548c\u4e00\u7ec4\u5c06\u8c03\u5236\u8be5\u6548\u679c\u7684\u6743\u91cd\u3002\u6bcf\u4e2a\u9876\u70b9\u5c06\u6839\u636e\u4e0e\u6bcf\u4e2a\u5173\u8282\u76f8\u5173\u7684\u53d8\u6362\u77e9\u9635\u8fdb\u884c\u4fee\u6539\uff0c\u4ee5\u8ba1\u7b97\u6700\u7ec8\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0\u4e0e\u6bcf\u4e2a\u7f51\u683c\u76f8\u5173\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u4ee5\u4fdd\u5b58\u8be5\u4fe1\u606f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>Assimp\u573a\u666f\u5bf9\u8c61\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8282\u70b9\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u6bcf\u4e2a\u8282\u70b9\u7531\u4e00\u4e2a\u540d\u79f0\u548c\u5b50\u8282\u70b9\u5217\u8868\u5b9a\u4e49\u3002\u52a8\u753b\u4f7f\u7528\u8fd9\u4e9b\u8282\u70b9\u6765\u5b9a\u4e49\u5e94\u8be5\u5e94\u7528\u7684\u53d8\u6362\u3002\u8fd9\u4e2a\u5c42\u6b21\u7ed3\u6784\u5b9e\u9645\u4e0a\u5b9a\u4e49\u4e86\u9aa8\u9abc\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u6bcf\u4e2a\u9aa8\u9abc\u90fd\u662f\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff08\u6839\u8282\u70b9\u9664\u5916\uff09\uff0c\u5e76\u4e14\u53ef\u80fd\u6709\u4e00\u7ec4\u5b50\u8282\u70b9\u3002\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u8282\u70b9\u4e0d\u662f\u9aa8\u9abc\uff0c\u5b83\u4eec\u7528\u4e8e\u5206\u7ec4\u53d8\u6362\uff0c\u5728\u8ba1\u7b97\u53d8\u6362\u65f6\u5e94\u8be5\u5904\u7406\u3002\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u8fd9\u4e2a\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\u662f\u4ece\u6574\u4e2a\u6a21\u578b\u5b9a\u4e49\u7684\uff0c\u6211\u4eec\u6ca1\u6709\u4e3a\u6bcf\u4e2a\u7f51\u683c\u5355\u72ec\u7684\u5c42\u6b21\u7ed3\u6784\u3002</p> <p>\u573a\u666f\u8fd8\u5b9a\u4e49\u4e86\u4e00\u7ec4\u52a8\u753b\u3002\u5355\u4e2a\u6a21\u578b\u53ef\u4ee5\u6709\u591a\u4e2a\u52a8\u753b\u6765\u6a21\u62df\u89d2\u8272\u5982\u4f55\u884c\u8d70\u3001\u5954\u8dd1\u7b49\u3002\u8fd9\u4e9b\u52a8\u753b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u53d8\u6362\u3002\u52a8\u753b\u5177\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a</p> <ul> <li>\u4e00\u4e2a\u540d\u79f0\u3002</li> <li>\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\u3002\u5373\u52a8\u753b\u7684\u65f6\u95f4\u6301\u7eed\u65f6\u95f4\u3002\u540d\u79f0\u53ef\u80fd\u4ee4\u4eba\u56f0\u60d1\uff0c\u56e0\u4e3a\u52a8\u753b\u662f\u5e94\u8be5\u5e94\u7528\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5728\u6bcf\u4e2a\u4e0d\u540c\u5e27\u7684\u53d8\u6362\u5217\u8868\u3002</li> <li>\u4e00\u4e2a\u52a8\u753b\u901a\u9053\u5217\u8868\u3002\u52a8\u753b\u901a\u9053\u5305\u542b\uff0c\u5bf9\u4e8e\u7279\u5b9a\u7684\u65f6\u95f4\u77ac\u95f4\uff0c\u5e94\u8be5\u5e94\u7528\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7684\u5e73\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u4fe1\u606f\u3002\u5efa\u6a21\u52a8\u753b\u901a\u9053\u4e2d\u5305\u542b\u7684\u6570\u636e\u7684\u7c7b\u662f<code>AINodeAnim</code>\u3002\u52a8\u753b\u901a\u9053\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5173\u952e\u5e27\u3002</li> </ul> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u4e0a\u8ff0\u6240\u6709\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p></p> <p>\u5bf9\u4e8e\u7279\u5b9a\u7684\u65f6\u95f4\u77ac\u95f4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5e27\uff0c\u5e94\u7528\u4e8e\u9aa8\u9abc\u7684\u53d8\u6362\u662f\u52a8\u753b\u901a\u9053\u4e2d\u4e3a\u8be5\u77ac\u95f4\u5b9a\u4e49\u7684\u53d8\u6362\uff0c\u4e58\u4ee5\u6240\u6709\u7236\u8282\u70b9\u76f4\u5230\u6839\u8282\u70b9\u7684\u53d8\u6362\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u63d0\u53d6\u573a\u666f\u4e2d\u5b58\u50a8\u7684\u4fe1\u606f\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u6784\u5efa\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\u3002</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u52a8\u753b\uff0c\u904d\u5386\u6bcf\u4e2a\u52a8\u753b\u901a\u9053\uff08\u5bf9\u4e8e\u6bcf\u4e2a\u52a8\u753b\u8282\u70b9\uff09\uff0c\u5e76\u4e3a\u6240\u6709\u6f5c\u5728\u7684\u52a8\u753b\u5e27\u6784\u5efa\u6bcf\u4e2a\u9aa8\u9abc\u7684\u53d8\u6362\u77e9\u9635\u3002\u8fd9\u4e9b\u53d8\u6362\u77e9\u9635\u662f\u4e0e\u9aa8\u9abc\u76f8\u5173\u7684\u8282\u70b9\u7684\u53d8\u6362\u77e9\u9635\u548c\u9aa8\u9abc\u53d8\u6362\u77e9\u9635\u7684\u7ec4\u5408\u3002</li> <li>\u6211\u4eec\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5e27\uff0c\u6784\u5efa\u8be5\u8282\u70b9\u7684\u53d8\u6362\u77e9\u9635\uff0c\u5b83\u662f\u8be5\u8282\u70b9\u7684\u53d8\u6362\u77e9\u9635\u4e58\u4ee5\u8be5\u8282\u70b9\u5728\u8be5\u7279\u5b9a\u5e27\u7684\u5e73\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u77e9\u9635\u7684\u7ec4\u5408\u3002</li> <li>\u7136\u540e\u6211\u4eec\u83b7\u53d6\u4e0e\u8be5\u8282\u70b9\u76f8\u5173\u7684\u9aa8\u9abc\uff0c\u5e76\u901a\u8fc7\u4e58\u4ee5\u9aa8\u9abc\u7684\u504f\u79fb\u77e9\u9635\u6765\u8865\u5145\u8be5\u53d8\u6362\u3002\u7ed3\u679c\u5c06\u662f\u4e0e\u8be5\u7279\u5b9a\u5e27\u76f8\u5173\u7684\u9aa8\u9abc\u76f8\u5173\u7684\u53d8\u6362\u77e9\u9635\uff0c\u8be5\u77e9\u9635\u5c06\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u3002</li> <li>\u4e4b\u540e\uff0c\u6211\u4eec\u904d\u5386\u5b50\u8282\u70b9\uff0c\u4f20\u9012\u7236\u8282\u70b9\u7684\u53d8\u6362\u77e9\u9635\uff0c\u4ee5\u4fbf\u4e0e\u5b50\u8282\u70b9\u53d8\u6362\u4e00\u8d77\u4f7f\u7528\u3002</li> </ul>"},{"location":"15-animations/#implementation","title":"\u5b9e\u73b0\uff08Implementation\uff09","text":"<p>\u8ba9\u6211\u4eec\u9996\u5148\u5206\u6790<code>ModelLoader</code>\u7c7b\u4e2d\u7684\u66f4\u6539\uff1a</p> <pre><code>public class ModelLoader {\n\n    public static final int MAX_BONES = 150;\n    private static final Matrix4f IDENTITY_MATRIX = new Matrix4f();\n    ...\n    public static Model loadModel(String modelId, String modelPath, TextureCache textureCache, boolean animation) {\n        return loadModel(modelId, modelPath, textureCache, aiProcess_GenSmoothNormals | aiProcess_JoinIdenticalVertices |\n                aiProcess_Triangulate | aiProcess_FixInfacingNormals | aiProcess_CalcTangentSpace | aiProcess_LimitBoneWeights |\n                (animation ? 0 : aiProcess_PreTransformVertices));\n\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u5728<code>loadModel</code>\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570\uff08\u540d\u4e3a<code>animation</code>\uff09\u6765\u6307\u793a\u6211\u4eec\u662f\u5426\u6b63\u5728\u52a0\u8f7d\u5e26\u6709\u52a8\u753b\u7684\u6a21\u578b\u3002\u5982\u679c\u662f\uff0c\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528<code>aiProcess_PreTransformVertices</code>\u6807\u5fd7\u3002\u6b64\u6807\u5fd7\u5bf9\u52a0\u8f7d\u7684\u6570\u636e\u6267\u884c\u4e00\u4e9b\u53d8\u6362\uff0c\u4ee5\u4fbf\u6a21\u578b\u653e\u7f6e\u5728\u539f\u70b9\uff0c\u5e76\u4e14\u5750\u6807\u88ab\u6821\u6b63\u4ee5\u5339\u914dOpenGL\u5750\u6807\u7cfb\u3002\u6211\u4eec\u4e0d\u80fd\u5c06\u6b64\u6807\u5fd7\u7528\u4e8e\u52a8\u753b\u6a21\u578b\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5220\u9664\u52a8\u753b\u6570\u636e\u4fe1\u606f\u3002</p> <p>\u5728\u5904\u7406\u7f51\u683c\u65f6\uff0c\u6211\u4eec\u8fd8\u5c06\u5728\u5904\u7406\u7f51\u683c\u65f6\u5904\u7406\u4e0e\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u9aa8\u9abc\u548c\u6743\u91cd\u3002\u5728\u5904\u7406\u5b83\u4eec\u65f6\uff0c\u6211\u4eec\u5c06\u5b58\u50a8\u9aa8\u9abc\u5217\u8868\uff0c\u4ee5\u4fbf\u7a0d\u540e\u6784\u5efa\u6240\u9700\u7684\u53d8\u6362\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    public static Model loadModel(String modelId, String modelPath, TextureCache textureCache, int flags) {\n        ...\n        List&lt;Bone&gt; boneList = new ArrayList&lt;&gt;();\n        int numMeshes = aiScene.mNumMeshes();\n        PointerBuffer aiMeshes = aiScene.mMeshes();\n        for (int i = 0; i &lt; numMeshes; i++) {\n            AIMesh aiMesh = AIMesh.create(aiMeshes.get(i));\n            Mesh mesh = processMesh(aiMesh, boneList);\n            ...\n        }\n        ...\n    }\n    ...\n    private static Mesh processMesh(AIMesh aiMesh, List&lt;Bone&gt; boneList) {\n        ...\n        AnimMeshData animMeshData = processBones(aiMesh, boneList);\n        ...\n        return new Mesh(vertices, normals, tangents, bitangents, textCoords, indices, animMeshData.boneIds, animMeshData.weights);\n    }\n    ...\n}\n</code></pre> <p>\u65b0\u7684\u65b9\u6cd5<code>processBones</code>\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    private static AnimMeshData processBones(AIMesh aiMesh, List&lt;Bone&gt; boneList) {\n        List&lt;Integer&gt; boneIds = new ArrayList&lt;&gt;();\n        List&lt;Float&gt; weights = new ArrayList&lt;&gt;();\n\n        Map&lt;Integer, List&lt;VertexWeight&gt;&gt; weightSet = new HashMap&lt;&gt;();\n        int numBones = aiMesh.mNumBones();\n        PointerBuffer aiBones = aiMesh.mBones();\n        for (int i = 0; i &lt; numBones; i++) {\n            AIBone aiBone = AIBone.create(aiBones.get(i));\n            int id = boneList.size();\n            Bone bone = new Bone(id, aiBone.mName().dataString(), toMatrix(aiBone.mOffsetMatrix()));\n            boneList.add(bone);\n            int numWeights = aiBone.mNumWeights();\n            AIVertexWeight.Buffer aiWeights = aiBone.mWeights();\n            for (int j = 0; j &lt; numWeights; j++) {\n                AIVertexWeight aiWeight = aiWeights.get(j);\n                VertexWeight vw = new VertexWeight(bone.boneId(), aiWeight.mVertexId(),\n                        aiWeight.mWeight());\n                List&lt;VertexWeight&gt; vertexWeightList = weightSet.get(vw.vertexId());\n                if (vertexWeightList == null) {\n                    vertexWeightList = new ArrayList&lt;&gt;();\n                    weightSet.put(vw.vertexId(), vertexWeightList);\n                }\n                vertexWeightList.add(vw);\n            }\n        }\n\n        int numVertices = aiMesh.mNumVertices();\n        for (int i = 0; i &lt; numVertices; i++) {\n            List&lt;VertexWeight&gt; vertexWeightList = weightSet.get(i);\n            int size = vertexWeightList != null ? vertexWeightList.size() : 0;\n            for (int j = 0; j &lt; Mesh.MAX_WEIGHTS; j++) {\n                if (j &lt; size) {\n                    VertexWeight vw = vertexWeightList.get(j);\n                    weights.add(vw.weight());\n                    boneIds.add(vw.boneId());\n                } else {\n                    weights.add(0.0f);\n                    boneIds.add(0);\n                }\n            }\n        }\n\n        return new AnimMeshData(Utils.listFloatToArray(weights), Utils.listIntToArray(boneIds));\n    }\n    ...\n}\n</code></pre> <p>\u6b64\u65b9\u6cd5\u904d\u5386\u7279\u5b9a\u7f51\u683c\u7684\u9aa8\u9abc\u5b9a\u4e49\uff0c\u83b7\u53d6\u5b83\u4eec\u7684\u6743\u91cd\u5e76\u586b\u5145\u4e09\u4e2a\u5217\u8868\uff1a</p> <ul> <li><code>boneList</code>\uff1a\u5b83\u5305\u542b\u9aa8\u9abc\u5217\u8868\u53ca\u5176\u504f\u79fb\u77e9\u9635\u3002\u7a0d\u540e\u5c06\u7528\u4e8e\u8ba1\u7b97\u6700\u7ec8\u9aa8\u9abc\u53d8\u6362\u3002\u5df2\u521b\u5efa\u540d\u4e3a<code>Bone</code>\u7684\u65b0\u7c7b\u6765\u4fdd\u5b58\u8be5\u4fe1\u606f\u3002\u6b64\u5217\u8868\u5c06\u5305\u542b\u6240\u6709\u7f51\u683c\u7684\u9aa8\u9abc\u3002</li> <li><code>boneIds</code>\uff1a\u5b83\u4ec5\u5305\u542b\u7f51\u683c\u6bcf\u4e2a\u9876\u70b9\u7684\u9aa8\u9abc\u6807\u8bc6\u7b26\u3002\u9aa8\u9abc\u5728\u6e32\u67d3\u65f6\u901a\u8fc7\u5176\u4f4d\u7f6e\u8fdb\u884c\u6807\u8bc6\u3002\u6b64\u5217\u8868\u4ec5\u5305\u542b\u7279\u5b9a\u7f51\u683c\u7684\u9aa8\u9abc\u3002</li> <li><code>weights</code>\uff1a\u5b83\u5305\u542b\u7f51\u683c\u6bcf\u4e2a\u9876\u70b9\u7684\u6743\u91cd\uff0c\u7528\u4e8e\u5e94\u7528\u4e8e\u76f8\u5173\u7684\u9aa8\u9abc\u3002</li> </ul> <p>\u5728\u6b64\u65b9\u6cd5\u4e2d\u68c0\u7d22\u7684\u4fe1\u606f\u5c01\u88c5\u5728<code>AnimMeshData</code>\u8bb0\u5f55\u4e2d\uff08\u5728<code>ModelLoader</code>\u7c7b\u4e2d\u5b9a\u4e49\uff09\u3002\u65b0\u7684<code>Bone</code>\u548c<code>VertexWeight</code>\u7c7b\u4e5f\u662f\u8bb0\u5f55\u3002\u5b83\u4eec\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    public record AnimMeshData(float[] weights, int[] boneIds) {\n    }\n\n    private record Bone(int boneId, String boneName, Matrix4f offsetMatrix) {\n    }\n\n    private record VertexWeight(int boneId, int vertexId, float weight) {\n    }\n}\n</code></pre> <p>\u6211\u4eec\u8fd8\u5728<code>Utils</code>\u7c7b\u4e2d\u521b\u5efa\u4e86\u4e24\u4e2a\u65b0\u65b9\u6cd5\uff0c\u7528\u4e8e\u5c06<code>float</code>\u548c<code>int</code>\u7684<code>List</code>\u8f6c\u6362\u4e3a\u6570\u7ec4\uff1a</p> <pre><code>public class Utils {\n    ...\n    public static float[] listFloatToArray(List&lt;Float&gt; list) {\n        int size = list != null ? list.size() : 0;\n        float[] floatArr = new float[size];\n        for (int i = 0; i &lt; size; i++) {\n            floatArr[i] = list.get(i);\n        }\n        return floatArr;\n    }\n\n    public static int[] listIntToArray(List&lt;Integer&gt; list) {\n        return list.stream().mapToInt((Integer v) -&gt; v).toArray();\n    }\n    ...\n}\n</code></pre> <p>\u56de\u5230<code>loadModel</code>\u65b9\u6cd5\uff0c\u5f53\u6211\u4eec\u5904\u7406\u5b8c\u7f51\u683c\u548c\u6750\u8d28\u540e\uff0c\u6211\u4eec\u5c06\u5904\u7406\u52a8\u753b\u6570\u636e\uff08\u5373\u4e0e\u6bcf\u4e2a\u52a8\u753b\u76f8\u5173\u7684\u4e0d\u540c\u52a8\u753b\u5173\u952e\u5e27\u53ca\u5176\u53d8\u6362\uff09\u3002\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u4e5f\u5b58\u50a8\u5728<code>Model</code>\u7c7b\u4e2d\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    public static Model loadModel(String modelId, String modelPath, TextureCache textureCache, int flags) {\n        ...\n        List&lt;Model.Animation&gt; animations = new ArrayList&lt;&gt;();\n        int numAnimations = aiScene.mNumAnimations();\n        if (numAnimations &gt; 0) {\n            Node rootNode = buildNodesTree(aiScene.mRootNode(), null);\n            Matrix4f globalInverseTransformation = toMatrix(aiScene.mRootNode().mTransformation()).invert();\n            animations = processAnimations(aiScene, boneList, rootNode, globalInverseTransformation);\n        }\n\n        aiReleaseImport(aiScene);\n\n        return new Model(modelId, materialList, animations);\n    }\n    ...\n}\n</code></pre> <p><code>buildNodesTree</code>\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u53ea\u662f\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u904d\u5386\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\uff0c\u6784\u5efa\u4e00\u4e2a\u8282\u70b9\u6811\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    private static Node buildNodesTree(AINode aiNode, Node parentNode) {\n        String nodeName = aiNode.mName().dataString();\n        Node node = new Node(nodeName, parentNode, toMatrix(aiNode.mTransformation()));\n\n        int numChildren = aiNode.mNumChildren();\n        PointerBuffer aiChildren = aiNode.mChildren();\n        for (int i = 0; i &lt; numChildren; i++) {\n            AINode aiChildNode = AINode.create(aiChildren.get(i));\n            Node childNode = buildNodesTree(aiChildNode, node);\n            node.addChild(childNode);\n        }\n        return node;\n    }\n    ...\n}\n</code></pre> <p><code>toMatrix</code>\u65b9\u6cd5\u53ea\u662f\u5c06Assimp\u77e9\u9635\u8f6c\u6362\u4e3aJOML\u77e9\u9635\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    private static Matrix4f toMatrix(AIMatrix4x4 aiMatrix4x4) {\n        Matrix4f result = new Matrix4f();\n        result.m00(aiMatrix4x4.a1());\n        result.m10(aiMatrix4x4.a2());\n        result.m20(aiMatrix4x4.a3());\n        result.m30(aiMatrix4x4.a4());\n        result.m01(aiMatrix4x4.b1());\n        result.m11(aiMatrix4x4.b2());\n        result.m21(aiMatrix4x4.b3());\n        result.m31(aiMatrix4x4.b4());\n        result.m02(aiMatrix4x4.c1());\n        result.m12(aiMatrix4x4.c2());\n        result.m22(aiMatrix4x4.c3());\n        result.m32(aiMatrix4x4.c4());\n        result.m03(aiMatrix4x4.d1());\n        result.m13(aiMatrix4x4.d2());\n        result.m23(aiMatrix4x4.d3());\n        result.m33(aiMatrix4x4.d4());\n\n        return result;\n    }\n    ...\n}\n</code></pre> <p><code>processAnimations</code>\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p><pre><code>public class ModelLoader {\n    ...\n    private static List&lt;Model.Animation&gt; processAnimations(AIScene aiScene, List&lt;Bone&gt; boneList,\n                                                           Node rootNode, Matrix4f globalInverseTransformation) {\n        List&lt;Model.Animation&gt; animations = new ArrayList&lt;&gt;();\n\n        // Process all animations\n        int numAnimations = aiScene.mNumAnimations();\n        PointerBuffer aiAnimations = aiScene.mAnimations();\n        for (int i = 0; i &lt; numAnimations; i++) {\n            AIAnimation aiAnimation = AIAnimation.create(aiAnimations.get(i));\n            int maxFrames = calcAnimationMaxFrames(aiAnimation);\n\n            List&lt;Model.AnimatedFrame&gt; frames = new ArrayList&lt;&gt;();\n            Model.Animation animation = new Model.Animation(aiAnimation.mName().dataString(), aiAnimation.mDuration(), frames);\n            animations.add(animation);\n\n            for (int j = 0; j &lt; maxFrames; j++) {\n                Matrix4f[] boneMatrices = new Matrix4f[MAX_BONES];\n                Arrays.fill(boneMatrices, IDENTITY_MATRIX);\n                Model.AnimatedFrame animatedFrame = new Model.AnimatedFrame(boneMatrices);\n                buildFrameMatrices(aiAnimation, boneList, animatedFrame, j, rootNode,\n                        rootNode.getNodeTransformation(), globalInverseTransformation);\n                frames.add(animatedFrame);\n            }\n        }\n        return animations;\n    }\n    ...\n}\n</code></pre> \u6b64\u65b9\u6cd5\u8fd4\u56de<code>Model.Animation</code>\u5b9e\u4f8b\u7684<code>List</code>\u3002\u8bf7\u8bb0\u4f4f\uff0c\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u6709\u591a\u4e2a\u52a8\u753b\uff0c\u56e0\u6b64\u5b83\u4eec\u6309\u7d22\u5f15\u5b58\u50a8\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u52a8\u753b\u4e2d\u7684\u6bcf\u4e00\u4e2a\uff0c\u6211\u4eec\u6784\u5efa\u4e00\u4e2a\u52a8\u753b\u5e27\u5217\u8868\uff08<code>Model.AnimatedFrame</code>\u5b9e\u4f8b\uff09\uff0c\u5b83\u4eec\u672c\u8d28\u4e0a\u662f\u5e94\u7528\u4e8e\u6784\u6210\u6a21\u578b\u7684\u6bcf\u4e2a\u9aa8\u9abc\u7684\u53d8\u6362\u77e9\u9635\u5217\u8868\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u52a8\u753b\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528<code>calcAnimationMaxFrames</code>\u65b9\u6cd5\u8ba1\u7b97\u6700\u5927\u5e27\u6570\uff0c\u8be5\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    private static int calcAnimationMaxFrames(AIAnimation aiAnimation) {\n        int maxFrames = 0;\n        int numNodeAnims = aiAnimation.mNumChannels();\n        PointerBuffer aiChannels = aiAnimation.mChannels();\n        for (int i = 0; i &lt; numNodeAnims; i++) {\n            AINodeAnim aiNodeAnim = AINodeAnim.create(aiChannels.get(i));\n            int numFrames = Math.max(Math.max(aiNodeAnim.mNumPositionKeys(), aiNodeAnim.mNumScalingKeys()),\n                    aiNodeAnim.mNumRotationKeys());\n            maxFrames = Math.max(maxFrames, numFrames);\n        }\n\n        return maxFrames;\n    }\n    ...\n}\n</code></pre> <p>\u5728\u7ee7\u7eed\u56de\u987e<code>ModelLoader</code>\u7c7b\u4e2d\u7684\u66f4\u6539\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b<code>Model</code>\u7c7b\u4e2d\u4fdd\u5b58\u52a8\u753b\u4fe1\u606f\u7684\u66f4\u6539\uff1a</p> <pre><code>public class Model {\n    ...\n    private List&lt;Animation&gt; animationList;\n    ...\n    public Model(String id, List&lt;Material&gt; materialList, List&lt;Animation&gt; animationList) {\n        entitiesList = new ArrayList&lt;&gt;();\n        this.id = id;\n        this.materialList = materialList;\n        this.animationList = animationList;\n    }\n    ...\n    public List&lt;Animation&gt; getAnimationList() {\n        return animationList;\n    }\n    ...\n    public record AnimatedFrame(Matrix4f[] boneMatrices) {\n    }\n\n    public record Animation(String name, double duration, List&lt;AnimatedFrame&gt; frames) {\n    }\n}\n</code></pre> <p>\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u5b58\u50a8\u4e0e\u6a21\u578b\u76f8\u5173\u7684\u52a8\u753b\u5217\u8868\uff0c\u6bcf\u4e2a\u52a8\u753b\u7531\u540d\u79f0\u3001\u6301\u7eed\u65f6\u95f4\u548c\u52a8\u753b\u5e27\u5217\u8868\u5b9a\u4e49\uff0c\u52a8\u753b\u5e27\u672c\u8d28\u4e0a\u53ea\u5b58\u50a8\u5e94\u7528\u4e8e\u6bcf\u4e2a\u9aa8\u9abc\u7684\u9aa8\u9abc\u53d8\u6362\u77e9\u9635\u3002</p> <p>\u56de\u5230<code>ModelLoader</code>\u7c7b\uff0c\u6bcf\u4e2a<code>AINodeAnim</code>\u5b9e\u4f8b\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5e94\u7528\u4e8e\u6a21\u578b\u4e2d\u7279\u5b9a\u5e27\u7684\u8282\u70b9\u7684\u53d8\u6362\u3002\u8fd9\u4e9b\u53d8\u6362\uff0c\u5bf9\u4e8e\u7279\u5b9a\u8282\u70b9\uff0c\u5728<code>AINodeAnim</code>\u5b9e\u4f8b\u4e2d\u5b9a\u4e49\u3002\u8fd9\u4e9b\u53d8\u6362\u4ee5\u4f4d\u7f6e\u5e73\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u503c\u7684\u5f62\u5f0f\u5b9a\u4e49\u3002\u8fd9\u91cc\u7684\u6280\u5de7\u662f\uff0c\u4f8b\u5982\uff0c\u5bf9\u4e8e\u7279\u5b9a\u8282\u70b9\uff0c\u5e73\u79fb\u503c\u53ef\u4ee5\u5728\u7279\u5b9a\u5e27\u505c\u6b62\uff0c\u4f46\u65cb\u8f6c\u548c\u7f29\u653e\u503c\u53ef\u4ee5\u7ee7\u7eed\u5230\u4e0b\u4e00\u5e27\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u62e5\u6709\u6bd4\u65cb\u8f6c\u6216\u7f29\u653e\u503c\u66f4\u5c11\u7684\u5e73\u79fb\u503c\u3002\u56e0\u6b64\uff0c\u8ba1\u7b97\u6700\u5927\u5e27\u6570\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u8fd1\u4f3c\u65b9\u6cd5\u662f\u4f7f\u7528\u6700\u5927\u503c\u3002\u95ee\u9898\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u56e0\u4e3a\u8fd9\u662f\u6309\u8282\u70b9\u5b9a\u4e49\u7684\u3002\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u53ea\u5b9a\u4e49\u524d\u51e0\u5e27\u7684\u4e00\u4e9b\u53d8\u6362\uff0c\u800c\u5176\u4f59\u5e27\u4e0d\u518d\u5e94\u7528\u66f4\u591a\u4fee\u6539\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u59cb\u7ec8\u4f7f\u7528\u6700\u540e\u5b9a\u4e49\u7684\u503c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u83b7\u53d6\u4e0e\u8282\u70b9\u76f8\u5173\u7684\u6240\u6709\u52a8\u753b\u7684\u6700\u5927\u503c\u3002</p> <p>\u56de\u5230<code>processAnimations</code>\u65b9\u6cd5\uff0c\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u904d\u5386\u4e0d\u540c\u7684\u5e27\uff0c\u5e76\u901a\u8fc7\u8c03\u7528<code>buildFrameMatrices</code>\u65b9\u6cd5\u6784\u5efa\u9aa8\u9abc\u7684\u53d8\u6362\u77e9\u9635\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5e27\uff0c\u6211\u4eec\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5e76\u5c06\u4ece\u8282\u70b9\u5c42\u6b21\u7ed3\u6784\u7684\u9876\u90e8\u5411\u4e0b\u9012\u5f52\u5e94\u7528\u53d8\u6362\u3002<code>buildFrameMatrices</code>\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    private static void buildFrameMatrices(AIAnimation aiAnimation, List&lt;Bone&gt; boneList, Model.AnimatedFrame animatedFrame,\n                                           int frame, Node node, Matrix4f parentTransformation, Matrix4f globalInverseTransform) {\n        String nodeName = node.getName();\n        AINodeAnim aiNodeAnim = findAIAnimNode(aiAnimation, nodeName);\n        Matrix4f nodeTransform = node.getNodeTransformation();\n        if (aiNodeAnim != null) {\n            nodeTransform = buildNodeTransformationMatrix(aiNodeAnim, frame);\n        }\n        Matrix4f nodeGlobalTransform = new Matrix4f(parentTransformation).mul(nodeTransform);\n\n        List&lt;Bone&gt; affectedBones = boneList.stream().filter(b -&gt; b.boneName().equals(nodeName)).toList();\n        for (Bone bone : affectedBones) {\n            Matrix4f boneTransform = new Matrix4f(globalInverseTransform).mul(nodeGlobalTransform).\n                    mul(bone.offsetMatrix());\n            animatedFrame.boneMatrices()[bone.boneId()] = boneTransform;\n        }\n\n        for (Node childNode : node.getChildren()) {\n            buildFrameMatrices(aiAnimation, boneList, animatedFrame, frame, childNode, nodeGlobalTransform,\n                    globalInverseTransform);\n        }\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u83b7\u53d6\u4e0e\u8282\u70b9\u76f8\u5173\u7684\u53d8\u6362\u3002\u7136\u540e\u6211\u4eec\u68c0\u67e5\u6b64\u8282\u70b9\u662f\u5426\u6709\u5173\u8054\u7684\u52a8\u753b\u8282\u70b9\u3002\u5982\u679c\u662f\uff0c\u6211\u4eec\u9700\u8981\u83b7\u53d6\u9002\u7528\u4e8e\u6211\u4eec\u6b63\u5728\u5904\u7406\u7684\u5e27\u7684\u9002\u5f53\u5e73\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u53d8\u6362\u3002\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u83b7\u53d6\u4e0e\u8be5\u8282\u70b9\u76f8\u5173\u7684\u9aa8\u9abc\uff0c\u5e76\u901a\u8fc7\u4e58\u4ee5\u4ee5\u4e0b\u77e9\u9635\u6765\u66f4\u65b0\u6bcf\u4e2a\u9aa8\u9abc\u5728\u8be5\u7279\u5b9a\u5e27\u7684\u53d8\u6362\u77e9\u9635\uff1a</p> <ul> <li>\u6a21\u578b\u9006\u5168\u5c40\u53d8\u6362\u77e9\u9635\uff08\u6839\u8282\u70b9\u53d8\u6362\u77e9\u9635\u7684\u9006\uff09\u3002</li> <li>\u8282\u70b9\u7684\u53d8\u6362\u77e9\u9635\u3002</li> <li>\u9aa8\u9abc\u504f\u79fb\u77e9\u9635\u3002</li> </ul> <p>\u4e4b\u540e\uff0c\u6211\u4eec\u904d\u5386\u5b50\u8282\u70b9\uff0c\u4f7f\u7528\u8282\u70b9\u53d8\u6362\u77e9\u9635\u4f5c\u4e3a\u8fd9\u4e9b\u5b50\u8282\u70b9\u7684\u7236\u77e9\u9635\u3002</p> <pre><code>public class ModelLoader {\n    ...\n    private static Matrix4f buildNodeTransformationMatrix(AINodeAnim aiNodeAnim, int frame) {\n        AIVectorKey.Buffer positionKeys = aiNodeAnim.mPositionKeys();\n        AIVectorKey.Buffer scalingKeys = aiNodeAnim.mScalingKeys();\n        AIQuatKey.Buffer rotationKeys = aiNodeAnim.mRotationKeys();\n\n        AIVectorKey aiVecKey;\n        AIVector3D vec;\n\n        Matrix4f nodeTransform = new Matrix4f();\n        int numPositions = aiNodeAnim.mNumPositionKeys();\n        if (numPositions &gt; 0) {\n            aiVecKey = positionKeys.get(Math.min(numPositions - 1, frame));\n            vec = aiVecKey.mValue();\n            nodeTransform.translate(vec.x(), vec.y(), vec.z());\n        }\n        int numRotations = aiNodeAnim.mNumRotationKeys();\n        if (numRotations &gt; 0) {\n            AIQuatKey quatKey = rotationKeys.get(Math.min(numRotations - 1, frame));\n            AIQuaternion aiQuat = quatKey.mValue();\n            Quaternionf quat = new Quaternionf(aiQuat.x(), aiQuat.y(), aiQuat.z(), aiQuat.w());\n            nodeTransform.rotate(quat);\n        }\n        int numScalingKeys = aiNodeAnim.mNumScalingKeys();\n        if (numScalingKeys &gt; 0) {\n            aiVecKey = scalingKeys.get(Math.min(numScalingKeys - 1, frame));\n            vec = aiVecKey.mValue();\n            nodeTransform.scale(vec.x(), vec.y(), vec.z());\n        }\n\n        return nodeTransform;\n    }\n    ...\n}\n</code></pre> <p><code>AINodeAnim</code>\u5b9e\u4f8b\u5b9a\u4e49\u4e86\u4e00\u7ec4\u5305\u542b\u5e73\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u4fe1\u606f\u7684\u952e\u3002\u8fd9\u4e9b\u952e\u5f15\u7528\u7279\u5b9a\u7684\u65f6\u95f4\u77ac\u95f4\u3002\u6211\u4eec\u5047\u8bbe\u4fe1\u606f\u6309\u65f6\u95f4\u6392\u5e8f\uff0c\u5e76\u6784\u5efa\u4e00\u4e2a\u77e9\u9635\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u5e94\u7528\u4e8e\u6bcf\u4e2a\u5e27\u7684\u53d8\u6362\u3002\u5982\u524d\u6240\u8ff0\uff0c\u5176\u4e2d\u4e00\u4e9b\u53d8\u6362\u53ef\u80fd\u5728\u7279\u5b9a\u5e27\u201c\u505c\u6b62\u201d\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u6700\u540e\u4e00\u5e27\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002</p> <p><code>findAIAnimNode</code>\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    private static AINodeAnim findAIAnimNode(AIAnimation aiAnimation, String nodeName) {\n        AINodeAnim result = null;\n        int numAnimNodes = aiAnimation.mNumChannels();\n        PointerBuffer aiChannels = aiAnimation.mChannels();\n        for (int i = 0; i &lt; numAnimNodes; i++) {\n            AINodeAnim aiNodeAnim = AINodeAnim.create(aiChannels.get(i));\n            if (nodeName.equals(aiNodeAnim.mNodeName().dataString())) {\n                result = aiNodeAnim;\n                break;\n            }\n        }\n        return result;\n    }\n    ...\n}\n</code></pre> <p><code>Mesh</code>\u7c7b\u9700\u8981\u66f4\u65b0\u4ee5\u5206\u914d\u65b0\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u7528\u4e8e\u9aa8\u9abc\u7d22\u5f15\u548c\u9aa8\u9abc\u6743\u91cd\u3002\u60a8\u5c06\u770b\u5230\u6211\u4eec\u6700\u591a\u4f7f\u7528\u56db\u4e2a\u6743\u91cd\uff08\u4ee5\u53ca\u6bcf\u4e2a\u9876\u70b9\u76f8\u5173\u7684\u9aa8\u9abc\u7d22\u5f15\uff09\u3002</p> <pre><code>public class Mesh {\n\n    public static final int MAX_WEIGHTS = 4;\n    ...\n    public Mesh(float[] positions, float[] normals, float[] tangents, float[] bitangents, float[] textCoords, int[] indices) {\n        this(positions, normals, tangents, bitangents, textCoords, indices,\n                new int[Mesh.MAX_WEIGHTS * positions.length / 3], new float[Mesh.MAX_WEIGHTS * positions.length / 3]);\n    }\n\n    public Mesh(float[] positions, float[] normals, float[] tangents, float[] bitangents, float[] textCoords, int[] indices,\n                int[] boneIndices, float[] weights) {\n        ...\n        // Bone weights\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer weightsBuffer = MemoryUtil.memCallocFloat(weights.length);\n        weightsBuffer.put(weights).flip();\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, weightsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(5);\n        glVertexAttribPointer(5, 4, GL_FLOAT, false, 0, 0);\n\n        // Bone indices\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        IntBuffer boneIndicesBuffer = MemoryUtil.memCallocInt(boneIndices.length);\n        boneIndicesBuffer.put(boneIndices).flip();\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, boneIndicesBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(6);\n        glVertexAttribPointer(6, 4, GL_FLOAT, false, 0, 0);\n        ...\n        MemoryUtil.memFree(weightsBuffer);\n        MemoryUtil.memFree(boneIndicesBuffer);\n        ...\n    }\n    ...\n}\n</code></pre> <p><code>Node</code>\u7c7b\u53ea\u5b58\u50a8\u4e0e<code>AINode</code>\u76f8\u5173\u7684\u6570\u636e\uff0c\u5e76\u5177\u6709\u7ba1\u7406\u5176\u5b50\u8282\u70b9\u7684\u7279\u5b9a\u65b9\u6cd5\uff1a</p> <pre><code>package org.lwjglb.engine.scene;\n\nimport org.joml.Matrix4f;\n\nimport java.util.*;\n\npublic class Node {\n    private final List&lt;Node&gt; children;\n\n    private final String name;\n\n    private final Node parent;\n\n    private Matrix4f nodeTransformation;\n\n    public Node(String name, Node parent, Matrix4f nodeTransformation) {\n        this.name = name;\n        this.parent = parent;\n        this.nodeTransformation = nodeTransformation;\n        this.children = new ArrayList&lt;&gt;();\n    }\n\n    public void addChild(Node node) {\n        this.children.add(node);\n    }\n\n    public List&lt;Node&gt; getChildren() {\n        return children;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public Matrix4f getNodeTransformation() {\n        return nodeTransformation;\n    }\n\n    public Node getParent() {\n        return parent;\n    }\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u770b\u770b\u5982\u4f55\u6e32\u67d3\u52a8\u753b\u6a21\u578b\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u4e0e\u9759\u6001\u6a21\u578b\u5171\u5b58\u3002\u8ba9\u6211\u4eec\u4ece<code>SceneRender</code>\u7c7b\u5f00\u59cb\u3002\u5728\u6b64\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u7edf\u4e00\u53d8\u91cf\u6765\u4f20\u9012\u9aa8\u9abc\u77e9\u9635\uff08\u5206\u914d\u7ed9\u5f53\u524d\u52a8\u753b\u5e27\uff09\uff0c\u4ee5\u4fbf\u5b83\u4eec\u53ef\u4ee5\u5728\u7740\u8272\u5668\u4e2d\u4f7f\u7528\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u9759\u6001\u548c\u52a8\u753b\u5b9e\u4f53\u7684\u6e32\u67d3\u5bf9\u6b64\u7c7b\u6ca1\u6709\u4efb\u4f55\u989d\u5916\u5f71\u54cd\u3002</p> <pre><code>public class SceneRender {\n    ...\n    private void createUniforms() {\n        ...\n        uniformsMap.createUniform(\"bonesMatrices\");\n        ...\n    }\n\n    public void render(Scene scene) {\n        ...\n        for (Model model : models) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n\n            for (Material material : model.getMaterialList()) {\n                ...\n                for (Mesh mesh : material.getMeshList()) {\n                    glBindVertexArray(mesh.getVaoId());\n                    for (Entity entity : entities) {\n                        uniformsMap.setUniform(\"modelMatrix\", entity.getModelMatrix());\n                        AnimationData animationData = entity.getAnimationData();\n                        if (animationData == null) {\n                            uniformsMap.setUniform(\"bonesMatrices\", AnimationData.DEFAULT_BONES_MATRICES);\n                        } else {\n                            uniformsMap.setUniform(\"bonesMatrices\", animationData.getCurrentFrame().boneMatrices());\n                        }\n                        glDrawElements(GL_TRIANGLES, mesh.getNumVertices(), GL_UNSIGNED_INT, 0);\n                    }\n                }\n            }\n        }\n    }\n    ...\n}\n</code></pre> <p>\u5bf9\u4e8e\u9759\u6001\u6a21\u578b\uff0c\u6211\u4eec\u5c06\u4f20\u9012\u4e00\u4e2a\u8bbe\u7f6e\u4e3anull\u7684\u77e9\u9635\u6570\u7ec4\u3002\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539<code>UniformsMap</code>\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u65b0\u65b9\u6cd5\u6765\u8bbe\u7f6e\u77e9\u9635\u6570\u7ec4\u7684\u503c\uff1a</p> <pre><code>public class UniformsMap {\n    ...\n    public void setUniform(String uniformName, Matrix4f[] matrices) {\n        try (MemoryStack stack = MemoryStack.stackPush()) {\n            int length = matrices != null ? matrices.length : 0;\n            FloatBuffer fb = stack.mallocFloat(16 * length);\n            for (int i = 0; i &lt; length; i++) {\n                matrices[i].get(16 * i, fb);\n            }\n            glUniformMatrix4fv(uniforms.get(uniformName), false, fb);\n        }\n    }\n}\n</code></pre> <p>\u6211\u4eec\u8fd8\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a<code>AnimationData</code>\u7684\u65b0\u7c7b\u6765\u63a7\u5236\u5206\u914d\u7ed9<code>Entity</code>\u7684\u5f53\u524d\u52a8\u753b\uff1a</p> <pre><code>package org.lwjglb.engine.scene;\n\nimport org.joml.Matrix4f;\nimport org.lwjglb.engine.graph.Model;\n\nimport java.util.Arrays;\n\npublic class AnimationData {\n\n    public static final Matrix4f[] DEFAULT_BONES_MATRICES = new Matrix4f[ModelLoader.MAX_BONES];\n\n    static {\n        Matrix4f zeroMatrix = new Matrix4f().zero();\n        Arrays.fill(DEFAULT_BONES_MATRICES, zeroMatrix);\n    }\n\n    private Model.Animation currentAnimation;\n    private int currentFrameIdx;\n\n    public AnimationData(Model.Animation currentAnimation) {\n        currentFrameIdx = 0;\n        this.currentAnimation = currentAnimation;\n    }\n\n    public Model.Animation getCurrentAnimation() {\n        return currentAnimation;\n    }\n\n    public Model.AnimatedFrame getCurrentFrame() {\n        return currentAnimation.frames().get(currentFrameIdx);\n    }\n\n    public int getCurrentFrameIdx() {\n        return currentFrameIdx;\n    }\n\n    public void nextFrame() {\n        int nextFrame = currentFrameIdx + 1;\n        if (nextFrame &gt; currentAnimation.frames().size() - 1) {\n            currentFrameIdx = 0;\n        } else {\n            currentFrameIdx = nextFrame;\n        }\n    }\n\n    public void setCurrentAnimation(Model.Animation currentAnimation) {\n        currentFrameIdx = 0;\n        this.currentAnimation = currentAnimation;\n    }\n}\n</code></pre> <p>\u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539<code>Entity</code>\u7c7b\u4ee5\u4fdd\u5b58\u5bf9<code>AnimationData</code>\u5b9e\u4f8b\u7684\u5f15\u7528\uff1a</p> <pre><code>public class Entity {\n    ...\n    private AnimationData animationData;\n    ...\n    public AnimationData getAnimationData() {\n        return animationData;\n    }\n    ...\n    public void setAnimationData(AnimationData animationData) {\n        this.animationData = animationData;\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u4fee\u6539\u573a\u666f\u9876\u70b9\u7740\u8272\u5668\uff08<code>scene.vert</code>\uff09\u4ee5\u4f7f\u7528\u52a8\u753b\u6570\u636e\u3002\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e9b\u5e38\u91cf\u548c\u65b0\u7684\u8f93\u5165\u5c5e\u6027\uff0c\u7528\u4e8e\u9aa8\u9abc\u6743\u91cd\u548c\u7d22\u5f15\uff08\u6211\u4eec\u6bcf\u4e2a\u9876\u70b9\u4f7f\u7528\u56db\u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528<code>vec4</code>\u548c<code>ivec4</code>\uff09\u3002\u6211\u4eec\u8fd8\u5c06\u4e0e\u5f53\u524d\u52a8\u753b\u5173\u8054\u7684\u9aa8\u9abc\u77e9\u9635\u4f5c\u4e3a\u7edf\u4e00\u53d8\u91cf\u4f20\u9012\u3002</p> <pre><code>#version 330\n\nconst int MAX_WEIGHTS = 4;\nconst int MAX_BONES = 150;\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 normal;\nlayout (location=2) in vec3 tangent;\nlayout (location=3) in vec3 bitangent;\nlayout (location=4) in vec2 texCoord;\nlayout (location=5) in vec4 boneWeights;\nlayout (location=6) in ivec4 boneIndices;\n...\nuniform mat4 bonesMatrices[MAX_BONES];\n...\n</code></pre> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5c06\u904d\u5386\u9aa8\u9abc\u6743\u91cd\uff0c\u5e76\u4f7f\u7528\u7531\u5173\u8054\u9aa8\u9abc\u7d22\u5f15\u6307\u5b9a\u7684\u77e9\u9635\u4fee\u6539\u4f4d\u7f6e\u548c\u6cd5\u7ebf\uff0c\u5e76\u7531\u5173\u8054\u6743\u91cd\u8fdb\u884c\u8c03\u5236\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u6bcf\u4e2a\u9aa8\u9abc\u90fd\u4f1a\u5bf9\u4f4d\u7f6e\uff08\u548c\u6cd5\u7ebf\uff09\u4fee\u6539\u505a\u51fa\u8d21\u732e\uff0c\u4f46\u901a\u8fc7\u4f7f\u7528\u6743\u91cd\u8fdb\u884c\u8c03\u5236\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528\u9759\u6001\u6a21\u578b\uff0c\u6743\u91cd\u5c06\u4e3a\u96f6\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u4fdd\u6301\u539f\u59cb\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u503c\u3002</p> <pre><code>...\nvoid main()\n{\n    vec4 initPos = vec4(0, 0, 0, 0);\n    vec4 initNormal = vec4(0, 0, 0, 0);\n    vec4 initTangent = vec4(0, 0, 0, 0);\n    vec4 initBitangent = vec4(0, 0, 0, 0);\n\n    int count = 0;\n    for (int i = 0; i &lt; MAX_WEIGHTS; i++) {\n        float weight = boneWeights[i];\n        if (weight &gt; 0) {\n            count++;\n            int boneIndex = boneIndices[i];\n            vec4 tmpPos = bonesMatrices[boneIndex] * vec4(position, 1.0);\n            initPos += weight * tmpPos;\n\n            vec4 tmpNormal = bonesMatrices[boneIndex] * vec4(normal, 0.0);\n            initNormal += weight * tmpNormal;\n\n            vec4 tmpTangent = bonesMatrices[boneIndex] * vec4(tangent, 0.0);\n            initTangent += weight * tmpTangent;\n\n            vec4 tmpBitangent = bonesMatrices[boneIndex] * vec4(bitangent, 0.0);\n            initBitangent += weight * tmpBitangent;\n        }\n    }\n    if (count == 0) {\n        initPos = vec4(position, 1.0);\n        initNormal = vec4(normal, 0.0);\n        initTangent = vec4(tangent, 0.0);\n        initBitangent = vec4(bitangent, 0.0);\n    }\n\n    mat4 modelViewMatrix = viewMatrix * modelMatrix;\n    vec4 mvPosition =  modelViewMatrix * initPos;\n    gl_Position   = projectionMatrix * mvPosition;\n    outPosition   = mvPosition.xyz;\n    outNormal     = normalize(modelViewMatrix * initNormal).xyz;\n    outTangent    = normalize(modelViewMatrix * initTangent).xyz;\n    outBitangent  = normalize(modelViewMatrix * initBitangent).xyz;\n    outTextCoord  = texCoord;\n}\n</code></pre> <p>\u4e0b\u56fe\u63cf\u7ed8\u4e86\u8be5\u8fc7\u7a0b\u3002</p> <p></p> <p>\u5728<code>Main</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u52a0\u8f7d\u52a8\u753b\u6a21\u578b\u5e76\u6fc0\u6d3b\u6297\u952f\u9f7f\u3002\u6211\u4eec\u8fd8\u5c06\u6bcf\u6b21\u66f4\u65b0\u65f6\u589e\u52a0\u52a8\u753b\u5e27\uff1a</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    private AnimationData animationData;\n    ...\n    public static void main(String[] args) {\n        Main main = new Main();\n        Window.WindowOptions opts = new Window.WindowOptions();\n        opts.antiAliasing = true;\n        Engine gameEng = new Engine(\"chapter-15\", opts, main);\n        gameEng.start();\n    }\n    ...\n    @Override\n    public void init(Window window, Scene scene, Render render) {\n        String terrainModelId = \"terrain\";\n        Model terrainModel = ModelLoader.loadModel(terrainModelId, \"resources/models/terrain/terrain.obj\",\n                scene.getTextureCache(), false);\n        scene.addModel(terrainModel);\n        Entity terrainEntity = new Entity(\"terrainEntity\", terrainModelId);\n        terrainEntity.setScale(100.0f);\n        terrainEntity.updateModelMatrix();\n        scene.addEntity(terrainEntity);\n\n        String bobModelId = \"bobModel\";\n        Model bobModel = ModelLoader.loadModel(bobModelId, \"resources/models/bob/boblamp.md5mesh\",\n                scene.getTextureCache(), true);\n        scene.addModel(bobModel);\n        Entity bobEntity = new Entity(\"bobEntity\", bobModelId);\n        bobEntity.setScale(0.05f);\n        bobEntity.updateModelMatrix();\n        animationData = new AnimationData(bobModel.getAnimationList().get(0));\n        bobEntity.setAnimationData(animationData);\n        scene.addEntity(bobEntity);\n\n        SceneLights sceneLights = new SceneLights();\n        AmbientLight ambientLight = sceneLights.getAmbientLight();\n        ambientLight.setIntensity(0.5f);\n        ambientLight.setColor(0.3f, 0.3f, 0.3f);\n\n        DirLight dirLight = sceneLights.getDirLight();\n        dirLight.setPosition(0, 1, 0);\n        dirLight.setIntensity(1.0f);\n        scene.setSceneLights(sceneLights);\n\n        SkyBox skyBox = new SkyBox(\"resources/models/skybox/skybox.obj\", scene.getTextureCache());\n        skyBox.getSkyBoxEntity().setScale(100);\n        skyBox.getSkyBoxEntity().updateModelMatrix();\n        scene.setSkyBox(skyBox);\n\n        scene.setFog(new Fog(true, new Vector3f(0.5f, 0.5f, 0.5f), 0.02f));\n\n        Camera camera = scene.getCamera();\n        camera.setPosition(-1.5f, 3.0f, 4.5f);\n        camera.addRotation((float) Math.toRadians(15.0f), (float) Math.toRadians(390.f));\n\n        lightAngle = 0;\n    }\n    ...\n    @Override\n    public void update(Window window, Scene scene, long diffTimeMillis) {\n        animationData.nextFrame();\n    }\n}\n</code></pre> <p>\u6700\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4fee\u6539<code>SkyBox</code>\u7c7b\uff0c\u56e0\u4e3a<code>ModelLoader</code>\u7c7b\u4e2d\u7684<code>loadModel</code>\u65b9\u6cd5\u53d1\u751f\u4e86\u53d8\u5316\uff1a</p> <pre><code>public class SkyBox {\n    ...\n    public SkyBox(String skyBoxModelPath, TextureCache textureCache) {\n        skyBoxModel = ModelLoader.loadModel(\"skybox-model\", skyBoxModelPath, textureCache, false);\n        ...\n    }\n}\n</code></pre> <p>\u60a8\u5c06\u80fd\u591f\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u5185\u5bb9\uff1a</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"16-audio/","title":"\u7b2c16\u7ae0 - \u97f3\u9891\uff08Audio\uff09","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u5904\u7406\u56fe\u5f62\uff0c\u4f46\u6e38\u620f\u7684\u53e6\u4e00\u4e2a\u5173\u952e\u65b9\u9762\u662f\u97f3\u9891\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u58f0\u97f3\u652f\u6301\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"16-audio/#openal","title":"OpenAL","text":"<p>\u672c\u7ae0\u5c06\u501f\u52a9 OpenAL\uff08Open Audio Library\uff09\u6765\u89e3\u51b3\u97f3\u9891\u529f\u80fd\u3002OpenAL \u662f OpenGL \u5728\u97f3\u9891\u65b9\u9762\u7684\u5bf9\u5e94\u7269\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u901a\u8fc7\u62bd\u8c61\u5c42\u64ad\u653e\u58f0\u97f3\u3002\u8be5\u5c42\u5c06\u6211\u4eec\u4e0e\u5e95\u5c42\u97f3\u9891\u5b50\u7cfb\u7edf\u7684\u590d\u6742\u6027\u9694\u79bb\u5f00\u6765\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u8fd8\u5141\u8bb8\u6211\u4eec\u5728 3D \u573a\u666f\u4e2d\u201c\u6e32\u67d3\u201d\u58f0\u97f3\uff0c\u58f0\u97f3\u53ef\u4ee5\u8bbe\u7f6e\u5728\u7279\u5b9a\u4f4d\u7f6e\uff0c\u968f\u8ddd\u79bb\u8870\u51cf\uff0c\u5e76\u6839\u636e\u5176\u901f\u5ea6\u8fdb\u884c\u4fee\u6539\uff08\u6a21\u62df\u591a\u666e\u52d2\u6548\u5e94\uff09\u3002</p> <p>\u5728\u5f00\u59cb\u7f16\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4ecb\u7ecd\u5904\u7406 OpenAL \u65f6\u6d89\u53ca\u7684\u4e3b\u8981\u5143\u7d20\uff0c\u5b83\u4eec\u662f\uff1a</p> <ul> <li>\u7f13\u51b2\u533a\u3002</li> <li>\u58f0\u6e90\u3002</li> <li>\u76d1\u542c\u5668\u3002</li> </ul> <p>\u7f13\u51b2\u533a\u5b58\u50a8\u97f3\u9891\u6570\u636e\uff0c\u4f8b\u5982\u97f3\u4e50\u6216\u97f3\u6548\u3002\u5b83\u4eec\u7c7b\u4f3c\u4e8e OpenGL \u9886\u57df\u7684\u7eb9\u7406\u3002OpenAL \u8981\u6c42\u97f3\u9891\u6570\u636e\u91c7\u7528 PCM\uff08\u8109\u51b2\u7f16\u7801\u8c03\u5236\uff09\u683c\u5f0f\uff08\u5355\u58f0\u9053\u6216\u7acb\u4f53\u58f0\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u8f6c\u50a8 MP3 \u6216 OGG \u6587\u4ef6\uff0c\u800c\u9700\u8981\u5148\u5c06\u5176\u8f6c\u6362\u4e3a PCM\u3002</p> <p>\u4e0b\u4e00\u4e2a\u5143\u7d20\u662f\u58f0\u6e90\uff0c\u5b83\u4ee3\u8868 3D \u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff08\u4e00\u4e2a\u70b9\uff09\uff0c\u7528\u4e8e\u53d1\u51fa\u58f0\u97f3\u3002\u58f0\u6e90\u4e0e\u4e00\u4e2a\u7f13\u51b2\u533a\u76f8\u5173\u8054\uff08\u4e00\u6b21\u53ea\u80fd\u5173\u8054\u4e00\u4e2a\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u5c5e\u6027\u6765\u5b9a\u4e49\uff1a</p> <ul> <li>\u4f4d\u7f6e\uff0c\u58f0\u6e90\u7684\u4f4d\u7f6e\uff08\\(x\\)\u3001\\(y\\) \u548c \\(z\\) \u5750\u6807\uff09\u3002\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0cOpenAL \u4f7f\u7528\u4e0e OpenGL \u76f8\u540c\u7684\u53f3\u624b\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5047\u8bbe\uff08\u4e3a\u4e86\u7b80\u5316\u8d77\u89c1\uff09\u60a8\u7684\u4e16\u754c\u5750\u6807\u7b49\u540c\u4e8e\u58f0\u97f3\u7a7a\u95f4\u5750\u6807\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\u3002</li> <li>\u901f\u5ea6\uff0c\u6307\u5b9a\u58f0\u6e90\u79fb\u52a8\u7684\u901f\u5ea6\u3002\u8fd9\u7528\u4e8e\u6a21\u62df\u591a\u666e\u52d2\u6548\u5e94\u3002</li> <li>\u589e\u76ca\uff0c\u7528\u4e8e\u4fee\u6539\u58f0\u97f3\u7684\u5f3a\u5ea6\uff08\u5c31\u50cf\u4e00\u4e2a\u653e\u5927\u56e0\u5b50\uff09\u3002</li> </ul> <p>\u58f0\u6e90\u8fd8\u6709\u5176\u4ed6\u5c5e\u6027\uff0c\u7a0d\u540e\u5728\u63cf\u8ff0\u6e90\u4ee3\u7801\u65f6\u4f1a\u5c55\u793a\u3002</p> <p>\u6700\u540e\uff0c\u4f46\u540c\u6837\u91cd\u8981\u7684\u662f\uff0c\u76d1\u542c\u5668\u662f\u58f0\u97f3\u5e94\u8be5\u88ab\u542c\u5230\u7684\u5730\u65b9\u3002\u76d1\u542c\u5668\u4ee3\u8868 3D \u97f3\u9891\u573a\u666f\u4e2d\u8bbe\u7f6e\u9ea6\u514b\u98ce\u4ee5\u63a5\u6536\u58f0\u97f3\u7684\u4f4d\u7f6e\u3002\u53ea\u6709\u4e00\u4e2a\u76d1\u542c\u5668\u3002\u56e0\u6b64\uff0c\u901a\u5e38\u8bf4\u97f3\u9891\u6e32\u67d3\u662f\u4ece\u76d1\u542c\u5668\u7684\u89d2\u5ea6\u8fdb\u884c\u7684\u3002\u76d1\u542c\u5668\u5171\u4eab\u4e00\u4e9b\u5c5e\u6027\uff0c\u4f46\u5b83\u6709\u4e00\u4e9b\u989d\u5916\u7684\u5c5e\u6027\uff0c\u4f8b\u5982\u65b9\u5411\u3002\u65b9\u5411\u4ee3\u8868\u76d1\u542c\u5668\u9762\u5411\u7684\u65b9\u5411\u3002</p> <p>\u56e0\u6b64\uff0c\u4e00\u4e2a\u97f3\u9891 3D \u573a\u666f\u7531\u4e00\u7ec4\u53d1\u51fa\u58f0\u97f3\u7684\u58f0\u6e90\u548c\u4e00\u4e2a\u63a5\u6536\u58f0\u97f3\u7684\u76d1\u542c\u5668\u7ec4\u6210\u3002\u6700\u7ec8\u611f\u77e5\u5230\u7684\u58f0\u97f3\u5c06\u53d6\u51b3\u4e8e\u76d1\u542c\u5668\u4e0e\u4e0d\u540c\u58f0\u6e90\u7684\u8ddd\u79bb\u3001\u5b83\u4eec\u7684\u76f8\u5bf9\u901f\u5ea6\u4ee5\u53ca\u9009\u62e9\u7684\u4f20\u64ad\u6a21\u578b\u3002\u58f0\u6e90\u53ef\u4ee5\u5171\u4eab\u7f13\u51b2\u533a\u5e76\u64ad\u653e\u76f8\u540c\u7684\u6570\u636e\u3002\u4e0b\u56fe\u63cf\u7ed8\u4e86\u4e00\u4e2a\u5305\u542b\u4e0d\u540c\u5143\u7d20\u7c7b\u578b\u7684\u793a\u4f8b 3D \u573a\u666f\u3002</p> <p></p>"},{"location":"16-audio/#_1","title":"\u5b9e\u73b0","text":"<p>\u4e3a\u4e86\u4f7f\u7528 OpenAL\uff0c\u9996\u5148\u9700\u8981\u5728\u9879\u76ee\u7684 pom.xml \u4e2d\u6dfb\u52a0 maven \u4f9d\u8d56\u9879\u3002\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u7f16\u8bd1\u65f6\u548c\u8fd0\u884c\u65f6\u4f9d\u8d56\u9879\u3002</p> <pre><code>...\n&lt;dependency&gt;\n   &lt;groupId&gt;org.lwjgl&lt;/groupId&gt;\n   &lt;artifactId&gt;lwjgl-openal&lt;/artifactId&gt;\n   &lt;version&gt;${lwjgl.version}&lt;/version&gt;\n&lt;/dependency&gt;\n...\n&lt;dependency&gt;\n   &lt;groupId&gt;org.lwjgl&lt;/groupId&gt;\n   &lt;artifactId&gt;lwjgl-openal&lt;/artifactId&gt;\n   &lt;version&gt;${lwjgl.version}&lt;/version&gt;\n   &lt;classifier&gt;${native.target}&lt;/classifier&gt;\n   &lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt;\n...\n</code></pre> <p>\u90a3\u4e48\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u5427\u3002\u6211\u4eec\u5c06\u5728 <code>org.lwjglb.engine.sound</code> \u4e0b\u521b\u5efa\u4e00\u4e2a\u65b0\u5305\uff0c\u8be5\u5305\u5c06\u5305\u542b\u6240\u6709\u8d1f\u8d23\u5904\u7406\u97f3\u9891\u7684\u7c7b\u3002\u6211\u4eec\u5c06\u9996\u5148\u4ece\u4e00\u4e2a\u540d\u4e3a <code>SoundBuffer</code> \u7684\u7c7b\u5f00\u59cb\uff0c\u8be5\u7c7b\u5c06\u4ee3\u8868\u4e00\u4e2a OpenAL \u7f13\u51b2\u533a\u3002\u4e0b\u9762\u663e\u793a\u4e86\u8be5\u7c7b\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\u3002</p> <pre><code>package org.lwjglb.engine.sound;\n\nimport org.lwjgl.stb.STBVorbisInfo;\nimport org.lwjgl.system.*;\n\nimport java.nio.*;\n\nimport static org.lwjgl.openal.AL10.*;\nimport static org.lwjgl.stb.STBVorbis.*;\nimport static org.lwjgl.system.MemoryUtil.NULL;\n\npublic class SoundBuffer {\n    private final int bufferId;\n\n    private ShortBuffer pcm;\n\n    public SoundBuffer(String filePath) {\n        this.bufferId = alGenBuffers();\n        try (STBVorbisInfo info = STBVorbisInfo.malloc()) {\n            pcm = readVorbis(filePath, info);\n\n            // Copy to buffer\n            alBufferData(bufferId, info.channels() == 1 ? AL_FORMAT_MONO16 : AL_FORMAT_STEREO16, pcm, info.sample_rate());\n        }\n    }\n\n    public void cleanup() {\n        alDeleteBuffers(this.bufferId);\n        if (pcm != null) {\n            MemoryUtil.memFree(pcm);\n        }\n    }\n\n    public int getBufferId() {\n        return this.bufferId;\n    }\n\n    private ShortBuffer readVorbis(String filePath, STBVorbisInfo info) {\n        try (MemoryStack stack = MemoryStack.stackPush()) {\n            IntBuffer error = stack.mallocInt(1);\n            long decoder = stb_vorbis_open_filename(filePath, error, null);\n            if (decoder == NULL) {\n                throw new RuntimeException(\"Failed to open Ogg Vorbis file. Error: \" + error.get(0));\n            }\n\n            stb_vorbis_get_info(decoder, info);\n\n            int channels = info.channels();\n\n            int lengthSamples = stb_vorbis_stream_length_in_samples(decoder);\n\n            ShortBuffer result = MemoryUtil.memAllocShort(lengthSamples * channels);\n\n            result.limit(stb_vorbis_get_samples_short_interleaved(decoder, channels, result) * channels);\n            stb_vorbis_close(decoder);\n\n            return result;\n        }\n    }\n}\n</code></pre> <p>\u8be5\u7c7b\u7684\u6784\u9020\u51fd\u6570\u9700\u8981\u4e00\u4e2a\u58f0\u97f3\u6587\u4ef6\u8def\u5f84\uff0c\u5e76\u4ece\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7f13\u51b2\u533a\u3002\u6211\u4eec\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8c03\u7528 <code>alGenBuffers</code> \u521b\u5efa\u4e00\u4e2a OpenAL \u7f13\u51b2\u533a\u3002\u6700\u540e\uff0c\u6211\u4eec\u7684\u58f0\u97f3\u7f13\u51b2\u533a\u5c06\u7531\u4e00\u4e2a\u6574\u6570\u6807\u8bc6\uff0c\u8be5\u6574\u6570\u7c7b\u4f3c\u4e8e\u6307\u5411\u5176\u6240\u6301\u6570\u636e\u7684\u6307\u9488\u3002\u521b\u5efa\u7f13\u51b2\u533a\u540e\uff0c\u6211\u4eec\u5c06\u97f3\u9891\u6570\u636e\u8f6c\u50a8\u5230\u5176\u4e2d\u3002\u6784\u9020\u51fd\u6570\u9700\u8981 OGG \u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3a PCM \u683c\u5f0f\u3002\u8fd9\u5728 <code>readVorbis</code> \u65b9\u6cd5\u4e2d\u5b8c\u6210\u3002</p> <p>LWJGL \u7684\u65e9\u671f\u7248\u672c\u6709\u4e00\u4e2a\u540d\u4e3a <code>WaveData</code> \u7684\u8f85\u52a9\u7c7b\uff0c\u7528\u4e8e\u52a0\u8f7d WAV \u683c\u5f0f\u7684\u97f3\u9891\u6587\u4ef6\u3002\u6b64\u7c7b\u522b\u5728 LWJGL 3 \u4e2d\u4e0d\u518d\u5b58\u5728\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u4ece\u8be5\u7c7b\u83b7\u53d6\u6e90\u4ee3\u7801\u5e76\u5728\u60a8\u7684\u6e38\u620f\u4e2d\u4f7f\u7528\u5b83\uff08\u53ef\u80fd\u65e0\u9700\u4efb\u4f55\u66f4\u6539\uff09\u3002</p> <p><code>SoundBuffer</code> \u7c7b\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a <code>cleanup</code> \u65b9\u6cd5\uff0c\u7528\u4e8e\u5728\u6211\u4eec\u4f7f\u7528\u5b8c\u8d44\u6e90\u540e\u91ca\u653e\u5b83\u4eec\u3002</p> <p>\u8ba9\u6211\u4eec\u7ee7\u7eed\u5efa\u6a21\u4e00\u4e2a OpenAL\uff0c\u5b83\u5c06\u7531\u4e00\u4e2a\u540d\u4e3a <code>SoundSource</code> \u7684\u7c7b\u5b9e\u73b0\u3002\u8be5\u7c7b\u5b9a\u4e49\u5982\u4e0b\u3002</p> <pre><code>package org.lwjglb.engine.sound;\n\nimport org.joml.Vector3f;\n\nimport static org.lwjgl.openal.AL10.*;\n\npublic class SoundSource {\n\n    private final int sourceId;\n\n    public SoundSource(boolean loop, boolean relative) {\n        this.sourceId = alGenSources();\n        alSourcei(sourceId, AL_LOOPING, loop ? AL_TRUE : AL_FALSE);\n        alSourcei(sourceId, AL_SOURCE_RELATIVE, relative ? AL_TRUE : AL_FALSE);\n    }\n\n    public void cleanup() {\n        stop();\n        alDeleteSources(sourceId);\n    }\n\n    public boolean isPlaying() {\n        return alGetSourcei(sourceId, AL_SOURCE_STATE) == AL_PLAYING;\n    }\n\n    public void pause() {\n        alSourcePause(sourceId);\n    }\n\n    public void play() {\n        alSourcePlay(sourceId);\n    }\n\n    public void setBuffer(int bufferId) {\n        stop();\n        alSourcei(sourceId, AL_BUFFER, bufferId);\n    }\n\n    public void setGain(float gain) {\n        alSourcef(sourceId, AL_GAIN, gain);\n    }\n\n    public void setPosition(Vector3f position) {\n        alSource3f(sourceId, AL_POSITION, position.x, position.y, position.z);\n    }\n\n    public void stop() {\n        alSourceStop(sourceId);\n    }\n}\n</code></pre> <p>\u58f0\u6e90\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u6cd5\u6765\u8bbe\u7f6e\u5176\u4f4d\u7f6e\u3001\u589e\u76ca\u4ee5\u53ca\u63a7\u5236\u64ad\u653e\u3001\u505c\u6b62\u548c\u6682\u505c\u7684\u65b9\u6cd5\u3002\u8bf7\u8bb0\u4f4f\uff0c\u58f0\u97f3\u63a7\u5236\u64cd\u4f5c\u662f\u5728\u58f0\u6e90\u4e0a\u8fdb\u884c\u7684\uff08\u800c\u4e0d\u662f\u5728\u7f13\u51b2\u533a\u4e0a\uff09\uff0c\u8bf7\u8bb0\u4f4f\u591a\u4e2a\u58f0\u6e90\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u7f13\u51b2\u533a\u3002\u4e0e <code>SoundBuffer</code> \u7c7b\u4e00\u6837\uff0c<code>SoundSource</code> \u7531\u4e00\u4e2a\u6807\u8bc6\u7b26\u6807\u8bc6\uff0c\u8be5\u6807\u8bc6\u7b26\u5728\u6bcf\u4e2a\u64cd\u4f5c\u4e2d\u4f7f\u7528\u3002\u8be5\u7c7b\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a <code>cleanup</code> \u65b9\u6cd5\u6765\u91ca\u653e\u4fdd\u7559\u7684\u8d44\u6e90\u3002\u4f46\u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u6784\u9020\u51fd\u6570\u3002\u6211\u4eec\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8c03\u7528 <code>alGenSources</code> \u521b\u5efa\u58f0\u6e90\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u6784\u9020\u51fd\u6570\u53c2\u6570\u8bbe\u7f6e\u4e00\u4e9b\u6709\u8da3\u7684\u5c5e\u6027\u3002</p> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570 <code>loop</code> \u6307\u793a\u8981\u64ad\u653e\u7684\u58f0\u97f3\u662f\u5426\u5e94\u5904\u4e8e\u5faa\u73af\u6a21\u5f0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u5728\u58f0\u6e90\u4e0a\u8c03\u7528\u64ad\u653e\u64cd\u4f5c\u65f6\uff0c\u5f53\u97f3\u9891\u6570\u636e\u88ab\u6d88\u8017\u5b8c\u65f6\uff0c\u64ad\u653e\u505c\u6b62\u3002\u8fd9\u5bf9\u4e8e\u67d0\u4e9b\u58f0\u97f3\u6765\u8bf4\u5f88\u597d\uff0c\u4f46\u5bf9\u4e8e\u5176\u4ed6\u4e00\u4e9b\u58f0\u97f3\uff0c\u4f8b\u5982\u80cc\u666f\u97f3\u4e50\uff0c\u9700\u8981\u4e00\u904d\u53c8\u4e00\u904d\u5730\u64ad\u653e\u3002\u6211\u4eec\u65e0\u9700\u624b\u52a8\u63a7\u5236\u97f3\u9891\u4f55\u65f6\u505c\u6b62\u5e76\u91cd\u65b0\u542f\u52a8\u64ad\u653e\u8fc7\u7a0b\uff0c\u53ea\u9700\u7b80\u5355\u5730\u5c06\u5faa\u73af\u5c5e\u6027\u8bbe\u7f6e\u4e3a true\uff1a\u201c<code>alSourcei(sourceId, AL_LOOPING, AL_TRUE);</code>\u201d\u3002</p> <p>\u53e6\u4e00\u4e2a\u53c2\u6570 <code>relative</code> \u63a7\u5236\u58f0\u6e90\u7684\u4f4d\u7f6e\u662f\u5426\u76f8\u5bf9\u4e8e\u76d1\u542c\u5668\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f53\u6211\u4eec\u4e3a\u58f0\u6e90\u8bbe\u7f6e\u4f4d\u7f6e\u65f6\uff0c\u6211\u4eec\u57fa\u672c\u4e0a\u662f\u5b9a\u4e49\u5230\u76d1\u542c\u5668\u7684\u8ddd\u79bb\uff08\u7528\u5411\u91cf\u8868\u793a\uff09\uff0c\u800c\u4e0d\u662f OpenAL 3D \u573a\u666f\u4e2d\u7684\u4f4d\u7f6e\uff0c\u4e5f\u4e0d\u662f\u4e16\u754c\u4f4d\u7f6e\u3002\u8fd9\u901a\u8fc7\u8c03\u7528\u201c<code>alSourcei(sourceId, AL_SOURCE_RELATIVE, AL_TRUE);\u201d</code> \u6765\u6fc0\u6d3b\u3002\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u505a\u4ec0\u4e48\u5462\uff1f\u8fd9\u4e2a\u5c5e\u6027\u5f88\u6709\u8da3\uff0c\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e0d\u5e94\u53d7\u76d1\u542c\u5668\u8ddd\u79bb\u5f71\u54cd\uff08\u8870\u51cf\uff09\u7684\u80cc\u666f\u58f0\u97f3\u3002\u4f8b\u5982\uff0c\u8003\u8651\u80cc\u666f\u97f3\u4e50\u6216\u4e0e\u73a9\u5bb6\u63a7\u5236\u76f8\u5173\u7684\u97f3\u6548\u3002\u5982\u679c\u6211\u4eec\u5c06\u8fd9\u4e9b\u58f0\u6e90\u8bbe\u7f6e\u4e3a\u76f8\u5bf9\uff0c\u5e76\u5c06\u5b83\u4eec\u7684\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a \\((0, 0, 0)\\)\uff0c\u5b83\u4eec\u5c06\u4e0d\u4f1a\u8870\u51cf\u3002</p> <p>\u73b0\u5728\u8f6e\u5230\u76d1\u542c\u5668\u4e86\uff0c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5b83\u7531\u4e00\u4e2a\u540d\u4e3a <code>SoundListener</code> \u7684\u7c7b\u5efa\u6a21\u3002\u8fd9\u662f\u8be5\u7c7b\u7684\u5b9a\u4e49\u3002</p> <pre><code>package org.lwjglb.engine.sound;\n\nimport org.joml.Vector3f;\n\nimport static org.lwjgl.openal.AL10.*;\n\npublic class SoundListener {\n\n    public SoundListener(Vector3f position) {\n        alListener3f(AL_POSITION, position.x, position.y, position.z);\n        alListener3f(AL_VELOCITY, 0, 0, 0);\n    }\n\n    public void setOrientation(Vector3f at, Vector3f up) {\n        float[] data = new float[6];\n        data[0] = at.x;\n        data[1] = at.y;\n        data[2] = at.z;\n        data[3] = up.x;\n        data[4] = up.y;\n        data[5] = up.z;\n        alListenerfv(AL_ORIENTATION, data);\n    }\n\n    public void setPosition(Vector3f position) {\n        alListener3f(AL_POSITION, position.x, position.y, position.z);\n    }\n\n    public void setSpeed(Vector3f speed) {\n        alListener3f(AL_VELOCITY, speed.x, speed.y, speed.z);\n    }\n}\n</code></pre> <p>\u60a8\u4f1a\u6ce8\u610f\u5230\u4e0e\u4e4b\u524d\u7c7b\u7684\u533a\u522b\u5728\u4e8e\u65e0\u9700\u521b\u5efa\u76d1\u542c\u5668\u3002\u59cb\u7ec8\u4f1a\u6709\u4e00\u4e2a\u76d1\u542c\u5668\uff0c\u56e0\u6b64\u65e0\u9700\u521b\u5efa\uff0c\u5b83\u5df2\u7ecf\u5b58\u5728\u3002\u56e0\u6b64\uff0c\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u7b80\u5355\u5730\u8bbe\u7f6e\u5176\u521d\u59cb\u4f4d\u7f6e\u3002\u51fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\uff0c\u65e0\u9700 <code>cleanup</code> \u65b9\u6cd5\u3002\u8be5\u7c7b\u4e5f\u6709\u8bbe\u7f6e\u76d1\u542c\u5668\u4f4d\u7f6e\u548c\u901f\u5ea6\u7684\u65b9\u6cd5\uff0c\u4e0e <code>SoundSource</code> \u7c7b\u4e00\u6837\uff0c\u4f46\u6211\u4eec\u6709\u4e00\u4e2a\u989d\u5916\u7684\u65b9\u6cd5\u7528\u4e8e\u66f4\u6539\u76d1\u542c\u5668\u65b9\u5411\u3002\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u65b9\u5411\u662f\u4ec0\u4e48\u3002\u76d1\u542c\u5668\u65b9\u5411\u7531\u4e24\u4e2a\u5411\u91cf\u5b9a\u4e49\uff0c\u201cat\u201d\u5411\u91cf\u548c\u201cup\u201d\u5411\u91cf\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u201cat\u201d\u5411\u91cf\u57fa\u672c\u4e0a\u6307\u5411\u76d1\u542c\u5668\u9762\u5411\u7684\u65b9\u5411\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5176\u5750\u6807\u4e3a \\((0, 0, -1)\\)\u3002\u201cup\u201d\u5411\u91cf\u786e\u5b9a\u76d1\u542c\u5668\u5411\u4e0a\u7684\u65b9\u5411\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u6307\u5411 \\((0, 1, 0)\\)\u3002\u56e0\u6b64\uff0c\u8fd9\u4e24\u4e2a\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u5c31\u662f <code>alListenerfv</code> \u65b9\u6cd5\u8c03\u7528\u4e2d\u8bbe\u7f6e\u7684\u5185\u5bb9\u3002\u6b64\u65b9\u6cd5\u7528\u4e8e\u5c06\u4e00\u7ec4\u6d6e\u70b9\u6570\uff08\u53ef\u53d8\u6570\u91cf\u7684\u6d6e\u70b9\u6570\uff09\u4f20\u8f93\u5230\u5c5e\u6027\uff0c\u5728\u672c\u4f8b\u4e2d\u662f\u65b9\u5411\u3002</p> <p>\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u6709\u5fc5\u8981\u5f3a\u8c03\u4e00\u4e9b\u4e0e\u58f0\u6e90\u548c\u76d1\u542c\u5668\u901f\u5ea6\u76f8\u5173\u7684\u6982\u5ff5\u3002\u58f0\u6e90\u548c\u76d1\u542c\u5668\u4e4b\u95f4\u7684\u76f8\u5bf9\u901f\u5ea6\u5c06\u5bfc\u81f4 OpenAL \u6a21\u62df\u591a\u666e\u52d2\u6548\u5e94\u3002\u5982\u679c\u60a8\u4e0d\u77e5\u9053\uff0c\u591a\u666e\u52d2\u6548\u5e94\u662f\u5bfc\u81f4\u9760\u8fd1\u60a8\u7684\u79fb\u52a8\u7269\u4f53\u4f3c\u4e4e\u4ee5\u6bd4\u8fdc\u79bb\u65f6\u66f4\u9ad8\u7684\u9891\u7387\u53d1\u58f0\u7684\u539f\u56e0\u3002\u95ee\u9898\u662f\uff0c\u4ec5\u4ec5\u901a\u8fc7\u8bbe\u7f6e\u58f0\u6e90\u6216\u76d1\u542c\u5668\u901f\u5ea6\uff0cOpenAL \u4e0d\u4f1a\u4e3a\u60a8\u66f4\u65b0\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002\u5b83\u5c06\u4f7f\u7528\u76f8\u5bf9\u901f\u5ea6\u8ba1\u7b97\u591a\u666e\u52d2\u6548\u5e94\uff0c\u4f46\u4f4d\u7f6e\u4e0d\u4f1a\u88ab\u4fee\u6539\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u60f3\u6a21\u62df\u79fb\u52a8\u7684\u58f0\u6e90\u6216\u76d1\u542c\u5668\uff0c\u60a8\u5fc5\u987b\u8d1f\u8d23\u5728\u6e38\u620f\u5faa\u73af\u4e2d\u66f4\u65b0\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5efa\u6a21\u4e86\u5173\u952e\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5b83\u4eec\u6765\u5de5\u4f5c\uff1b\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316 OpenAL \u5e93\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <code>SoundManager</code> \u7684\u65b0\u7c7b\u6765\u5904\u7406\u6b64\u95ee\u9898\uff0c\u5176\u5f00\u5934\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.sound;\n\nimport org.joml.*;\nimport org.lwjgl.openal.*;\nimport org.lwjglb.engine.scene.Camera;\n\nimport java.nio.*;\nimport java.util.*;\n\nimport static org.lwjgl.openal.AL10.alDistanceModel;\nimport static org.lwjgl.openal.ALC10.*;\nimport static org.lwjgl.system.MemoryUtil.NULL;\n\npublic class SoundManager {\n\n    private final List&lt;SoundBuffer&gt; soundBufferList;\n    private final Map&lt;String, SoundSource&gt; soundSourceMap;\n    private long context;\n    private long device;\n    private SoundListener listener;\n\n    public SoundManager() {\n        soundBufferList = new ArrayList&lt;&gt;();\n        soundSourceMap = new HashMap&lt;&gt;();\n\n        device = alcOpenDevice((ByteBuffer) null);\n        if (device == NULL) {\n            throw new IllegalStateException(\"Failed to open the default OpenAL device.\");\n        }\n        ALCCapabilities deviceCaps = ALC.createCapabilities(device);\n        this.context = alcCreateContext(device, (IntBuffer) null);\n        if (context == NULL) {\n            throw new IllegalStateException(\"Failed to create OpenAL context.\");\n        }\n        alcMakeContextCurrent(context);\n        AL.createCapabilities(deviceCaps);\n    }\n    ...\n}\n</code></pre> <p>\u6b64\u7c7b\u6301\u6709\u5bf9 <code>SoundBuffer</code> \u548c <code>SoundSource</code> \u5b9e\u4f8b\u7684\u5f15\u7528\uff0c\u4ee5\u4fbf\u8ddf\u8e2a\u5e76\u5728\u4ee5\u540e\u6b63\u786e\u6e05\u7406\u5b83\u4eec\u3002SoundBuffers \u5b58\u50a8\u5728\u5217\u8868\u4e2d\uff0c\u4f46 SoundSources \u5b58\u50a8\u5728 <code>Map</code> \u4e2d\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u68c0\u7d22\u5b83\u4eec\u3002\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316 OpenAL \u5b50\u7cfb\u7edf\uff1a</p> <ul> <li>\u6253\u5f00\u9ed8\u8ba4\u8bbe\u5907\u3002</li> <li>\u4e3a\u8be5\u8bbe\u5907\u521b\u5efa\u529f\u80fd\u3002</li> <li>\u521b\u5efa\u4e00\u4e2a\u58f0\u97f3\u4e0a\u4e0b\u6587\uff0c\u7c7b\u4f3c\u4e8e OpenGL \u4e0a\u4e0b\u6587\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5f53\u524d\u4e0a\u4e0b\u6587\u3002</li> </ul> <p><code>SoundManager</code> \u7c7b\u5b9a\u4e49\u4e86\u6dfb\u52a0\u58f0\u6e90\u548c\u7f13\u51b2\u533a\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca\u4e00\u4e2a <code>cleanup</code> \u65b9\u6cd5\u6765\u91ca\u653e\u6240\u6709\u8d44\u6e90\uff1a</p> <pre><code>public class SoundManager {\n    ...\n    public void addSoundBuffer(SoundBuffer soundBuffer) {\n        this.soundBufferList.add(soundBuffer);\n    }\n\n    public void addSoundSource(String name, SoundSource soundSource) {\n        this.soundSourceMap.put(name, soundSource);\n    }\n\n    public void cleanup() {\n        soundSourceMap.values().forEach(SoundSource::cleanup);\n        soundSourceMap.clear();\n        soundBufferList.forEach(SoundBuffer::cleanup);\n        soundBufferList.clear();\n        if (context != NULL) {\n            alcDestroyContext(context);\n        }\n        if (device != NULL) {\n            alcCloseDevice(device);\n        }\n    }\n    ...\n}\n</code></pre> <p>\u5b83\u8fd8\u63d0\u4f9b\u4e86\u7ba1\u7406\u76d1\u542c\u5668\u548c\u58f0\u6e90\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca <code>playSoundSource</code> \u65b9\u6cd5\uff0c\u7528\u4e8e\u901a\u8fc7\u540d\u79f0\u6fc0\u6d3b\u58f0\u97f3\uff1a</p> <p><pre><code>public class SoundManager {\n    ...\n    public SoundListener getListener() {\n        return this.listener;\n    }\n\n    public SoundSource getSoundSource(String name) {\n        return this.soundSourceMap.get(name);\n    }\n\n    public void playSoundSource(String name) {\n        SoundSource soundSource = this.soundSourceMap.get(name);\n        if (soundSource != null &amp;&amp; !soundSource.isPlaying()) {\n            soundSource.play();\n        }\n    }\n\n    public void removeSoundSource(String name) {\n        this.soundSourceMap.remove(name);\n    }\n\n    public void setAttenuationModel(int model) {\n        alDistanceModel(model);\n    }\n\n    public void setListener(SoundListener listener) {\n        this.listener = listener;\n    }\n    ...\n}\n</code></pre> <code>SoundManager</code> \u7c7b\u8fd8\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c\u7528\u4e8e\u6839\u636e\u76f8\u673a\u4f4d\u7f6e\u66f4\u65b0\u76d1\u542c\u5668\u65b9\u5411\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u76d1\u542c\u5668\u5c06\u653e\u7f6e\u5728\u76f8\u673a\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\uff0c\u7ed9\u5b9a\u76f8\u673a\u4f4d\u7f6e\u548c\u65cb\u8f6c\u4fe1\u606f\uff0c\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u201cat\u201d\u548c\u201cup\u201d\u5411\u91cf\u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528\u4e0e\u76f8\u673a\u5173\u8054\u7684\u89c6\u56fe\u77e9\u9635\u3002\u6211\u4eec\u9700\u8981\u8003\u8651\u76f8\u673a\u65cb\u8f6c\u6765\u53d8\u6362\u201cat\u201d \\((0, 0, -1)\\) \u548c\u201cup\u201d \\((0, 1, 0)\\) \u5411\u91cf\u3002\u8bbe <code>cameraMatrix</code> \u662f\u4e0e\u76f8\u673a\u5173\u8054\u7684\u89c6\u56fe\u77e9\u9635\u3002\u5b9e\u73b0\u6b64\u76ee\u7684\u7684\u4ee3\u7801\u662f\uff1a</p> <pre><code>public class SoundManager {\n    ...\n    public void updateListenerPosition(Camera camera) {\n        Matrix4f viewMatrix = camera.getViewMatrix();\n        listener.setPosition(camera.getPosition());\n        Vector3f at = new Vector3f();\n        viewMatrix.positiveZ(at).negate();\n        Vector3f up = new Vector3f();\n        viewMatrix.positiveY(up);\n        listener.setOrientation(at, up);\n    }\n    ...\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u7b49\u540c\u4e8e\u4e4b\u524d\u63cf\u8ff0\u7684\u89e3\u91ca\uff0c\u5b83\u53ea\u662f\u4e00\u79cd\u66f4\u6709\u6548\u7684\u65b9\u6cd5\u3002\u5b83\u4f7f\u7528 JOML \u5e93\u4e2d\u63d0\u4f9b\u7684\u4e00\u79cd\u66f4\u5feb\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4e0d\u9700\u8981\u8ba1\u7b97\u5b8c\u6574\u7684\u9006\u77e9\u9635\uff0c\u4f46\u80fd\u8fbe\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002\u6b64\u65b9\u6cd5\u7531 JOML \u4f5c\u8005\u5728 LWJGL \u8bba\u575b\u4e2d\u63d0\u4f9b\uff0c\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u67e5\u770b\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\u5982\u679c\u60a8\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u60a8\u4f1a\u53d1\u73b0 <code>SoundManager</code> \u7c7b\u8ba1\u7b97\u4e86\u81ea\u5df1\u7684\u89c6\u56fe\u77e9\u9635\u526f\u672c\u3002</p> <p>\u5c31\u8fd9\u6837\u3002\u6211\u4eec\u62e5\u6709\u64ad\u653e\u58f0\u97f3\u6240\u9700\u7684\u6240\u6709\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4eec\u53ea\u9700\u8981\u5728 <code>Main</code> \u7c7b\u4e2d\u4f7f\u7528\u5b83\uff0c\u6211\u4eec\u5728\u5176\u4e2d\u8bbe\u7f6e\u80cc\u666f\u58f0\u97f3\u548c\u7279\u5b9a\u58f0\u97f3\uff0c\u8be5\u58f0\u97f3\u5728\u7279\u5b9a\u52a8\u753b\u5e27\u6fc0\u6d3b\uff0c\u5176\u5f3a\u5ea6\u76f8\u5bf9\u4e8e\u76d1\u542c\u5668\u4f4d\u7f6e\uff1a</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    private SoundSource playerSoundSource;\n    private SoundManager soundMgr;\n\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-16\", opts, main);\n        ...\n    }\n\n    @Override\n    public void cleanup() {\n        soundMgr.cleanup();\n    }\n\n    @Override\n    public void init(Window window, Scene scene, Render render) {\n        ...\n        lightAngle = 45;\n        initSounds(bobEntity.getPosition(), camera);\n    }\n\n    private void initSounds(Vector3f position, Camera camera) {\n        soundMgr = new SoundManager();\n        soundMgr.setAttenuationModel(AL11.AL_EXPONENT_DISTANCE);\n        soundMgr.setListener(new SoundListener(camera.getPosition()));\n\n        SoundBuffer buffer = new SoundBuffer(\"resources/sounds/creak1.ogg\");\n        soundMgr.addSoundBuffer(buffer);\n        playerSoundSource = new SoundSource(false, false);\n        playerSoundSource.setPosition(position);\n        playerSoundSource.setBuffer(buffer.getBufferId());\n        soundMgr.addSoundSource(\"CREAK\", playerSoundSource);\n\n        buffer = new SoundBuffer(\"resources/sounds/woo_scary.ogg\");\n        soundMgr.addSoundBuffer(buffer);\n        SoundSource source = new SoundSource(true, true);\n        source.setBuffer(buffer.getBufferId());\n        soundMgr.addSoundSource(\"MUSIC\", source);\n        source.play();\n    }\n\n    @Override\n    public void input(Window window, Scene scene, long diffTimeMillis, boolean inputConsumed) {\n        ...\n        soundMgr.updateListenerPosition(camera);\n    }\n\n    @Override\n    public void update(Window window, Scene scene, long diffTimeMillis) {\n        animationData.nextFrame();\n        if (animationData.getCurrentFrameIdx() == 45) {\n            playerSoundSource.play();\n        }\n    }\n}\n</code></pre> <p>\u6700\u540e\u4e00\u70b9\u3002OpenAL \u8fd8\u5141\u8bb8\u60a8\u901a\u8fc7\u4f7f\u7528 alDistanceModel \u5e76\u4f20\u9012\u6240\u9700\u7684\u6a21\u578b\uff08<code>AL11.AL_EXPONENT_DISTANCE</code>\u3001<code>AL_EXPONENT_DISTANCE_CLAMP</code> \u7b49\uff09\u6765\u66f4\u6539\u8870\u51cf\u6a21\u578b\u3002\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u5b83\u4eec\u5e76\u68c0\u67e5\u7ed3\u679c\u3002</p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"17-shadows/","title":"\u7b2c17\u7ae0 - \u9634\u5f71\uff08Shadows\uff09","text":"<p>\u76ee\u524d\uff0c\u6211\u4eec\u80fd\u591f\u8868\u793a\u5149\u7ebf\u5982\u4f55\u5f71\u54cd3D\u573a\u666f\u4e2d\u7684\u7269\u4f53\u3002\u63a5\u6536\u5230\u66f4\u591a\u5149\u7ebf\u7684\u7269\u4f53\u6bd4\u672a\u63a5\u6536\u5230\u5149\u7ebf\u7684\u7269\u4f53\u663e\u793a\u5f97\u66f4\u4eae\u3002\u7136\u800c\uff0c\u6211\u4eec\u4ecd\u7136\u65e0\u6cd5\u6295\u5c04\u9634\u5f71\u3002\u9634\u5f71\u5c06\u589e\u52a03D\u573a\u666f\u7684\u771f\u5b9e\u611f\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5c06\u5728\u672c\u7ae0\u4e2d\u505a\u7684\u4e8b\u60c5\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"17-shadows/#_1","title":"\u9634\u5f71\u6620\u5c04","text":"<p>\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u79cd\u540d\u4e3a\u9634\u5f71\u6620\u5c04\uff08Shadow mapping\uff09\u7684\u6280\u672f\uff0c\u8be5\u6280\u672f\u5728\u6e38\u620f\u4e2d\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5e76\u4e14\u4e0d\u4f1a\u4e25\u91cd\u5f71\u54cd\u5f15\u64ce\u6027\u80fd\u3002\u9634\u5f71\u6620\u5c04\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u7b80\u5355\u6613\u61c2\uff0c\u4f46\u5b9e\u73b0\u8d77\u6765\u5374\u6709\u4e9b\u56f0\u96be\u3002\u6216\u8005\uff0c\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u4ee5\u4e00\u79cd\u901a\u7528\u7684\u65b9\u5f0f\u5b9e\u73b0\u5b83\uff0c\u6db5\u76d6\u6240\u6709\u6f5c\u5728\u60c5\u51b5\u5e76\u4ea7\u751f\u4e00\u81f4\u7684\u7ed3\u679c\uff0c\u662f\u975e\u5e38\u56f0\u96be\u7684\u3002</p> <p>\u6240\u4ee5\u8ba9\u6211\u4eec\u5f00\u59cb\u601d\u8003\u5982\u4f55\u68c0\u67e5\u7279\u5b9a\u533a\u57df\uff08\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7247\u6bb5\uff09\u662f\u5426\u5904\u4e8e\u9634\u5f71\u4e2d\u3002\u5728\u7ed8\u5236\u8be5\u533a\u57df\u65f6\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u5411\u5149\u6e90\u6295\u5c04\u5149\u7ebf\u5e76\u5230\u8fbe\u5149\u6e90\u800c\u6ca1\u6709\u4efb\u4f55\u78b0\u649e\uff0c\u90a3\u4e48\u8be5\u50cf\u7d20\u5c31\u5728\u5149\u7ebf\u4e2d\u3002\u5982\u679c\u4e0d\u80fd\uff0c\u8be5\u50cf\u7d20\u5c31\u5728\u9634\u5f71\u4e2d\u3002</p> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u70b9\u5149\u6e90\u7684\u60c5\u51b5\uff1a\u70b9PA\u53ef\u4ee5\u5230\u8fbe\u5149\u6e90\uff0c\u4f46\u70b9PB\u548cPC\u4e0d\u80fd\uff0c\u56e0\u6b64\u5b83\u4eec\u5904\u4e8e\u9634\u5f71\u4e2d\u3002</p> <p></p> <p>\u6211\u4eec\u5982\u4f55\u6709\u6548\u5730\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u6295\u5c04\u8be5\u5149\u7ebf\u800c\u6ca1\u6709\u78b0\u649e\uff1f\u5149\u6e90\u7406\u8bba\u4e0a\u53ef\u4ee5\u6295\u5c04\u65e0\u9650\u7684\u5149\u7ebf\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u68c0\u67e5\u5149\u7ebf\u662f\u5426\u88ab\u963b\u6321\uff1f \u6211\u4eec\u53ef\u4ee5\u505a\u7684\u662f\uff0c\u4e0d\u662f\u6295\u5c04\u5149\u7ebf\uff0c\u800c\u662f\u4ece\u5149\u7684\u89d2\u5ea6\u770b3D\u573a\u666f\uff0c\u5e76\u4ece\u8be5\u4f4d\u7f6e\u6e32\u67d3\u573a\u666f\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u76f8\u673a\u8bbe\u7f6e\u5728\u5149\u7684\u4f4d\u7f6e\u5e76\u6e32\u67d3\u573a\u666f\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5b58\u50a8\u6bcf\u4e2a\u7247\u6bb5\u7684\u6df1\u5ea6\u3002\u8fd9\u76f8\u5f53\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u7247\u6bb5\u5230\u5149\u6e90\u7684\u8ddd\u79bb\u3002\u6700\u540e\uff0c\u6211\u4eec\u6240\u505a\u7684\u662f\u5c06\u4ece\u5149\u6e90\u770b\u5230\u7684\u6700\u5c0f\u8ddd\u79bb\u5b58\u50a8\u4e3a\u9634\u5f71\u8d34\u56fe\uff08shadow map\uff09\u3002</p> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u4e00\u4e2a\u6f02\u6d6e\u5728\u5e73\u9762\u4e0a\u65b9\u7684\u7acb\u65b9\u4f53\u548c\u5782\u76f4\u7684\u5149\u7ebf\u3002</p> <p></p> <p>\u4ece\u5149\u7684\u89d2\u5ea6\u770b\u573a\u666f\u4f1a\u662f\u8fd9\u6837\u7684\uff08\u989c\u8272\u8d8a\u6df1\uff0c\u79bb\u5149\u6e90\u8d8a\u8fd1\uff09\u3002</p> <p></p> <p>\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u5f80\u5e38\u4e00\u6837\u6e32\u67d33D\u573a\u666f\uff0c\u5e76\u4f7f\u7528\u5b58\u50a8\u5728\u9634\u5f71\u8d34\u56fe\u4e2d\u7684\u6700\u5c0f\u8ddd\u79bb\u68c0\u67e5\u6bcf\u4e2a\u7247\u6bb5\u5230\u5149\u6e90\u7684\u8ddd\u79bb\u3002\u5982\u679c\u8ddd\u79bb\u5c0f\u4e8e\u9634\u5f71\u8d34\u56fe\u4e2d\u5b58\u50a8\u7684\u503c\uff0c\u5219\u7269\u4f53\u5728\u5149\u7ebf\u4e2d\uff0c\u5426\u5219\u5728\u9634\u5f71\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u6709\u51e0\u4e2a\u7269\u4f53\u53ef\u80fd\u88ab\u540c\u4e00\u6761\u5149\u7ebf\u51fb\u4e2d\uff0c\u4f46\u6211\u4eec\u5b58\u50a8\u7684\u662f\u6700\u5c0f\u8ddd\u79bb\u3002</p> <p>\u56e0\u6b64\uff0c\u9634\u5f71\u6620\u5c04\u662f\u4e00\u4e2a\u4e24\u6b65\u8fc7\u7a0b\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u6211\u4eec\u4ece\u5149\u7a7a\u95f4\u6e32\u67d3\u573a\u666f\u5230\u9634\u5f71\u8d34\u56fe\u4e2d\uff0c\u4ee5\u83b7\u53d6\u6700\u5c0f\u8ddd\u79bb\u3002</li> <li>\u5176\u6b21\uff0c\u6211\u4eec\u4ece\u76f8\u673a\u89c6\u89d2\u6e32\u67d3\u573a\u666f\uff0c\u5e76\u4f7f\u7528\u8be5\u6df1\u5ea6\u56fe\u6765\u8ba1\u7b97\u7269\u4f53\u662f\u5426\u5904\u4e8e\u9634\u5f71\u4e2d\u3002</li> </ul> <p>\u4e3a\u4e86\u6e32\u67d3\u6df1\u5ea6\u56fe\uff0c\u6211\u4eec\u9700\u8981\u8c08\u8c08\u6df1\u5ea6\u7f13\u51b2\u533a\u3002\u5f53\u6211\u4eec\u6e32\u67d3\u573a\u666f\u65f6\uff0c\u6240\u6709\u6df1\u5ea6\u4fe1\u606f\u90fd\u5b58\u50a8\u5728\u4e00\u4e2a\u540d\u4e3a\u6df1\u5ea6\u7f13\u51b2\u533a\uff08\u6216z\u7f13\u51b2\u533a\uff09\u7684\u7f13\u51b2\u533a\u4e2d\u3002\u8be5\u6df1\u5ea6\u4fe1\u606f\u662f\u6e32\u67d3\u7684\u6bcf\u4e2a\u7247\u6bb5\u7684\\(z\\)\u503c\u3002\u5982\u679c\u60a8\u56de\u60f3\u8d77\u7b2c\u4e00\u7ae0\uff0c\u6211\u4eec\u5728\u6e32\u67d3\u573a\u666f\u65f6\u6240\u505a\u7684\u662f\u4ece\u4e16\u754c\u5750\u6807\u8f6c\u6362\u4e3a\u5c4f\u5e55\u5750\u6807\u3002\u6211\u4eec\u6b63\u5728\u7ed8\u5236\u5230\u4e00\u4e2a\u5750\u6807\u7a7a\u95f4\uff0c\u5176\\(x\\)\u548c\\(y\\)\u8f74\u7684\u8303\u56f4\u4ece\\(0\\)\u5230\\(1\\)\u3002\u5982\u679c\u4e00\u4e2a\u7269\u4f53\u6bd4\u53e6\u4e00\u4e2a\u7269\u4f53\u66f4\u8fdc\uff0c\u6211\u4eec\u5fc5\u987b\u8ba1\u7b97\u8fd9\u5982\u4f55\u901a\u8fc7\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff08Perspective Projection Matrix\uff09\u5f71\u54cd\u5b83\u4eec\u7684\\(x\\)\u548c\\(y\\)\u5750\u6807\u3002\u8fd9\u4e0d\u662f\u6839\u636e\\(z\\)\u503c\u81ea\u52a8\u8ba1\u7b97\u7684\uff0c\u800c\u662f\u5fc5\u987b\u7531\u6211\u4eec\u5b8c\u6210\u3002\u5b9e\u9645\u4e0a\u5b58\u50a8\u5728z\u5750\u6807\u4e2d\u7684\u662f\u8be5\u7247\u6bb5\u7684\u6df1\u5ea6\uff0c\u4ec5\u6b64\u800c\u5df2\u3002</p>"},{"location":"17-shadows/#_2","title":"\u7ea7\u8054\u9634\u5f71\u8d34\u56fe","text":"<p>\u4e0a\u9762\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5c31\u5176\u672c\u8eab\u800c\u8a00\uff0c\u5bf9\u4e8e\u5f00\u653e\u7a7a\u95f4\u4e0d\u4f1a\u4ea7\u751f\u9ad8\u8d28\u91cf\u7684\u7ed3\u679c\u3002\u539f\u56e0\u662f\u9634\u5f71\u5206\u8fa8\u7387\u53d7\u7eb9\u7406\u5927\u5c0f\u7684\u9650\u5236\u3002\u6211\u4eec\u73b0\u5728\u8986\u76d6\u7684\u662f\u4e00\u4e2a\u6f5c\u5728\u7684\u5de8\u5927\u533a\u57df\uff0c\u800c\u6211\u4eec\u7528\u6765\u5b58\u50a8\u6df1\u5ea6\u4fe1\u606f\u7684\u7eb9\u7406\u6ca1\u6709\u8db3\u591f\u7684\u5206\u8fa8\u7387\u6765\u83b7\u5f97\u597d\u7684\u7ed3\u679c\u3002\u60a8\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u89e3\u51b3\u65b9\u6848\u53ea\u662f\u589e\u52a0\u7eb9\u7406\u5206\u8fa8\u7387\uff0c\u4f46\u8fd9\u4e0d\u8db3\u4ee5\u5b8c\u5168\u89e3\u51b3\u95ee\u9898\u3002\u60a8\u9700\u8981\u5de8\u5927\u7684\u7eb9\u7406\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u56e0\u6b64\uff0c\u4e00\u65e6\u89e3\u91ca\u4e86\u57fa\u7840\u77e5\u8bc6\uff0c\u6211\u4eec\u5c06\u89e3\u91ca\u4e00\u79cd\u79f0\u4e3a\u7ea7\u8054\u9634\u5f71\u8d34\u56fe\uff08Cascaded Shadow Maps\uff0c\u7b80\u79f0CSM\uff09\u7684\u6280\u672f\uff0c\u5b83\u662f\u5bf9\u666e\u901a\u9634\u5f71\u8d34\u56fe\u7684\u6539\u8fdb\u3002</p> <p>\u5173\u952e\u6982\u5ff5\u662f\uff0c\u9760\u8fd1\u76f8\u673a\u7684\u7269\u4f53\u7684\u9634\u5f71\u9700\u8981\u6bd4\u8fdc\u5904\u7269\u4f53\u7684\u9634\u5f71\u5177\u6709\u66f4\u9ad8\u7684\u8d28\u91cf\u3002\u4e00\u79cd\u65b9\u6cd5\u53ef\u80fd\u53ea\u662f\u4e3a\u9760\u8fd1\u76f8\u673a\u7684\u7269\u4f53\u6e32\u67d3\u9634\u5f71\uff0c\u4f46\u8fd9\u4f1a\u5bfc\u81f4\u9634\u5f71\u5728\u6211\u4eec\u7a7f\u8fc7\u573a\u666f\u65f6\u51fa\u73b0/\u6d88\u5931\u3002</p> <p>\u7ea7\u8054\u9634\u5f71\u8d34\u56fe\u4f7f\u7528\u7684\u65b9\u6cd5\u662f\u5c06\u89c6\u9525\u4f53\u5206\u6210\u51e0\u4e2a\u5206\u5272\u3002\u9760\u8fd1\u76f8\u673a\u7684\u5206\u5272\u8986\u76d6\u7684\u7a7a\u95f4\u8f83\u5c0f\uff0c\u800c\u8fdc\u5904\u533a\u57df\u8986\u76d6\u7684\u7a7a\u95f4\u8981\u5bbd\u5f97\u591a\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u4e00\u4e2a\u5206\u6210\u4e09\u4e2a\u5206\u5272\u7684\u89c6\u9525\u4f53\u3002</p> <p></p> <p>\u5bf9\u4e8e\u8fd9\u4e9b\u5206\u5272\u4e2d\u7684\u6bcf\u4e00\u4e2a\uff0c\u90fd\u4f1a\u6e32\u67d3\u6df1\u5ea6\u56fe\uff0c\u8c03\u6574\u5149\u7684\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u4ee5\u9002\u5e94\u6bcf\u4e2a\u5206\u5272\u3002\u56e0\u6b64\uff0c\u5b58\u50a8\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u8986\u76d6\u4e86\u89c6\u9525\u4f53\u7684\u7f29\u5c0f\u533a\u57df\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u6700\u9760\u8fd1\u76f8\u673a\u7684\u5206\u5272\u8986\u76d6\u7684\u7a7a\u95f4\u8f83\u5c11\uff0c\u6df1\u5ea6\u5206\u8fa8\u7387\u4f1a\u589e\u52a0\u3002</p> <p>\u4ece\u4e0a\u9762\u7684\u89e3\u91ca\u53ef\u4ee5\u63a8\u65ad\u51fa\uff0c\u6211\u4eec\u5c06\u9700\u8981\u4e0e\u5206\u5272\u6570\u91cf\u4e00\u6837\u591a\u7684\u6df1\u5ea6\u7eb9\u7406\uff0c\u5e76\u4e14\u6211\u4eec\u8fd8\u5c06\u66f4\u6539\u6bcf\u4e2a\u5206\u5272\u7684\u5149\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u3002\u56e0\u6b64\uff0c\u5e94\u7528CSMs\u7684\u6b65\u9aa4\u662f\uff1a</p> <ul> <li> <p>\u5c06\u89c6\u9525\u4f53\u5206\u6210n\u4e2a\u5206\u5272\u3002</p> </li> <li> <p>\u5728\u6e32\u67d3\u6df1\u5ea6\u56fe\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u5272\uff1a</p> </li> <li> <p>\u8ba1\u7b97\u5149\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u3002</p> </li> <li> <p>\u4ece\u5149\u7684\u89d2\u5ea6\u6e32\u67d3\u573a\u666f\u5230\u5355\u72ec\u7684\u6df1\u5ea6\u56fe\u4e2d\u3002</p> </li> <li> <p>\u5728\u6e32\u67d3\u573a\u666f\u65f6\uff1a</p> </li> <li> <p>\u4f7f\u7528\u4e0a\u9762\u8ba1\u7b97\u7684\u6df1\u5ea6\u56fe\u3002</p> </li> <li> <p>\u786e\u5b9a\u8981\u7ed8\u5236\u7684\u7247\u6bb5\u6240\u5c5e\u7684\u5206\u5272\u3002</p> </li> <li> <p>\u50cf\u5728\u9634\u5f71\u8d34\u56fe\u4e2d\u4e00\u6837\u8ba1\u7b97\u9634\u5f71\u56e0\u5b50\u3002</p> </li> </ul> <p>\u6b63\u5982\u60a8\u6240\u89c1\uff0cCSMs\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u6211\u4eec\u9700\u8981\u4ece\u5149\u7684\u89d2\u5ea6\u4e3a\u6bcf\u4e2a\u5206\u5272\u6e32\u67d3\u573a\u666f\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u901a\u5e38\u53ea\u7528\u4e8e\u5f00\u653e\u7a7a\u95f4\uff08\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u5bf9\u9634\u5f71\u8ba1\u7b97\u5e94\u7528\u7f13\u5b58\u4ee5\u51cf\u5c11\u5f00\u9500\uff09\u3002</p>"},{"location":"17-shadows/#_3","title":"\u5b9e\u73b0","text":"<p>\u6211\u4eec\u5c06\u521b\u5efa\u7684\u7b2c\u4e00\u4e2a\u7c7b\u5c06\u8d1f\u8d23\u8ba1\u7b97\u4ece\u5149\u89d2\u5ea6\u6e32\u67d3\u9634\u5f71\u8d34\u56fe\u6240\u9700\u7684\u77e9\u9635\u3002\u8be5\u7c7b\u540d\u4e3a<code>CascadeShadow</code>\uff0c\u5e76\u5c06\u5b58\u50a8\u7279\u5b9a\u7ea7\u8054\u9634\u5f71\u5206\u5272\u7684\u6295\u5f71\u89c6\u56fe\u77e9\u9635\uff08\u4ece\u5149\u89d2\u5ea6\uff09\uff08<code>projViewMatrix</code>\u5c5e\u6027\uff09\u53ca\u5176\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u7684\u8fdc\u5e73\u9762\u8ddd\u79bb\uff08<code>splitDistance</code>\u5c5e\u6027\uff09\uff1a</p> <pre><code>public class CascadeShadow {\n\n    public static final int SHADOW_MAP_CASCADE_COUNT = 3;\n\n    private Matrix4f projViewMatrix;\n    private float splitDistance;\n\n    public CascadeShadow() {\n        projViewMatrix = new Matrix4f();\n    }\n    ...\n    public Matrix4f getProjViewMatrix() {\n        return projViewMatrix;\n    }\n\n    public float getSplitDistance() {\n        return splitDistance;\n    }\n    ...\n}\n</code></pre> <p><code>CascadeShadow</code>\u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u7528\u4e8e\u4f7f\u7528\u9002\u5f53\u7684\u503c\u521d\u59cb\u5316\u7ea7\u8054\u9634\u5f71\u5b9e\u4f8b\u5217\u8868\uff0c\u540d\u4e3a<code>updateCascadeShadows</code>\u3002\u8be5\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>public class CascadeShadow {\n    ...\n    public static void updateCascadeShadows(List&lt;CascadeShadow&gt; cascadeShadows, Scene scene) {\n        Matrix4f viewMatrix = scene.getCamera().getViewMatrix();\n        Matrix4f projMatrix = scene.getProjection().getProjMatrix();\n        Vector4f lightPos = new Vector4f(scene.getSceneLights().getDirLight().getDirection(), 0);\n\n        float cascadeSplitLambda = 0.95f;\n\n        float[] cascadeSplits = new float[SHADOW_MAP_CASCADE_COUNT];\n\n        float nearClip = projMatrix.perspectiveNear();\n        float farClip = projMatrix.perspectiveFar();\n        float clipRange = farClip - nearClip;\n\n        float minZ = nearClip;\n        float maxZ = nearClip + clipRange;\n\n        float range = maxZ - minZ;\n        float ratio = maxZ / minZ;\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u9996\u5148\u68c0\u7d22\u8ba1\u7b97\u5206\u5272\u6570\u636e\u6240\u9700\u7684\u77e9\u9635\uff0c\u5373\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\u3001\u5149\u4f4d\u7f6e\u4ee5\u53ca\u6211\u4eec\u7528\u4e8e\u6e32\u67d3\u573a\u666f\u7684\u900f\u89c6\u6295\u5f71\u7684\u8fd1\u88c1\u526a\u9762\u548c\u8fdc\u88c1\u526a\u9762\u3002\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2a\u9634\u5f71\u7ea7\u8054\u7684\u5206\u5272\u8ddd\u79bb\uff1a</p> <pre><code>public class CascadeShadow {\n    ...\n    public static void updateCascadeShadows(List&lt;CascadeShadow&gt; cascadeShadows, Scene scene) {\n        ...\n        // Calculate split depths based on view camera frustum\n        // Based on method presented in https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch10.html\n        for (int i = 0; i &lt; SHADOW_MAP_CASCADE_COUNT; i++) {\n            float p = (i + 1) / (float) (SHADOW_MAP_CASCADE_COUNT);\n            float log = (float) (minZ * java.lang.Math.pow(ratio, p));\n            float uniform = minZ + range * p;\n            float d = cascadeSplitLambda * (log - uniform) + uniform;\n            cascadeSplits[i] = (d - nearClip) / clipRange;\n        }\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u7528\u4e8e\u8ba1\u7b97\u5206\u5272\u4f4d\u7f6e\u7684\u7b97\u6cd5\u4f7f\u7528\u5bf9\u6570\u65b9\u6848\u6765\u66f4\u597d\u5730\u5206\u5e03\u8ddd\u79bb\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u5747\u5300\u5206\u5272\u7ea7\u8054\uff0c\u6216\u6839\u636e\u9884\u8bbe\u6bd4\u4f8b\u5206\u5272\u3002\u5bf9\u6570\u65b9\u6848\u7684\u4f18\u70b9\u662f\u5b83\u4e3a\u8fd1\u89c6\u56fe\u5206\u5272\u4f7f\u7528\u66f4\u5c11\u7684\u7a7a\u95f4\uff0c\u4ece\u800c\u4e3a\u9760\u8fd1\u76f8\u673a\u7684\u5143\u7d20\u5b9e\u73b0\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\u3002\u60a8\u53ef\u4ee5\u67e5\u770bNVIDIA\u6587\u7ae0\u4e86\u89e3\u6570\u5b66\u7ec6\u8282\u3002<code>cascadeSplits</code>\u6570\u7ec4\u5c06\u5305\u542b\u4e00\u7cfb\u5217\u5728[0, 1]\u8303\u56f4\u5185\u7684\u503c\uff0c\u6211\u4eec\u7a0d\u540e\u5c06\u4f7f\u7528\u8fd9\u4e9b\u503c\u6765\u6267\u884c\u6240\u9700\u7684\u8ba1\u7b97\uff0c\u4ee5\u83b7\u53d6\u6bcf\u4e2a\u7ea7\u8054\u7684\u5206\u5272\u8ddd\u79bb\u548c\u6295\u5f71\u77e9\u9635\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5faa\u73af\u6765\u8ba1\u7b97\u7ea7\u8054\u5206\u5272\u7684\u6240\u6709\u6570\u636e\u3002\u5728\u8be5\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5728NDC\uff08\u5f52\u4e00\u5316\u8bbe\u5907\u5750\u6807\uff0cNormalized Device Coordinates\uff09\u7a7a\u95f4\u4e2d\u521b\u5efa\u89c6\u9525\u4f53\u89d2\u70b9\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u89c6\u56fe\u548c\u900f\u89c6\u77e9\u9635\u7684\u9006\u77e9\u9635\u5c06\u8fd9\u4e9b\u5750\u6807\u6295\u5f71\u5230\u4e16\u754c\u7a7a\u95f4\u3002\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f\u65b9\u5411\u5149\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u6765\u6e32\u67d3\u9634\u5f71\u8d34\u56fe\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5c06NDC\u5750\u6807\u8bbe\u7f6e\u4e3a\u5305\u542b\u53ef\u89c1\u4f53\u79ef\u7684\u7acb\u65b9\u4f53\u7684\u9650\u5236\uff08\u8fdc\u5904\u7684\u7269\u4f53\u4e0d\u4f1a\u50cf\u5728\u900f\u89c6\u6295\u5f71\u4e2d\u90a3\u6837\u6e32\u67d3\u5f97\u66f4\u5c0f\uff09\u3002</p> <pre><code>public class CascadeShadow {\n    ...\n    public static void updateCascadeShadows(List&lt;CascadeShadow&gt; cascadeShadows, Scene scene) {\n        ...\n        // Calculate orthographic projection matrix for each cascade\n        float lastSplitDist = 0.0f;\n        for (int i = 0; i &lt; SHADOW_MAP_CASCADE_COUNT; i++) {\n            float splitDist = cascadeSplits[i];\n\n            Vector3f[] frustumCorners = new Vector3f[]{\n                    new Vector3f(-1.0f, 1.0f, -1.0f),\n                    new Vector3f(1.0f, 1.0f, -1.0f),\n                    new Vector3f(1.0f, -1.0f, -1.0f),\n                    new Vector3f(-1.0f, -1.0f, -1.0f),\n                    new Vector3f(-1.0f, 1.0f, 1.0f),\n                    new Vector3f(1.0f, 1.0f, 1.0f),\n                    new Vector3f(1.0f, -1.0f, 1.0f),\n                    new Vector3f(-1.0f, -1.0f, 1.0f),\n            };\n\n            // Project frustum corners into world space\n            Matrix4f invCam = (new Matrix4f(projMatrix).mul(viewMatrix)).invert();\n            for (int j = 0; j &lt; 8; j++) {\n                Vector4f invCorner = new Vector4f(frustumCorners[j], 1.0f).mul(invCam);\n                frustumCorners[j] = new Vector3f(invCorner.x / invCorner.w, invCorner.y / invCorner.w, invCorner.z / invCorner.w);\n            }\n            ...\n        }\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u6b64\u65f6\uff0c<code>frustumCorners</code>\u53d8\u91cf\u5305\u542b\u5305\u542b\u53ef\u89c1\u7a7a\u95f4\u7684\u7acb\u65b9\u4f53\u7684\u5750\u6807\uff0c\u4f46\u6211\u4eec\u9700\u8981\u6b64\u7279\u5b9a\u7ea7\u8054\u5206\u5272\u7684\u4e16\u754c\u5750\u6807\u3002\u56e0\u6b64\uff0c\u4e0b\u4e00\u6b65\u662f\u5c06\u65b9\u6cd5\u5f00\u5934\u8ba1\u7b97\u7684\u7ea7\u8054\u8ddd\u79bb\u6295\u5165\u4f7f\u7528\u3002\u6211\u4eec\u6839\u636e\u9884\u5148\u8ba1\u7b97\u7684\u8ddd\u79bb\u8c03\u6574\u6b64\u7279\u5b9a\u5206\u5272\u7684\u8fd1\u5e73\u9762\u548c\u8fdc\u5e73\u9762\u7684\u5750\u6807\uff1a</p> <pre><code>public class CascadeShadow {\n    ...\n    public static void updateCascadeShadows(List&lt;CascadeShadow&gt; cascadeShadows, Scene scene) {\n        ...\n        for (int i = 0; i &lt; SHADOW_MAP_CASCADE_COUNT; i++) {\n            ...\n            for (int j = 0; j &lt; 4; j++) {\n                Vector3f dist = new Vector3f(frustumCorners[j + 4]).sub(frustumCorners[j]);\n                frustumCorners[j + 4] = new Vector3f(frustumCorners[j]).add(new Vector3f(dist).mul(splitDist));\n                frustumCorners[j] = new Vector3f(frustumCorners[j]).add(new Vector3f(dist).mul(lastSplitDist));\n            }\n            ...\n        }\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u4e4b\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u8be5\u5206\u5272\u4e2d\u5fc3\u7684\u5750\u6807\uff08\u4ecd\u5728\u4e16\u754c\u5750\u6807\u4e2d\uff09\uff0c\u4ee5\u53ca\u8be5\u5206\u5272\u7684\u534a\u5f84\uff1a</p> <pre><code>public class CascadeShadow {\n    ...\n    public static void updateCascadeShadows(List&lt;CascadeShadow&gt; cascadeShadows, Scene scene) {\n        ...\n        for (int i = 0; i &lt; SHADOW_MAP_CASCADE_COUNT; i++) {\n            ...\n            // Get frustum center\n            Vector3f frustumCenter = new Vector3f(0.0f);\n            for (int j = 0; j &lt; 8; j++) {\n                frustumCenter.add(frustumCorners[j]);\n            }\n            frustumCenter.div(8.0f);\n\n            float radius = 0.0f;\n            for (int j = 0; j &lt; 8; j++) {\n                float distance = (new Vector3f(frustumCorners[j]).sub(frustumCenter)).length();\n                radius = java.lang.Math.max(radius, distance);\n            }\n            radius = (float) java.lang.Math.ceil(radius * 16.0f) / 16.0f;\n            ...\n        }\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u8ba1\u7b97\u4ece\u5149\u89d2\u5ea6\u7684\u89c6\u56fe\u77e9\u9635\u548c\u6b63\u4ea4\u6295\u5f71\u77e9\u9635\u4ee5\u53ca\u5206\u5272\u8ddd\u79bb\uff08\u5728\u76f8\u673a\u89c6\u56fe\u5750\u6807\u4e2d\uff09\uff1a</p> <p><pre><code>public class CascadeShadow {\n    ...\n    public static void updateCascadeShadows(List&lt;CascadeShadow&gt; cascadeShadows, Scene scene) {\n        ...\n        for (int i = 0; i &lt; SHADOW_MAP_CASCADE_COUNT; i++) {\n            ...\n            Vector3f maxExtents = new Vector3f(radius);\n            Vector3f minExtents = new Vector3f(maxExtents).mul(-1);\n\n            Vector3f lightDir = (new Vector3f(lightPos.x, lightPos.y, lightPos.z).mul(-1)).normalize();\n            Vector3f eye = new Vector3f(frustumCenter).sub(new Vector3f(lightDir).mul(-minExtents.z));\n            Vector3f up = new Vector3f(0.0f, 1.0f, 0.0f);\n            Matrix4f lightViewMatrix = new Matrix4f().lookAt(eye, frustumCenter, up);\n            Matrix4f lightOrthoMatrix = new Matrix4f().ortho\n                    (minExtents.x, maxExtents.x, minExtents.y, maxExtents.y, 0.0f, maxExtents.z - minExtents.z, true);\n\n            // Store split distance and matrix in cascade\n            CascadeShadow cascadeShadow = cascadeShadows.get(i);\n            cascadeShadow.splitDistance = (nearClip + splitDist * clipRange) * -1.0f;\n            cascadeShadow.projViewMatrix = lightOrthoMatrix.mul(lightViewMatrix);\n\n            lastSplitDist = cascadeSplits[i];\n        }\n        ...\n    }\n    ...\n}\n</code></pre> \u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5b8c\u6210\u4e86\u8ba1\u7b97\u6e32\u67d3\u9634\u5f71\u8d34\u56fe\u6240\u9700\u77e9\u9635\u7684\u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u7f16\u5199\u6267\u884c\u8be5\u6e32\u67d3\u6240\u9700\u7684\u7c7b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u6e32\u67d3\u5230\u4e0d\u540c\u7684\u56fe\u50cf\uff08\u6df1\u5ea6\u56fe\u50cf\uff09\u3002\u6bcf\u4e2a\u7ea7\u8054\u8d34\u56fe\u5206\u5272\u90fd\u9700\u8981\u4e00\u4e2a\u7eb9\u7406\u3002\u4e3a\u4e86\u7ba1\u7406\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>ArrTexture</code>\u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5c06\u521b\u5efa\u4e00\u7ec4\u7eb9\u7406\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport java.nio.ByteBuffer;\n\nimport static org.lwjgl.opengl.GL11.*;\nimport static org.lwjgl.opengl.GL12.GL_CLAMP_TO_EDGE;\nimport static org.lwjgl.opengl.GL14.GL_TEXTURE_COMPARE_MODE;\n\npublic class ArrTexture {\n\n    private final int[] ids;\n\n    public ArrTexture(int numTextures, int width, int height, int pixelFormat) {\n        ids = new int[numTextures];\n        glGenTextures(ids);\n\n        for (int i = 0; i &lt; numTextures; i++) {\n            glBindTexture(GL_TEXTURE_2D, ids[i]);\n            glTexImage2D(GL_TEXTURE_2D, 0, GL_DEPTH_COMPONENT, width, height, 0, pixelFormat, GL_FLOAT, (ByteBuffer) null);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_COMPARE_MODE, GL_NONE);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);\n            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);\n        }\n    }\n\n    public void cleanup() {\n        for (int id : ids) {\n            glDeleteTextures(id);\n        }\n    }\n\n    public int[] getIds() {\n        return ids;\n    }\n}\n</code></pre> <p>\u6211\u4eec\u5c06\u7eb9\u7406\u73af\u7ed5\u6a21\u5f0f\u8bbe\u7f6e\u4e3a<code>GL_CLAMP_TO_EDGE</code>\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u5728\u8d85\u51fa\\([0, 1]\\)\u8303\u56f4\u65f6\u7eb9\u7406\u91cd\u590d\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u80fd\u591f\u521b\u5efa\u7a7a\u7eb9\u7406\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u5c06\u573a\u666f\u6e32\u67d3\u5230\u5176\u4e2d\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5e27\u7f13\u51b2\u5bf9\u8c61\u3002\u5e27\u7f13\u51b2\u662f\u53ef\u7528\u4f5c\u6e32\u67d3\u76ee\u6807\u7684\u7f13\u51b2\u533a\u96c6\u5408\u3002\u5f53\u6211\u4eec\u4e00\u76f4\u5728\u6e32\u67d3\u5230\u5c4f\u5e55\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662fOpenGL\u7684\u9ed8\u8ba4\u7f13\u51b2\u533a\u3002OpenGL\u5141\u8bb8\u6211\u4eec\u4f7f\u7528FBOs\u6e32\u67d3\u5230\u7528\u6237\u5b9a\u4e49\u7684\u7f13\u51b2\u533a\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>ShadowBuffer</code>\u7684\u65b0\u7c7b\u6765\u9694\u79bb\u521b\u5efa\u7528\u4e8e\u9634\u5f71\u6620\u5c04\u7684FBOs\u7684\u8fc7\u7a0b\u7684\u5176\u4f59\u4ee3\u7801\u3002\u8fd9\u662f\u8be5\u7c7b\u7684\u5b9a\u4e49\u3002</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport static org.lwjgl.opengl.GL11.*;\nimport static org.lwjgl.opengl.GL13.glActiveTexture;\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class ShadowBuffer {\n\n    public static final int SHADOW_MAP_WIDTH = 4096;\n\n    public static final int SHADOW_MAP_HEIGHT = SHADOW_MAP_WIDTH;\n    private final ArrTexture depthMap;\n    private final int depthMapFBO;\n\n    public ShadowBuffer() {\n        // Create a FBO to render the depth map\n        depthMapFBO = glGenFramebuffers();\n\n        // Create the depth map textures\n        depthMap = new ArrTexture(CascadeShadow.SHADOW_MAP_CASCADE_COUNT, SHADOW_MAP_WIDTH, SHADOW_MAP_HEIGHT, GL_DEPTH_COMPONENT);\n\n        // Attach the the depth map texture to the FBO\n        glBindFramebuffer(GL_FRAMEBUFFER, depthMapFBO);\n        glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, depthMap.getIds()[0], 0);\n\n        // Set only depth\n        glDrawBuffer(GL_NONE);\n        glReadBuffer(GL_NONE);\n\n        if (glCheckFramebufferStatus(GL_FRAMEBUFFER) != GL_FRAMEBUFFER_COMPLETE) {\n            throw new RuntimeException(\"Could not create FrameBuffer\");\n        }\n\n        // Unbind\n        glBindFramebuffer(GL_FRAMEBUFFER, 0);\n    }\n\n    public void bindTextures(int start) {\n        for (int i = 0; i &lt; CascadeShadow.SHADOW_MAP_CASCADE_COUNT; i++) {\n            glActiveTexture(start + i);\n            glBindTexture(GL_TEXTURE_2D, depthMap.getIds()[i]);\n        }\n    }\n\n    public void cleanup() {\n        glDeleteFramebuffers(depthMapFBO);\n        depthMap.cleanup();\n    }\n\n    public int getDepthMapFBO() {\n        return depthMapFBO;\n    }\n\n    public ArrTexture getDepthMapTexture() {\n        return depthMap;\n    }\n}\n</code></pre> <p><code>ShadowBuffer</code>\u7c7b\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5e38\u91cf\uff0c\u7528\u4e8e\u786e\u5b9a\u5c06\u4fdd\u5b58\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u7684\u5927\u5c0f\u3002\u5b83\u8fd8\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5c5e\u6027\uff0c\u4e00\u4e2a\u7528\u4e8eFBO\uff0c\u4e00\u4e2a\u7528\u4e8e\u7eb9\u7406\u3002\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684FBO\u548c\u4e00\u4e2a\u7eb9\u7406\u6570\u7ec4\u3002\u8be5\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u5c06\u7528\u4e8e\u6e32\u67d3\u6bcf\u4e2a\u7ea7\u8054\u9634\u5f71\u5206\u5272\u7684\u9634\u5f71\u8d34\u56fe\u3002\u5bf9\u4e8eFBO\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u5e38\u91cf<code>GL_DEPTH_COMPONENT</code>\u4f5c\u4e3a\u50cf\u7d20\u683c\u5f0f\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5bf9\u5b58\u50a8\u6df1\u5ea6\u503c\u611f\u5174\u8da3\u3002\u7136\u540e\u6211\u4eec\u5c06FBO\u9644\u52a0\u5230\u7eb9\u7406\u5b9e\u4f8b\u3002</p> <p>\u4ee5\u4e0b\u51e0\u884c\u660e\u786e\u8bbe\u7f6eFBO\u4e0d\u6e32\u67d3\u4efb\u4f55\u989c\u8272\u3002FBO\u9700\u8981\u4e00\u4e2a\u989c\u8272\u7f13\u51b2\u533a\uff0c\u4f46\u6211\u4eec\u4e0d\u9700\u8981\u5b83\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5c06\u8981\u4f7f\u7528\u7684\u989c\u8272\u7f13\u51b2\u533a\u8bbe\u7f6e\u4e3a<code>GL_NONE</code>\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u5148\u524d\u7684\u7c7b\u6295\u5165\u4f7f\u7528\uff0c\u4ee5\u6e32\u67d3\u9634\u5f71\u8d34\u56fe\u3002\u6211\u4eec\u5c06\u5728\u4e00\u4e2a\u540d\u4e3a<code>ShadowRender</code>\u7684\u65b0\u7c7b\u4e2d\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u8be5\u7c7b\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjglb.engine.scene.*;\n\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class ShadowRender {\n    private ArrayList&lt;CascadeShadow&gt; cascadeShadows;\n    private ShaderProgram shaderProgram;\n    private ShadowBuffer shadowBuffer;\n    private UniformsMap uniformsMap;\n\n    public ShadowRender() {\n        List&lt;ShaderProgram.ShaderModuleData&gt; shaderModuleDataList = new ArrayList&lt;&gt;();\n        shaderModuleDataList.add(new ShaderProgram.ShaderModuleData(\"resources/shaders/shadow.vert\", GL_VERTEX_SHADER));\n        shaderProgram = new ShaderProgram(shaderModuleDataList);\n\n        shadowBuffer = new ShadowBuffer();\n\n        cascadeShadows = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; CascadeShadow.SHADOW_MAP_CASCADE_COUNT; i++) {\n            CascadeShadow cascadeShadow = new CascadeShadow();\n            cascadeShadows.add(cascadeShadow);\n        }\n\n        createUniforms();\n    }\n\n    public void cleanup() {\n        shaderProgram.cleanup();\n        shadowBuffer.cleanup();\n    }\n\n    private void createUniforms() {\n        uniformsMap = new UniformsMap(shaderProgram.getProgramId());\n        uniformsMap.createUniform(\"modelMatrix\");\n        uniformsMap.createUniform(\"projViewMatrix\");\n        uniformsMap.createUniform(\"bonesMatrices\");\n    }\n\n    public List&lt;CascadeShadow&gt; getCascadeShadows() {\n        return cascadeShadows;\n    }\n\n    public ShadowBuffer getShadowBuffer() {\n        return shadowBuffer;\n    }\n    ...\n}\n</code></pre> <p>\u5982\u60a8\u6240\u89c1\uff0c\u5b83\u4e0e\u5176\u4ed6\u6e32\u67d3\u7c7b\u975e\u5e38\u76f8\u4f3c\uff0c\u6211\u4eec\u521b\u5efa\u7740\u8272\u5668\u7a0b\u5e8f\u3001\u6240\u9700\u7684\u7edf\u4e00\u53d8\u91cf\u5e76\u63d0\u4f9b<code>cleanup</code>\u65b9\u6cd5\u3002\u552f\u4e00\u7684\u4f8b\u5916\u662f\uff1a</p> <ul> <li>\u6211\u4eec\u53ea\u5bf9\u6df1\u5ea6\u503c\u611f\u5174\u8da3\uff0c\u56e0\u6b64\u6211\u4eec\u6839\u672c\u4e0d\u9700\u8981\u7247\u6bb5\u7740\u8272\u5668\uff0c\u6211\u4eec\u53ea\u4ece\u9876\u70b9\u7740\u8272\u5668\u4e2d\u8f6c\u50a8\u9876\u70b9\u4f4d\u7f6e\uff0c\u5305\u62ec\u5176\u6df1\u5ea6\u3002</li> <li>\u6211\u4eec\u521b\u5efa\u7ea7\u8054\u9634\u5f71\u5206\u5272\uff08\u7531<code>CascadeShadow</code>\u7c7b\u5b9e\u4f8b\u5efa\u6a21\uff09\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9bgetter\u6765\u83b7\u53d6\u7ea7\u8054\u9634\u5f71\u8d34\u56fe\u548c\u6211\u4eec\u6e32\u67d3\u9634\u5f71\u8d34\u56fe\u7684\u7f13\u51b2\u533a\u3002\u8fd9\u4e9bgetter\u5c06\u5728<code>SceneRender</code>\u7c7b\u4e2d\u4f7f\u7528\uff0c\u4ee5\u8bbf\u95ee\u9634\u5f71\u8d34\u56fe\u6570\u636e\u3002</li> </ul> <p><code>ShadowRender</code>\u7c7b\u4e2d\u7684<code>render</code>\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class ShadowRender {\n    ...\n    public void render(Scene scene) {\n        CascadeShadow.updateCascadeShadows(cascadeShadows, scene);\n\n        glBindFramebuffer(GL_FRAMEBUFFER, shadowBuffer.getDepthMapFBO());\n        glViewport(0, 0, ShadowBuffer.SHADOW_MAP_WIDTH, ShadowBuffer.SHADOW_MAP_HEIGHT);\n\n        shaderProgram.bind();\n\n        Collection&lt;Model&gt; models = scene.getModelMap().values();\n        for (int i = 0; i &lt; CascadeShadow.SHADOW_MAP_CASCADE_COUNT; i++) {\n            glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, shadowBuffer.getDepthMapTexture().getIds()[i], 0);\n            glClear(GL_DEPTH_BUFFER_BIT);\n\n            CascadeShadow shadowCascade = cascadeShadows.get(i);\n            uniformsMap.setUniform(\"projViewMatrix\", shadowCascade.getProjViewMatrix());\n\n            for (Model model : models) {\n                List&lt;Entity&gt; entities = model.getEntitiesList();\n                for (Material material : model.getMaterialList()) {\n                    for (Mesh mesh : material.getMeshList()) {\n                        glBindVertexArray(mesh.getVaoId());\n                        for (Entity entity : entities) {\n                            uniformsMap.setUniform(\"modelMatrix\", entity.getModelMatrix());\n                            AnimationData animationData = entity.getAnimationData();\n                            if (animationData == null) {\n                                uniformsMap.setUniform(\"bonesMatrices\", AnimationData.DEFAULT_BONES_MATRICES);\n                            } else {\n                                uniformsMap.setUniform(\"bonesMatrices\", animationData.getCurrentFrame().boneMatrices());\n                            }\n                            glDrawElements(GL_TRIANGLES, mesh.getNumVertices(), GL_UNSIGNED_INT, 0);\n                        }\n                    }\n                }\n            }\n        }\n\n        shaderProgram.unbind();\n        glBindFramebuffer(GL_FRAMEBUFFER, 0);\n    }\n}\n</code></pre> <p>\u6211\u4eec\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u66f4\u65b0\u7ea7\u8054\u8d34\u56fe\uff0c\u5373\u6bcf\u4e2a\u7ea7\u8054\u5206\u5272\u7684\u6295\u5f71\u77e9\u9635\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u6e32\u67d3\u9634\u5f71\u8d34\u56fe\uff08\u573a\u666f\u53ef\u4ee5\u66f4\u65b0\uff0c\u76f8\u673a\u53ef\u4ee5\u79fb\u52a8\uff0c\u73a9\u5bb6\u6216\u52a8\u753b\uff09\u3002\u8fd9\u53ef\u80fd\u662f\u60a8\u60f3\u8981\u7f13\u5b58\u5e76\u4ec5\u5728\u573a\u666f\u53d1\u751f\u53d8\u5316\u65f6\u91cd\u65b0\u8ba1\u7b97\u7684\u5185\u5bb9\u3002\u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u4eec\u6bcf\u5e27\u90fd\u8fd9\u6837\u505a\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528<code>glBindFramebuffer</code>\u51fd\u6570\u7ed1\u5b9a\u6211\u4eec\u5c06\u6e32\u67d3\u9634\u5f71\u8d34\u56fe\u7684\u5e27\u7f13\u51b2\u533a\u3002\u6211\u4eec\u6e05\u9664\u5b83\u5e76\u904d\u5386\u4e0d\u540c\u7684\u7ea7\u8054\u9634\u5f71\u5206\u5272\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u5272\uff0c\u6211\u4eec\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li>\u901a\u8fc7\u8c03\u7528<code>glFramebufferTexture2D</code>\u7ed1\u5b9a\u4e0e\u7ea7\u8054\u9634\u5f71\u5206\u5272\u5173\u8054\u7684\u7eb9\u7406\u5e76\u6e05\u9664\u5b83\u3002</li> <li>\u6839\u636e\u5f53\u524d\u7ea7\u8054\u9634\u5f71\u5206\u5272\u66f4\u65b0\u6295\u5f71\u77e9\u9635\u3002</li> <li>\u50cf\u6211\u4eec\u5728<code>SceneRender</code>\u7c7b\u4e2d\u90a3\u6837\u6e32\u67d3\u6bcf\u4e2a\u5b9e\u4f53\u3002</li> </ul> <p>\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u9876\u70b9\u7740\u8272\u5668\uff08<code>shadow.vert</code>\uff09\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>#version 330\n\nconst int MAX_WEIGHTS = 4;\nconst int MAX_BONES = 150;\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 normal;\nlayout (location=2) in vec3 tangent;\nlayout (location=3) in vec3 bitangent;\nlayout (location=4) in vec2 texCoord;\nlayout (location=5) in vec4 boneWeights;\nlayout (location=6) in ivec4 boneIndices;\n\nuniform mat4 modelMatrix;\nuniform mat4 projViewMatrix;\nuniform mat4 bonesMatrices[MAX_BONES];\n\nvoid main()\n{\n    vec4 initPos = vec4(0, 0, 0, 0);\n    int count = 0;\n    for (int i = 0; i &lt; MAX_WEIGHTS; i++) {\n        float weight = boneWeights[i];\n        if (weight &gt; 0) {\n            count++;\n            int boneIndex = boneIndices[i];\n            vec4 tmpPos = bonesMatrices[boneIndex] * vec4(position, 1.0);\n            initPos += weight * tmpPos;\n        }\n    }\n    if (count == 0) {\n        initPos = vec4(position, 1.0);\n    }\n\n    gl_Position = projViewMatrix * modelMatrix * initPos;\n}\n</code></pre> <p>\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u63a5\u6536\u4e0e\u573a\u666f\u9876\u70b9\u7740\u8272\u5668\u76f8\u540c\u7684\u8f93\u5165\u5c5e\u6027\u96c6\uff0c\u6211\u4eec\u53ea\u6295\u5f71\u4f4d\u7f6e\uff0c\u6839\u636e\u6a21\u578b\u77e9\u9635\u548c\u52a8\u753b\u6570\u636e\u66f4\u65b0\u5148\u524d\u8f93\u5165\u7684 position\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u66f4\u65b0<code>SceneRender</code>\u7c7b\uff0c\u4ee5\u4fbf\u5728\u6e32\u67d3\u65f6\u4f7f\u7528\u7ea7\u8054\u9634\u5f71\u8d34\u56fe\u6765\u6b63\u786e\u663e\u793a\u9634\u5f71\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5c06\u9634\u5f71\u8d34\u56fe\u4f5c\u4e3a\u7eb9\u7406\u8bbf\u95ee\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5b83\u4eec\u521b\u5efa\u7edf\u4e00\u53d8\u91cf\u3002\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u7ea7\u8054\u5206\u5272\u6295\u5f71\u77e9\u9635\u548c\u5206\u5272\u8ddd\u79bb\u4f20\u9012\u7ed9\u7740\u8272\u5668\uff0c\u4ee5\u4fbf\u6839\u636e\u9876\u70b9\u4f4d\u7f6e\u9009\u62e9\u5e94\u4f7f\u7528\u7684\u5206\u5272\u3002</p> <pre><code>public class SceneRender {\n    ...\n    private void createUniforms() {\n        ...\n        for (int i = 0; i &lt; CascadeShadow.SHADOW_MAP_CASCADE_COUNT; i++) {\n            uniformsMap.createUniform(\"shadowMap[\" + i + \"]\");\n            uniformsMap.createUniform(\"cascadeshadows[\" + i + \"]\" + \".projViewMatrix\");\n            uniformsMap.createUniform(\"cascadeshadows[\" + i + \"]\" + \".splitDistance\");\n        }\n    }\n    ...\n}\n</code></pre> <p>\u5728<code>SceneRender</code>\u7c7b\u7684<code>render</code>\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6e32\u67d3\u6a21\u578b\u4e4b\u524d\u586b\u5145\u8fd9\u4e9b\u7edf\u4e00\u53d8\u91cf\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    public void render(Scene scene, ShadowRender shadowRender) {\n        ...\n        uniformsMap.setUniform(\"txtSampler\", 0);\n        uniformsMap.setUniform(\"normalSampler\", 1);\n\n        int start = 2;\n        List&lt;CascadeShadow&gt; cascadeShadows = shadowRender.getCascadeShadows();\n        for (int i = 0; i &lt; CascadeShadow.SHADOW_MAP_CASCADE_COUNT; i++) {\n            uniformsMap.setUniform(\"shadowMap[\" + i + \"]\", start + i);\n            CascadeShadow cascadeShadow = cascadeShadows.get(i);\n            uniformsMap.setUniform(\"cascadeshadows[\" + i + \"]\" + \".projViewMatrix\", cascadeShadow.getProjViewMatrix());\n            uniformsMap.setUniform(\"cascadeshadows[\" + i + \"]\" + \".splitDistance\", cascadeShadow.getSplitDistance());\n        }\n\n        shadowRender.getShadowBuffer().bindTextures(GL_TEXTURE2);\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u73b0\u5728\u8ba9\u6211\u4eec\u770b\u770b\u573a\u666f\u7740\u8272\u5668\u7684\u53d8\u5316\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\uff08<code>scene.vert</code>\uff09\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6a21\u578b\u5750\u6807\u4e2d\u7684\u9876\u70b9\u4f4d\u7f6e\uff08\u4e0d\u53d7\u89c6\u56fe\u77e9\u9635\u5f71\u54cd\uff09\u4e5f\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\uff1a</p> <pre><code>#version 330\n...\nout vec3 outNormal;\nout vec3 outTangent;\nout vec3 outBitangent;\nout vec2 outTextCoord;\nout vec3 outViewPosition;\nout vec4 outWorldPosition;\n...\nvoid main()\n{\n    ...\n    outViewPosition  = mvPosition.xyz;\n    outWorldPosition = modelMatrix * initPos;\n    ...\n}\n</code></pre> <p>\u5927\u591a\u6570\u66f4\u6539\u5c06\u5728\u7247\u6bb5\u7740\u8272\u5668\uff08<code>scene.frag</code>\uff09\u4e2d\uff1a</p> <pre><code>#version 330\n...\nconst int DEBUG_SHADOWS = 0;\n...\nconst float BIAS = 0.0005;\nconst float SHADOW_FACTOR = 0.25;\n...\nin vec3 outViewPosition;\nin vec4 outWorldPosition;\n</code></pre> <p>\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u7ec4\u5e38\u91cf\uff1a</p> <ul> <li><code>DEBUG_SHADOWS</code>\uff1a\u8fd9\u5c06\u63a7\u5236\u6211\u4eec\u662f\u5426\u5bf9\u7247\u6bb5\u5e94\u7528\u989c\u8272\u4ee5\u8bc6\u522b\u5b83\u4eec\u5c06\u88ab\u5206\u914d\u5230\u7684\u7ea7\u8054\u5206\u5272\uff08\u9700\u8981\u5c06\u5176\u503c\u8bbe\u7f6e\u4e3a<code>1</code>\u624d\u80fd\u6fc0\u6d3b\uff09\u3002</li> <li><code>SHADOW_FACTOR</code>\uff1a\u5f53\u7247\u6bb5\u5904\u4e8e\u9634\u5f71\u4e2d\u65f6\u5c06\u5e94\u7528\u4e8e\u6700\u7ec8\u7247\u6bb5\u989c\u8272\u7684\u53d8\u6697\u56e0\u5b50\u3002</li> <li><code>BIAS</code>\uff1a\u5728\u4f30\u8ba1\u7247\u6bb5\u662f\u5426\u53d7\u9634\u5f71\u5f71\u54cd\u65f6\u5e94\u7528\u7684\u6df1\u5ea6\u504f\u5dee\u3002\u8fd9\u7528\u4e8e\u51cf\u5c11\u9634\u5f71\u4f2a\u5f71\uff0c\u4f8b\u5982\u9634\u5f71\u75e4\u75ae\u3002\u9634\u5f71\u75e4\u75ae\u662f\u7531\u5b58\u50a8\u6df1\u5ea6\u56fe\u7684\u7eb9\u7406\u5206\u8fa8\u7387\u6709\u9650\u5f15\u8d77\u7684\uff0c\u8fd9\u5c06\u4ea7\u751f\u5947\u602a\u7684\u4f2a\u5f71\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u8bbe\u7f6e\u4e00\u4e2a\u9608\u503c\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8be5\u9608\u503c\u5c06\u51cf\u5c11\u7cbe\u5ea6\u95ee\u9898\u3002</li> </ul> <p>\u4e4b\u540e\uff0c\u6211\u4eec\u5b9a\u4e49\u65b0\u7684\u7edf\u4e00\u53d8\u91cf\uff0c\u5b83\u4eec\u5b58\u50a8\u7ea7\u8054\u5206\u5272\u548c\u9634\u5f71\u8d34\u56fe\u7684\u7eb9\u7406\u3002\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u9006\u89c6\u56fe\u77e9\u9635\u4f20\u9012\u7ed9\u7740\u8272\u5668\u3002\u5728\u4e0a\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6295\u5f71\u77e9\u9635\u7684\u9006\u77e9\u9635\u6765\u83b7\u53d6\u89c6\u56fe\u5750\u6807\u4e2d\u7684\u7247\u6bb5\u4f4d\u7f6e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u66f4\u8fdb\u4e00\u6b65\uff0c\u83b7\u53d6\u4e16\u754c\u5750\u6807\u4e2d\u7684\u7247\u6bb5\u4f4d\u7f6e\uff0c\u5982\u679c\u6211\u4eec\u7528\u9006\u89c6\u56fe\u77e9\u9635\u4e58\u4ee5\u89c6\u56fe\u5750\u6807\u4e2d\u7684\u7247\u6bb5\u4f4d\u7f6e\uff0c\u6211\u4eec\u5c06\u83b7\u5f97\u4e16\u754c\u5750\u6807\u3002\u6b64\u5916\uff0c\u6211\u4eec\u9700\u8981\u7ea7\u8054\u5206\u5272\u7684\u6295\u5f71\u89c6\u56fe\u77e9\u9635\u4ee5\u53ca\u5b83\u4eec\u7684\u5206\u5272\u8ddd\u79bb\u3002\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u5305\u542b\u7ea7\u8054\u4fe1\u606f\u7684\u7edf\u4e00\u53d8\u91cf\u6570\u7ec4\u548c\u4e00\u4e2a\u91c7\u6837\u5668\u6570\u7ec4\uff0c\u4ee5\u4fbf\u4f5c\u4e3a\u7eb9\u7406\u6570\u7ec4\u8bbf\u95ee\u9634\u5f71\u6e32\u67d3\u8fc7\u7a0b\u7684\u7ed3\u679c\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528<code>sampler2DArray</code>\u4ee3\u66ff\u91c7\u6837\u5668\u6570\u7ec4\uff08\u4f7f\u7528\u91c7\u6837\u5668\u6570\u7ec4\uff0c\u4f8b\u5982\u6b64\u5904\u4f7f\u7528\u7684\u6570\u7ec4\uff0c\u60a8\u53ef\u4ee5\u4f7f\u6bcf\u4e2a\u9634\u5f71\u8d34\u56fe\u7ea7\u8054\u7eb9\u7406\u5177\u6709\u4e0d\u540c\u7684\u5927\u5c0f\u3002\u56e0\u6b64\u5b83\u63d0\u4f9b\u4e86\u4e00\u70b9\u70b9\u7075\u6d3b\u6027\uff0c\u5c3d\u7ba1\u6211\u4eec\u5728\u6b64\u5904\u6ca1\u6709\u5229\u7528\u8fd9\u4e00\u70b9\uff09</p> <pre><code>...\nstruct CascadeShadow {\n    mat4 projViewMatrix;\n    float splitDistance;\n};\n...\nuniform CascadeShadow cascadeshadows[NUM_CASCADES];\nuniform sampler2D shadowMap[NUM_CASCADES];\n...\n</code></pre> <p>\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>calcShadow</code>\u7684\u65b0\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7ed9\u5b9a\u4e16\u754c\u4f4d\u7f6e\u548c\u7ea7\u8054\u5206\u5272\u7d22\u5f15\uff0c\u5c06\u8fd4\u56de\u4e00\u4e2a\u5c06\u5e94\u7528\u4e8e\u6700\u7ec8\u7247\u6bb5\u989c\u8272\u7684\u9634\u5f71\u56e0\u5b50\u3002\u5982\u679c\u7247\u6bb5\u4e0d\u53d7\u9634\u5f71\u5f71\u54cd\uff0c\u7ed3\u679c\u5c06\u4e3a<code>1</code>\uff0c\u5b83\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u989c\u8272\uff1a</p> <pre><code>...\nfloat calcShadow(vec4 worldPosition, int idx) {\n    vec4 shadowMapPosition = cascadeshadows[idx].projViewMatrix * worldPosition;\n    float shadow = 1.0;\n    vec4 shadowCoord = (shadowMapPosition / shadowMapPosition.w) * 0.5 + 0.5;\n    shadow = textureProj(shadowCoord, vec2(0, 0), idx);\n    return shadow;\n}\n...\n</code></pre> <p>\u6b64\u51fd\u6570\u4f7f\u7528\u5176\u6b63\u4ea4\u6295\u5f71\u5c06\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u8f6c\u6362\u4e3a\u65b9\u5411\u5149\u7684NDC\u7a7a\u95f4\uff0c\u7528\u4e8e\u7279\u5b9a\u7684\u7ea7\u8054\u5206\u5272\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u4e16\u754c\u7a7a\u95f4\u4e58\u4ee5\u6307\u5b9a\u7ea7\u8054\u5206\u5272\u7684\u6295\u5f71\u89c6\u56fe\u77e9\u9635\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e9b\u5750\u6807\u8f6c\u6362\u4e3a\u7eb9\u7406\u5750\u6807\uff08\u5373\u5728[0, 1]\u8303\u56f4\u5185\uff0c\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\uff09\u3002\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u5c06\u4f7f\u7528<code>textureProj</code>\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u53ea\u9009\u62e9\u8981\u4f7f\u7528\u7684\u9002\u5f53\u9634\u5f71\u8d34\u56fe\u7eb9\u7406\uff0c\u5e76\u6839\u636e\u7ed3\u679c\u503c\u5e94\u7528\u9634\u5f71\u56e0\u5b50\uff1a</p> <pre><code>...\nfloat textureProj(vec4 shadowCoord, vec2 offset, int idx) {\n    float shadow = 1.0;\n\n    if (shadowCoord.z &gt; -1.0 &amp;&amp; shadowCoord.z &lt; 1.0) {\n        float dist = 0.0;\n        dist = texture(shadowMap[idx], vec2(shadowCoord.xy + offset)).r;\n        if (shadowCoord.w &gt; 0 &amp;&amp; dist &lt; shadowCoord.z - BIAS) {\n            shadow = SHADOW_FACTOR;\n        }\n    }\n    return shadow;\n}\n...\n</code></pre> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u4ee5\u89c6\u56fe\u4f4d\u7f6e\u4f5c\u4e3a\u8f93\u5165\uff0c\u6211\u4eec\u904d\u5386\u4e3a\u6bcf\u4e2a\u7ea7\u8054\u5206\u5272\u8ba1\u7b97\u7684\u5206\u5272\u8ddd\u79bb\uff0c\u4ee5\u786e\u5b9a\u6b64\u7247\u6bb5\u6240\u5c5e\u7684\u7ea7\u8054\u7d22\u5f15\u5e76\u8ba1\u7b97\u9634\u5f71\u56e0\u5b50\uff1a <pre><code>...\nvoid main() {\n    ...\n    ...\n    vec4 diffuseSpecularComp = calcDirLight(diffuse, specular, dirLight, outViewPosition, normal);\n\n    int cascadeIndex = 0;\n    for (int i=0; i&lt;NUM_CASCADES - 1; i++) {\n        if (outViewPosition.z &lt; cascadeshadows[i].splitDistance) {\n            cascadeIndex = i + 1;\n        }\n    }\n    float shadowFactor = calcShadow(outWorldPosition, cascadeIndex);\n\n    for (int i=0; i&lt;MAX_POINT_LIGHTS; i++) {\n        if (pointLights[i].intensity &gt; 0) {\n            diffuseSpecularComp += calcPointLight(diffuse, specular, pointLights[i], outViewPosition, normal);\n        }\n    }\n\n    for (int i=0; i&lt;MAX_SPOT_LIGHTS; i++) {\n        if (spotLights[i].pl.intensity &gt; 0) {\n            diffuseSpecularComp += calcSpotLight(diffuse, specular, spotLights[i], outViewPosition, normal);\n        }\n    }\n    fragColor = ambient + diffuseSpecularComp;\n    fragColor.rgb = fragColor.rgb * shadowFactor;\n\n    if (fog.activeFog == 1) {\n        fragColor = calcFog(outViewPosition, fragColor, fog, ambientLight.color, dirLight);\n    }\n\n    if (DEBUG_SHADOWS == 1) {\n        switch (cascadeIndex) {\n            case 0:\n            fragColor.rgb *= vec3(1.0f, 0.25f, 0.25f);\n            break;\n            case 1:\n            fragColor.rgb *= vec3(0.25f, 1.0f, 0.25f);\n            break;\n            case 2:\n            fragColor.rgb *= vec3(0.25f, 0.25f, 1.0f);\n            break;\n            default :\n            fragColor.rgb *= vec3(1.0f, 1.0f, 0.25f);\n            break;\n        }\n    }\n}\n</code></pre></p> <p>\u6700\u7ec8\u7684\u7247\u6bb5\u989c\u8272\u7531\u9634\u5f71\u56e0\u5b50\u8c03\u5236\u3002\u6700\u540e\uff0c\u5982\u679c\u8c03\u8bd5\u6a21\u5f0f\u88ab\u6fc0\u6d3b\uff0c\u6211\u4eec\u5bf9\u8be5\u7247\u6bb5\u5e94\u7528\u989c\u8272\u4ee5\u8bc6\u522b\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u7684\u7ea7\u8054\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0<code>Render</code>\u7c7b\u6765\u5b9e\u4f8b\u5316\u548c\u4f7f\u7528<code>ShadowRender</code>\u7c7b\u3002\u6211\u4eec\u8fd8\u5c06\u6df7\u5408\u6fc0\u6d3b\u4ee3\u7801\u79fb\u52a8\u5230\u6b64\u7c7b\u4e2d\uff1a</p> <pre><code>public class Render {\n    ...\n    private ShadowRender shadowRender;\n    ...\n    public Render(Window window) {\n        ...\n        // Support for transparencies\n        glEnable(GL_BLEND);\n        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\n        ...\n        shadowRender = new ShadowRender();\n    }\n\n    public void cleanup() {\n        ...\n        shadowRender.cleanup();\n    }\n\n    public void render(Window window, Scene scene) {\n        shadowRender.render(scene);\n        ...\n        sceneRender.render(scene, shadowRender);\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u5728<code>Main</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u5220\u9664\u58f0\u97f3\u4ee3\u7801\u3002\u6700\u540e\u60a8\u5c06\u80fd\u591f\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u5185\u5bb9\uff1a</p> <p></p> <p>\u5982\u679c\u60a8\u5c06<code>DEBUG_SHADOWS</code>\u5e38\u91cf\u8bbe\u7f6e\u4e3a<code>1</code>\uff0c\u60a8\u5c06\u770b\u5230\u7ea7\u8054\u9634\u5f71\u5206\u5272\u5982\u4f55</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"18-3D-object-picking/","title":"\u7b2c18\u7ae0 - 3D\u7269\u4f53\u62fe\u53d6\uff083D Object Picking\uff09","text":"<p>\u6bcf\u4e2a\u6e38\u620f\u7684\u5173\u952e\u65b9\u9762\u4e4b\u4e00\u662f\u4e0e\u73af\u5883\u4ea4\u4e92\u7684\u80fd\u529b\u3002\u8fd9\u79cd\u80fd\u529b\u9700\u8981\u80fd\u591f\u57283D\u573a\u666f\u4e2d\u9009\u62e9\u7269\u4f53\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u8ba8\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"18-3D-object-picking/#_1","title":"\u6982\u5ff5","text":"<p>\u6211\u4eec\u5c06\u6dfb\u52a0\u901a\u8fc7\u5728\u5c4f\u5e55\u4e0a\u5355\u51fb\u9f20\u6807\u6765\u9009\u62e9\u5b9e\u4f53\u7684\u529f\u80fd\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u4ece\u76f8\u673a\u4f4d\u7f6e\uff08\u6211\u4eec\u7684\u539f\u70b9\uff09\u6295\u5c04\u4e00\u6761\u5149\u7ebf\uff0c\u4f7f\u7528\u6211\u4eec\u5355\u51fb\u9f20\u6807\u7684\u70b9\u4f5c\u4e3a\u65b9\u5411\uff08\u4ece\u9f20\u6807\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u5750\u6807\uff09\u3002\u901a\u8fc7\u8be5\u5149\u7ebf\uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u5b83\u662f\u5426\u4e0e\u4e0e\u6bcf\u4e2a\u5b9e\u4f53\u5173\u8054\u7684\u5305\u56f4\u76d2\uff08bounding box\uff09\u76f8\u4ea4\uff08\u5373\u5305\u542b\u4e0e\u5b9e\u4f53\u5173\u8054\u7684\u6a21\u578b\u7684\u4e00\u4e2a\u7acb\u65b9\u4f53\uff09\u3002</p> <p></p> <p>\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ul> <li>\u4e3a\u6bcf\u4e2a\u6a21\u578b\uff08\u5b9e\u9645\u4e0a\u662f\u6a21\u578b\u7684\u6bcf\u4e2a\u7f51\u683c\uff09\u5173\u8054\u4e00\u4e2a\u5305\u56f4\u76d2\u3002</li> <li>\u5c06\u9f20\u6807\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\uff0c\u4ee5\u4fbf\u4ece\u76f8\u673a\u4f4d\u7f6e\u6295\u5c04\u5149\u7ebf\u3002</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u5b9e\u4f53\uff0c\u904d\u5386\u5173\u8054\u7684\u7f51\u683c\u5e76\u68c0\u67e5\u662f\u5426\u4e0e\u5149\u7ebf\u76f8\u4ea4\u3002</li> <li>\u6211\u4eec\u5c06\u9009\u62e9\u4e0e\u5149\u7ebf\u8ddd\u79bb\u6700\u8fd1\u7684\u5b9e\u4f53\u3002</li> <li>\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u9009\u5b9a\u7684\u5b9e\u4f53\uff0c\u6211\u4eec\u5c06\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u7a81\u51fa\u663e\u793a\u5b83\u3002</li> </ul>"},{"location":"18-3D-object-picking/#_2","title":"\u4ee3\u7801\u51c6\u5907","text":"<p>\u6211\u4eec\u5c06\u9996\u5148\u8ba1\u7b97\u6211\u4eec\u52a0\u8f7d\u7684\u6a21\u578b\u7684\u6bcf\u4e2a\u7f51\u683c\u7684\u5305\u56f4\u76d2\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u5728\u52a0\u8f7d\u6a21\u578b\u65f6\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u6807\u5fd7<code>aiProcess_GenBoundingBoxes</code>\u6765\u8ba9Assimp\u4e3a\u6211\u4eec\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\u6b64\u6807\u5fd7\u5c06\u81ea\u52a8\u4e3a\u6bcf\u4e2a\u7f51\u683c\u8ba1\u7b97\u4e00\u4e2a\u5305\u56f4\u76d2\u3002\u8be5\u76d2\u5b50\u5c06\u5d4c\u5165\u6240\u6709\u7f51\u683c\u5e76\u5c06\u4e0e\u8f74\u5bf9\u9f50\u3002\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u7f29\u5199\u8bcd\u201cAABB\u201d\u7528\u4e8e\u6b64\uff0c\u5b83\u8868\u793a\u8f74\u5bf9\u9f50\u5305\u56f4\u76d2\uff08Axis Aligned Bounding Box\uff09\u3002\u4e3a\u4ec0\u4e48\u662f\u8f74\u5bf9\u9f50\u7684\u76d2\u5b50\uff1f\u56e0\u4e3a\u5b83\u5c06\u5927\u5927\u7b80\u5316\u4ea4\u96c6\u8ba1\u7b97\u3002\u901a\u8fc7\u4f7f\u7528\u8be5\u6807\u5fd7\uff0cAssimp\u5c06\u6267\u884c\u8fd9\u4e9b\u8ba1\u7b97\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u5c06\u4f5c\u4e3a\u5305\u56f4\u76d2\u7684\u89d2\u70b9\uff08\u5177\u6709\u6700\u5c0f\u548c\u6700\u5927\u5750\u6807\uff09\u53ef\u7528\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u7acb\u65b9\u4f53\u7684\u5916\u89c2\u3002</p> <p></p> <p>\u542f\u7528\u8ba1\u7b97\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728\u5904\u7406\u7f51\u683c\u65f6\u68c0\u7d22\u8be5\u4fe1\u606f\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    public static Model loadModel(String modelId, String modelPath, TextureCache textureCache, boolean animation) {\n        return loadModel(modelId, modelPath, textureCache, aiProcess_GenSmoothNormals | aiProcess_JoinIdenticalVertices |\n                aiProcess_Triangulate | aiProcess_FixInfacingNormals | aiProcess_CalcTangentSpace | aiProcess_LimitBoneWeights |\n                aiProcess_GenBoundingBoxes | (animation ? 0 : aiProcess_PreTransformVertices));\n\n    }\n    ...\n    private static Mesh processMesh(AIMesh aiMesh, List&lt;Bone&gt; boneList) {\n        ...\n        AIAABB aabb = aiMesh.mAABB();\n        Vector3f aabbMin = new Vector3f(aabb.mMin().x(), aabb.mMin().y(), aabb.mMin().z());\n        Vector3f aabbMax = new Vector3f(aabb.mMax().x(), aabb.mMax().y(), aabb.mMax().z());\n\n        return new Mesh(vertices, normals, tangents, bitangents, textCoords, indices, animMeshData.boneIds,\n                animMeshData.weights, aabbMin, aabbMax);\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u5c06\u8be5\u4fe1\u606f\u5b58\u50a8\u5728<code>Mesh</code>\u7c7b\u4e2d\uff1a</p> <pre><code>public class Mesh {\n    ...\n    private Vector3f aabbMax;\n    private Vector3f aabbMin;\n    ...\n    public Mesh(float[] positions, float[] normals, float[] tangents, float[] bitangents, float[] textCoords, int[] indices) {\n        this(positions, normals, tangents, bitangents, textCoords, indices,\n                new int[Mesh.MAX_WEIGHTS * positions.length / 3], new float[Mesh.MAX_WEIGHTS * positions.length / 3],\n                new Vector3f(), new Vector3f());\n    }\n\n    public Mesh(float[] positions, float[] normals, float[] tangents, float[] bitangents, float[] textCoords, int[] indices, int[] boneIndices, float[] weights, Vector3f aabbMin, Vector3f aabbMax) {\n        this.aabbMin = aabbMin;\n        this.aabbMax = aabbMax;\n        ...\n    }\n    ...\n    public Vector3f getAabbMax() {\n        return aabbMax;\n    }\n\n    public Vector3f getAabbMin() {\n        return aabbMin;\n    }\n    ...\n}\n</code></pre> <p>\u5728\u6267\u884c\u5149\u7ebf\u4ea4\u96c6\u8ba1\u7b97\u65f6\uff0c\u6211\u4eec\u9700\u8981\u9006\u89c6\u56fe\u548c\u6295\u5f71\u77e9\u9635\uff0c\u4ee5\u4fbf\u4ece\u5c4f\u5e55\u7a7a\u95f4\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u4fee\u6539<code>Camera</code>\u548c<code>Projection</code>\u7c7b\uff0c\u4ee5\u4fbf\u5728\u5b83\u4eec\u5404\u81ea\u7684\u77e9\u9635\u66f4\u65b0\u65f6\u81ea\u52a8\u8ba1\u7b97\u5b83\u4eec\u7684\u9006\u77e9\u9635\uff1a</p> <pre><code>public class Camera {\n    ...\n    private Matrix4f invViewMatrix;\n    ...\n    public Camera() {\n        ...\n        invViewMatrix = new Matrix4f();\n        ...\n    }\n    ...\n    public Matrix4f getInvViewMatrix() {\n        return invViewMatrix;\n    }\n    ...\n    private void recalculate() {\n        viewMatrix.identity()\n                .rotateX(rotation.x)\n                .rotateY(rotation.y)\n                .translate(-position.x, -position.y, -position.z);\n        invViewMatrix.set(viewMatrix).invert();\n    }\n    ...\n}\n</code></pre> <pre><code>public class Projection {\n    ...\n    private Matrix4f invProjMatrix;\n    ...\n    public Projection(int width, int height) {\n        ...\n        invProjMatrix = new Matrix4f();\n        ...\n    }\n\n    public Matrix4f getInvProjMatrix() {\n        return invProjMatrix;\n    }\n    ...\n    public void updateProjMatrix(int width, int height) {\n        projMatrix.setPerspective(FOV, (float) width / height, Z_NEAR, Z_FAR);\n        invProjMatrix.set(projMatrix).invert();\n    }\n}\n</code></pre> <p>\u6211\u4eec\u8fd8\u9700\u8981\u5728\u5b8c\u6210\u8ba1\u7b97\u540e\u5b58\u50a8\u9009\u5b9a\u7684<code>Entity</code>\uff0c\u6211\u4eec\u5c06\u5728<code>Scene</code>\u7c7b\u4e2d\u6267\u884c\u6b64\u64cd\u4f5c\uff1a</p> <pre><code>public class Scene {\n    ...\n    private Entity selectedEntity;\n    ...\n    public Entity getSelectedEntity() {\n        return selectedEntity;\n    }\n    ...\n    public void setSelectedEntity(Entity selectedEntity) {\n        this.selectedEntity = selectedEntity;\n    }\n    ...\n}\n</code></pre> <p>\u6700\u540e\uff0c\u6211\u4eec\u5c06\u5728\u6e32\u67d3\u573a\u666f\u65f6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7edf\u4e00\u53d8\u91cf\uff0c\u5982\u679c\u6211\u4eec\u6b63\u5728\u6e32\u67d3\u4e00\u4e2a\u9009\u5b9a\u7684<code>Entity</code>\uff0c\u8be5\u7edf\u4e00\u53d8\u91cf\u5c06\u88ab\u6fc0\u6d3b\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    private void createUniforms() {\n        ...\n        uniformsMap.createUniform(\"selected\");\n    }\n\n    public void render(Scene scene, ShadowRender shadowRender) {\n        ...\n        Entity selectedEntity = scene.getSelectedEntity();\n        for (Model model : models) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n\n            for (Material material : model.getMaterialList()) {\n                ...\n                for (Mesh mesh : material.getMeshList()) {\n                    glBindVertexArray(mesh.getVaoId());\n                    for (Entity entity : entities) {\n                        uniformsMap.setUniform(\"selected\",\n                                selectedEntity != null &amp;&amp; selectedEntity.getId().equals(entity.getId()) ? 1 : 0);\n                        ...\n                    }\n                    ...\n                }\n                ...\n            }\n        }\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u5728\u7247\u6bb5\u7740\u8272\u5668\uff08<code>scene.frag</code>\uff09\u4e2d\uff0c\u6211\u4eec\u5c06\u53ea\u4fee\u6539\u5c5e\u4e8e\u9009\u5b9a\u5b9e\u4f53\u7684\u7247\u6bb5\u7684\u84dd\u8272\u5206\u91cf\uff1a</p> <pre><code>#version 330\n...\nuniform int selected;\n...\nvoid main() {\n    ...\n    if (selected &gt; 0) {\n        fragColor = vec4(fragColor.x, fragColor.y, 1, 1);\n    }\n}\n</code></pre>"},{"location":"18-3D-object-picking/#_3","title":"\u5b9e\u4f53\u9009\u62e9","text":"<p>\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u7ee7\u7eed\u7f16\u5199\u786e\u5b9a\u662f\u5426\u5e94\u9009\u62e9<code>Entity</code>\u7684\u4ee3\u7801\u3002\u5728<code>Main</code>\u7c7b\u4e2d\uff0c\u5728<code>input</code>\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u662f\u5426\u6309\u4e0b\u4e86\u9f20\u6807\u5de6\u952e\u3002\u5982\u679c\u662f\uff0c\u6211\u4eec\u5c06\u8c03\u7528\u4e00\u4e2a\u65b0\u65b9\u6cd5\uff08<code>selectEntity</code>\uff09\uff0c\u5728\u8be5\u65b9\u6cd5\u4e2d\u6211\u4eec\u5c06\u6267\u884c\u8ba1\u7b97\uff1a</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    public void input(Window window, Scene scene, long diffTimeMillis, boolean inputConsumed) {\n        ...\n        if (mouseInput.isLeftButtonPressed()) {\n            selectEntity(window, scene, mouseInput.getCurrentPos());\n        }\n        ...\n    }\n    ...\n}\n</code></pre> <p><code>selectEntity</code>\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    private void selectEntity(Window window, Scene scene, Vector2f mousePos) {\n        int wdwWidth = window.getWidth();\n        int wdwHeight = window.getHeight();\n\n        float x = (2 * mousePos.x) / wdwWidth - 1.0f;\n        float y = 1.0f - (2 * mousePos.y) / wdwHeight;\n        float z = -1.0f;\n\n        Matrix4f invProjMatrix = scene.getProjection().getInvProjMatrix();\n        Vector4f mouseDir = new Vector4f(x, y, z, 1.0f);\n        mouseDir.mul(invProjMatrix);\n        mouseDir.z = -1.0f;\n        mouseDir.w = 0.0f;\n\n        Matrix4f invViewMatrix = scene.getCamera().getInvViewMatrix();\n        mouseDir.mul(invViewMatrix);\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u4f7f\u7528\u70b9\u51fb\u5750\u6807\u8ba1\u7b97\u8be5\u65b9\u5411\u5411\u91cf\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u4ece\u89c6\u53e3\u7a7a\u95f4\u4e2d\u7684\\((x,y)\\)\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\uff1f\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u5982\u4f55\u4ece\u6a21\u578b\u7a7a\u95f4\u5750\u6807\u8f6c\u6362\u4e3a\u89c6\u56fe\u7a7a\u95f4\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5e94\u7528\u4e86\u4e0d\u540c\u7684\u5750\u6807\u53d8\u6362\uff1a</p> <ul> <li>\u6211\u4eec\u4f7f\u7528\u6a21\u578b\u77e9\u9635\u4ece\u6a21\u578b\u5750\u6807\u8f6c\u6362\u4e3a\u4e16\u754c\u5750\u6807\u3002</li> <li>\u6211\u4eec\u4f7f\u7528\u89c6\u56fe\u77e9\u9635\uff08\u63d0\u4f9b\u76f8\u673a\u6548\u679c\uff09\u4ece\u4e16\u754c\u5750\u6807\u8f6c\u6362\u4e3a\u89c6\u56fe\u7a7a\u95f4\u5750\u6807\u3002</li> <li>\u6211\u4eec\u901a\u8fc7\u5e94\u7528\u900f\u89c6\u6295\u5f71\u77e9\u9635\u4ece\u89c6\u56fe\u5750\u6807\u8f6c\u6362\u4e3a\u9f50\u6b21\u88c1\u526a\u7a7a\u95f4\u3002</li> <li>\u6700\u7ec8\u5c4f\u5e55\u5750\u6807\u7531OpenGL\u81ea\u52a8\u4e3a\u6211\u4eec\u8ba1\u7b97\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u5b83\u4f1a\u8f6c\u6362\u4e3a\u5f52\u4e00\u5316\u8bbe\u5907\u5750\u6807\uff08\u901a\u8fc7\u5c06\\(x, y,z\\)\u5750\u6807\u9664\u4ee5\\(w\\)\u5206\u91cf\uff09\uff0c\u7136\u540e\u8f6c\u6362\u4e3a\\(x,y\\)\u5c4f\u5e55\u5750\u6807\u3002</li> </ul> <p>\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6267\u884c\u9006\u5411\u8def\u5f84\uff0c\u4ece\u5c4f\u5e55\u5750\u6807\\((x,y)\\)\u5230\u4e16\u754c\u5750\u6807\u3002</p> <p>\u7b2c\u4e00\u6b65\u662f\u4ece\u5c4f\u5e55\u5750\u6807\u8f6c\u6362\u4e3a\u5f52\u4e00\u5316\u8bbe\u5907\u5750\u6807\u3002\u89c6\u53e3\u7a7a\u95f4\u4e2d\u7684\\((x, y)\\)\u5750\u6807\u5728\\([0, \u5c4f\u5e55\u5bbd\u5ea6]\\) \\([0, \u5c4f\u5e55\u9ad8\u5ea6]\\)\u8303\u56f4\u5185\u3002\u5c4f\u5e55\u7684\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a\\((0, 0)\\). \u6211\u4eec\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3a\\([-1, 1]\\)\u8303\u56f4\u5185\u7684\u5750\u6807\u3002</p> <p></p> <p>\u6570\u5b66\u5f88\u7b80\u5355\uff1a</p> \\[x = 2 \\cdot screen_x / screenwidth - 1\\] \\[y = 1 - 2 * screen_y / screenheight\\] <p>\u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\\(z\\)\u5206\u91cf\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u5176\u8d4b\u503c\u4e3a\\(-1\\)\uff0c\u8fd9\u6837\u5149\u7ebf\u5c31\u6307\u5411\u6700\u8fdc\u7684\u53ef\u89c1\u8ddd\u79bb\uff08\u8bb0\u4f4f\u5728OpenGL\u4e2d\uff0c\\(-1\\)\u6307\u5411\u5c4f\u5e55\uff09\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e86\u5f52\u4e00\u5316\u8bbe\u5907\u5750\u6807\u4e2d\u7684\u5750\u6807\u3002</p> <p>\u4e3a\u4e86\u7ee7\u7eed\u8fdb\u884c\u53d8\u6362\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u9f50\u6b21\u88c1\u526a\u7a7a\u95f4\u3002\u6211\u4eec\u9700\u8981\u6709\\(w\\)\u5206\u91cf\uff0c\u5373\u4f7f\u7528\u9f50\u6b21\u5750\u6807\u3002\u5c3d\u7ba1\u8fd9\u4e2a\u6982\u5ff5\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0c\u4f46\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u3002\u4e3a\u4e86\u8868\u793a\u4e00\u4e2a3D\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\\(x\\)\u3001\\(y\\)\u548c\\(z\\)\u5206\u91cf\uff0c\u4f46\u6211\u4eec\u4e00\u76f4\u5728\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684\u5206\u91cf\uff0c\u5373\\(w\\)\u5206\u91cf\u3002\u6211\u4eec\u9700\u8981\u8fd9\u4e2a\u989d\u5916\u7684\u5206\u91cf\u624d\u80fd\u4f7f\u7528\u77e9\u9635\u6267\u884c\u4e0d\u540c\u7684\u53d8\u6362\u3002\u6709\u4e9b\u53d8\u6362\u4e0d\u9700\u8981\u8fd9\u4e2a\u989d\u5916\u7684\u5206\u91cf\uff0c\u4f46\u6709\u4e9b\u9700\u8981\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u53ea\u6709\\(x\\)\u3001\\(y\\)\u548c\\(z\\)\u5206\u91cf\uff0c\u5e73\u79fb\u77e9\u9635\u5c31\u65e0\u6cd5\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86w\u5206\u91cf\u5e76\u5c06\u5176\u8d4b\u503c\u4e3a\\(1\\)\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u75284x4\u77e9\u9635\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u5927\u591a\u6570\u53d8\u6362\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5927\u591a\u6570\u53d8\u6362\u77e9\u9635\u4e0d\u4f1a\u6539\u53d8\\(w\\)\u5206\u91cf\u3002\u4e00\u4e2a\u4f8b\u5916\u662f\u6295\u5f71\u77e9\u9635\u3002\u8be5\u77e9\u9635\u5c06\\(w\\)\u503c\u66f4\u6539\u4e3a\u4e0e\\(z\\)\u5206\u91cf\u6210\u6bd4\u4f8b\u3002</p> <p>\u4ece\u9f50\u6b21\u88c1\u526a\u7a7a\u95f4\u8f6c\u6362\u4e3a\u5f52\u4e00\u5316\u8bbe\u5907\u5750\u6807\u662f\u901a\u8fc7\u5c06\\(x\\)\u3001\\(y\\)\u548c\\(z\\)\u5206\u91cf\u9664\u4ee5\\(w\\)\u6765\u5b9e\u73b0\u7684\u3002\u7531\u4e8e\u6b64\u5206\u91cf\u4e0ez\u5206\u91cf\u6210\u6bd4\u4f8b\uff0c\u8fd9\u610f\u5473\u7740\u8fdc\u5904\u7684\u7269\u4f53\u7ed8\u5236\u5f97\u66f4\u5c0f\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u505a\u76f8\u53cd\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u9700\u8981\u53cd\u6295\u5f71\uff0c\u4f46\u7531\u4e8e\u6211\u4eec\u8ba1\u7b97\u7684\u662f\u4e00\u6761\u5149\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u5ffd\u7565\u8fd9\u4e00\u6b65\uff0c\u5c06\\(w\\)\u5206\u91cf\u8bbe\u7f6e\u4e3a\\(1\\)\uff0c\u5e76\u5c06\u5176\u4f59\u5206\u91cf\u4fdd\u6301\u5176\u539f\u59cb\u503c\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u56de\u5230\u89c6\u56fe\u7a7a\u95f4\u3002\u8fd9\u5f88\u5bb9\u6613\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u6295\u5f71\u77e9\u9635\u7684\u9006\u77e9\u9635\u5e76\u5c06\u5176\u4e58\u4ee5\u6211\u4eec\u76844\u5206\u91cf\u5411\u91cf\u3002\u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u4e16\u754c\u7a7a\u95f4\u3002\u540c\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u89c6\u56fe\u77e9\u9635\uff0c\u8ba1\u7b97\u5176\u9006\u77e9\u9635\u5e76\u5c06\u5176\u4e58\u4ee5\u6211\u4eec\u7684\u5411\u91cf\u3002</p> <p>\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u53ea\u5bf9\u65b9\u5411\u611f\u5174\u8da3\uff0c\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\\(w\\)\u5206\u91cf\u8bbe\u7f6e\u4e3a\\(0\\)\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u518d\u6b21\u5c06\\(z\\)\u5206\u91cf\u8bbe\u7f6e\u4e3a\\(-1\\)\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u5b83\u6307\u5411\u5c4f\u5e55\u3002\u5b8c\u6210\u6b64\u64cd\u4f5c\u5e76\u5e94\u7528\u9006\u89c6\u56fe\u77e9\u9635\u540e\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u5411\u91cf\u3002</p> <p>\u4e0b\u4e00\u6b65\u662f\u904d\u5386\u5b9e\u4f53\u53ca\u5176\u5173\u8054\u7684\u7f51\u683c\uff0c\u5e76\u68c0\u67e5\u5b83\u4eec\u7684\u5305\u56f4\u76d2\u662f\u5426\u4e0e\u4ece\u76f8\u673a\u4f4d\u7f6e\u5f00\u59cb\u7684\u5149\u7ebf\u76f8\u4ea4\uff1a</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    private void selectEntity(Window window, Scene scene, Vector2f mousePos) {\n        ...\n        Vector4f min = new Vector4f(0.0f, 0.0f, 0.0f, 1.0f);\n        Vector4f max = new Vector4f(0.0f, 0.0f, 0.0f, 1.0f);\n        Vector2f nearFar = new Vector2f();\n\n        Entity selectedEntity = null;\n        float closestDistance = Float.POSITIVE_INFINITY;\n        Vector3f center = scene.getCamera().getPosition();\n\n        Collection&lt;Model&gt; models = scene.getModelMap().values();\n        Matrix4f modelMatrix = new Matrix4f();\n        for (Model model : models) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            for (Entity entity : entities) {\n                modelMatrix.translate(entity.getPosition()).scale(entity.getScale());\n                for (Material material : model.getMaterialList()) {\n                    for (Mesh mesh : material.getMeshList()) {\n                        Vector3f aabbMin = mesh.getAabbMin();\n                        min.set(aabbMin.x, aabbMin.y, aabbMin.z, 1.0f);\n                        min.mul(modelMatrix);\n                        Vector3f aabMax = mesh.getAabbMax();\n                        max.set(aabMax.x, aabMax.y, aabMax.z, 1.0f);\n                        max.mul(modelMatrix);\n                        if (Intersectionf.intersectRayAab(center.x, center.y, center.z, mouseDir.x, mouseDir.y, mouseDir.z,\n                                min.x, min.y, min.z, max.x, max.y, max.z, nearFar) &amp;&amp; nearFar.x &lt; closestDistance) {\n                            closestDistance = nearFar.x;\n                            selectedEntity = entity;\n                        }\n                    }\n                }\n                modelMatrix.identity();\n            }\n        }\n        scene.setSelectedEntity(selectedEntity);\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a<code>closestDistance</code>\u7684\u53d8\u91cf\u3002\u6b64\u53d8\u91cf\u5c06\u4fdd\u5b58\u6700\u8fd1\u7684\u8ddd\u79bb\u3002\u5bf9\u4e8e\u76f8\u4ea4\u7684\u6e38\u620f\u7269\u54c1\uff0c\u5c06\u8ba1\u7b97\u4ece\u76f8\u673a\u5230\u4ea4\u70b9\u7684\u8ddd\u79bb\u3002\u5982\u679c\u5b83\u5c0f\u4e8e\u5b58\u50a8\u5728<code>closestDistance</code>\u4e2d\u7684\u503c\uff0c\u5219\u6b64\u7269\u54c1\u5c06\u6210\u4e3a\u65b0\u7684\u5019\u9009\u8005\u3002\u6211\u4eec\u9700\u8981\u5e73\u79fb\u548c\u7f29\u653e\u6bcf\u4e2a\u7f51\u683c\u7684\u5305\u56f4\u76d2\u3002\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u6a21\u578b\u77e9\u9635\uff0c\u56e0\u4e3a\u5b83\u4e5f\u4f1a\u8003\u8651\u65cb\u8f6c\uff08\u6211\u4eec\u4e0d\u5e0c\u671b\u8fd9\u6837\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u76d2\u5b50\u4e0e\u8f74\u5bf9\u9f50\uff09\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u53ea\u4f7f\u7528\u5b9e\u4f53\u7684\u6570\u636e\u5e94\u7528\u5e73\u79fb\u548c\u7f29\u653e\u6765\u6784\u5efa\u6a21\u578b\u77e9\u9635\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u4ea4\u96c6\uff1f\u8fd9\u5c31\u662f\u5149\u8363\u7684JOML\u5e93\u6d3e\u4e0a\u7528\u573a\u7684\u5730\u65b9\u3002\u6211\u4eec\u6b63\u5728\u4f7f\u7528JOML\u7684<code>Intersectionf</code>\u7c7b\uff0c\u8be5\u7c7b\u63d0\u4f9b\u4e86\u51e0\u79cd\u8ba1\u7b972D\u548c3D\u4ea4\u96c6\u7684\u65b9\u6cd5\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u6b63\u5728\u4f7f\u7528<code>intersectRayAab</code>\u65b9\u6cd5\u3002</p> <p>\u6b64\u65b9\u6cd5\u5b9e\u73b0\u4e86\u6d4b\u8bd5\u8f74\u5bf9\u9f50\u5305\u56f4\u76d2\u4ea4\u96c6\u7684\u7b97\u6cd5\u3002\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\uff0c\u5982JOML\u6587\u6863\u4e2d\u6240\u8ff0\u3002</p> <p>\u8be5\u65b9\u6cd5\u6d4b\u8bd5\u7531\u539f\u70b9\u548c\u65b9\u5411\u5b9a\u4e49\u7684\u5149\u7ebf\u662f\u5426\u4e0e\u7531\u6700\u5c0f\u548c\u6700\u5927\u89d2\u70b9\u5b9a\u4e49\u7684\u76d2\u5b50\u76f8\u4ea4\u3002\u5982\u524d\u6240\u8ff0\uff0c\u6b64\u7b97\u6cd5\u662f\u6709\u6548\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7acb\u65b9\u4f53\u4e0e\u8f74\u5bf9\u9f50\uff0c\u5982\u679c\u5b83\u4eec\u65cb\u8f6c\u4e86\uff0c\u6b64\u65b9\u6cd5\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002\u6b64\u5916\uff0c\u5728\u6709\u52a8\u753b\u65f6\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4e3a\u6bcf\u4e2a\u52a8\u753b\u5e27\u8bbe\u7f6e\u4e0d\u540c\u7684\u5305\u56f4\u76d2\uff08Assimp\u8ba1\u7b97\u7ed1\u5b9a\u59ff\u52bf\u7684\u5305\u56f4\u76d2\uff09\u3002<code>intersectRayAab</code>\u65b9\u6cd5\u63a5\u6536\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <ul> <li>\u539f\u70b9\uff1a\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u5c06\u662f\u6211\u4eec\u7684\u76f8\u673a\u4f4d\u7f6e\u3002</li> <li>\u65b9\u5411\uff1a\u8fd9\u662f\u6307\u5411\u9f20\u6807\u5750\u6807\u7684\u5149\u7ebf\uff08\u4e16\u754c\u7a7a\u95f4\uff09\u3002</li> <li>\u76d2\u5b50\u7684\u6700\u5c0f\u89d2\u70b9\u3002</li> <li>\u6700\u5927\u89d2\u70b9\u3002\u4e0d\u8a00\u81ea\u660e\u3002</li> <li>\u7ed3\u679c\u5411\u91cf\u3002\u8fd9\u5c06\u5305\u542b\u4ea4\u70b9\u7684\u8fd1\u8ddd\u79bb\u548c\u8fdc\u8ddd\u79bb\u3002</li> </ul> <p>\u5982\u679c\u5b58\u5728\u4ea4\u96c6\uff0c\u8be5\u65b9\u6cd5\u5c06\u8fd4\u56detrue\u3002\u5982\u679c\u4e3atrue\uff0c\u6211\u4eec\u68c0\u67e5\u6700\u8fd1\u7684\u8ddd\u79bb\u5e76\u5728\u9700\u8981\u65f6\u66f4\u65b0\u5b83\uff0c\u5e76\u5b58\u50a8\u5019\u9009\u9009\u5b9a\u9879\u7684\u5f15\u7528\u3002</p> <p>\u663e\u7136\uff0c\u6b64\u5904\u4ecb\u7ecd\u7684\u65b9\u6cd5\u8fdc\u975e\u6700\u4f18\uff0c\u4f46\u5b83\u5c06\u4e3a\u60a8\u63d0\u4f9b\u57fa\u7840\uff0c\u4ee5\u4fbf\u60a8\u81ea\u5df1\u5f00\u53d1\u66f4\u590d\u6742\u7684\u65b9\u6cd5\u3002\u573a\u666f\u7684\u67d0\u4e9b\u90e8\u5206\u53ef\u4ee5\u8f7b\u677e\u4e22\u5f03\uff0c\u4f8b\u5982\u76f8\u673a\u540e\u9762\u7684\u7269\u4f53\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u76f8\u4ea4\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u6839\u636e\u5230\u76f8\u673a\u7684\u8ddd\u79bb\u5bf9\u7269\u54c1\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u3002</p> <p>\u6211\u4eec\u5c06\u4fee\u6539<code>Main</code>\u7c7b\u4ee5\u663e\u793a\u4e24\u4e2a\u65cb\u8f6c\u7684\u7acb\u65b9\u4f53\u6765\u6f14\u793a\u8be5\u6280\u672f\uff1a</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    private Entity cubeEntity1;\n    private Entity cubeEntity2;\n    ...\n    private float rotation;\n\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-18\", opts, main);\n        ...\n    }\n    ...\n    public void init(Window window, Scene scene, Render render) {\n        ...\n        Model cubeModel = ModelLoader.loadModel(\"cube-model\", \"resources/models/cube/cube.obj\",\n                scene.getTextureCache(), false);\n        scene.addModel(cubeModel);\n        cubeEntity1 = new Entity(\"cube-entity-1\", cubeModel.getId());\n        cubeEntity1.setPosition(0, 2, -1);\n        scene.addEntity(cubeEntity1);\n\n        cubeEntity2 = new Entity(\"cube-entity-2\", cubeModel.getId());\n        cubeEntity2.setPosition(-2, 2, -1);\n        scene.addEntity(cubeEntity2);\n        ...\n    }\n    ...\n    public void update(Window window, Scene scene, long diffTimeMillis) {\n        rotation += 1.5;\n        if (rotation &gt; 360) {\n            rotation = 0;\n        }\n        cubeEntity1.setRotation(1, 1, 1, (float) Math.toRadians(rotation));\n        cubeEntity1.updateModelMatrix();\n\n        cubeEntity2.setRotation(1, 1, 1, (float) Math.toRadians(360 - rotation));\n        cubeEntity2.updateModelMatrix();\n    }\n}\n</code></pre> <p>\u60a8\u5c06\u80fd\u591f\u770b\u5230\u5f53\u7528\u9f20\u6807\u70b9\u51fb\u65f6\uff0c\u7acb\u65b9\u4f53\u5982\u4f55\u4ee5\u84dd\u8272\u6e32\u67d3\uff1a</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"19-deferred-shading/","title":"\u7b2c19\u7ae0 - \u5ef6\u8fdf\u7740\u8272\uff08Deferred Shading\uff09","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6e32\u67d33D\u573a\u666f\u7684\u65b9\u5f0f\u79f0\u4e3a\u524d\u5411\u6e32\u67d3\u3002\u6211\u4eec\u9996\u5148\u6e32\u67d33D\u5bf9\u8c61\uff0c\u7136\u540e\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u5e94\u7528\u7eb9\u7406\u548c\u5149\u7167\u6548\u679c\u3002\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u590d\u6742\u7684\u7247\u6bb5\u7740\u8272\u5668\u901a\u9053\uff0c\u5176\u4e2d\u5305\u542b\u8bb8\u591a\u5149\u6e90\u548c\u590d\u6742\u6548\u679c\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u7387\u4e0d\u9ad8\u3002\u6b64\u5916\uff0c\u6211\u4eec\u6700\u7ec8\u53ef\u80fd\u4f1a\u5c06\u8fd9\u4e9b\u6548\u679c\u5e94\u7528\u4e8e\u53ef\u80fd\u7531\u4e8e\u6df1\u5ea6\u6d4b\u8bd5\uff08Depth Test\uff09\u800c\u88ab\u4e22\u5f03\u7684\u7247\u6bb5\uff08\u5c3d\u7ba1\u5982\u679c\u6211\u4eec\u542f\u7528\u65e9\u671f\u7247\u6bb5\u6d4b\u8bd5\uff0c\u60c5\u51b5\u5e76\u975e\u5b8c\u5168\u5982\u6b64\uff09\u3002</p> <p>\u4e3a\u4e86\u7f13\u89e3\u4e0a\u8ff0\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u5ef6\u8fdf\u7740\u8272\uff08deferred shading\uff09\u7684\u6280\u672f\u6765\u6539\u53d8\u6211\u4eec\u6e32\u67d3\u573a\u666f\u7684\u65b9\u5f0f\u3002\u4f7f\u7528\u5ef6\u8fdf\u7740\u8272\uff08deferred shading\uff09\uff0c\u6211\u4eec\u9996\u5148\u5c06\u540e\u7eed\u9636\u6bb5\uff08\u5728\u7247\u6bb5\u7740\u8272\u5668\u4e2d\uff09\u6240\u9700\u7684\u51e0\u4f55\u4fe1\u606f\u6e32\u67d3\u5230\u7f13\u51b2\u533a\u4e2d\u3002\u7247\u6bb5\u7740\u8272\u5668\u6240\u9700\u7684\u590d\u6742\u8ba1\u7b97\u88ab\u63a8\u8fdf\u5230\u4f7f\u7528\u8fd9\u4e9b\u7f13\u51b2\u533a\u4e2d\u5b58\u50a8\u7684\u4fe1\u606f\u7684\u540e\u7eed\u9636\u6bb5\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"19-deferred-shading/#_1","title":"\u6982\u5ff5","text":"<p>\u5ef6\u8fdf\u7740\u8272\uff08Deferred shading\uff09\u9700\u8981\u6267\u884c\u4e24\u4e2a\u6e32\u67d3\u901a\u9053\u3002\u7b2c\u4e00\u4e2a\u662f\u51e0\u4f55\u4f53\u901a\u9053\uff0c\u6211\u4eec\u5c06\u573a\u666f\u6e32\u67d3\u5230\u4e00\u4e2a\u7f13\u51b2\u533a\u4e2d\uff0c\u8be5\u7f13\u51b2\u533a\u5c06\u5305\u542b\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <ul> <li>\u6df1\u5ea6\u503c\u3002</li> <li>\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6f2b\u53cd\u5c04\uff08Diffuse reflectance\uff09\u989c\u8272\u548c\u53cd\u5c04\u56e0\u5b50\u3002</li> <li>\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u955c\u9762\u53cd\u5c04\uff08Specular reflectance\uff09\u5206\u91cf\u3002</li> <li>\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6cd5\u7ebf\uff08\u4e5f\u5728\u5149\u89c6\u56fe\u5750\u6807\u7a7a\u95f4\uff08coordinate space\uff09\u4e2d\uff09\u3002</li> </ul> <p>\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u90fd\u5b58\u50a8\u5728\u4e00\u4e2a\u79f0\u4e3aG-\u7f13\u51b2\u533a\uff08G-Buffer\uff09\u7684\u7f13\u51b2\u533a\u4e2d\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u901a\u9053\u79f0\u4e3a\u5149\u7167\u901a\u9053\u3002\u6b64\u901a\u9053\u91c7\u7528\u4e00\u4e2a\u586b\u5145\u6574\u4e2a\u5c4f\u5e55\u7684\u56db\u8fb9\u5f62\uff0c\u5e76\u4f7f\u7528G-\u7f13\u51b2\u533a\uff08G-Buffer\uff09\u4e2d\u5305\u542b\u7684\u4fe1\u606f\u4e3a\u6bcf\u4e2a\u7247\u6bb5\u751f\u6210\u989c\u8272\u4fe1\u606f\u3002\u5f53\u6211\u4eec\u6267\u884c\u5149\u7167\u901a\u9053\u65f6\uff0c\u6df1\u5ea6\u6d4b\u8bd5\uff08Depth Test\uff09\u5df2\u7ecf\u79fb\u9664\u4e86\u6240\u6709\u4e0d\u4f1a\u88ab\u770b\u5230\u7684\u573a\u666f\u6570\u636e\u3002\u56e0\u6b64\uff0c\u8981\u6267\u884c\u7684\u64cd\u4f5c\u6570\u91cf\u4ec5\u9650\u4e8e\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u5185\u5bb9\u3002</p> <p>\u60a8\u53ef\u80fd\u4f1a\u95ee\uff0c\u6267\u884c\u989d\u5916\u7684\u6e32\u67d3\u901a\u9053\u662f\u5426\u4f1a\u63d0\u9ad8\u6027\u80fd\u3002\u7b54\u6848\u662f\u53d6\u51b3\u4e8e\u60c5\u51b5\u3002\u5f53\u60a8\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5149\u7167\u901a\u9053\u65f6\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528\u5ef6\u8fdf\u7740\u8272\uff08deferred shading\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u989d\u5916\u7684\u6e32\u67d3\u6b65\u9aa4\u901a\u8fc7\u51cf\u5c11\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\u6765\u8865\u507f\u3002</p>"},{"location":"19-deferred-shading/#g-","title":"G-\u7f13\u51b2\u533a","text":"<p>\u6240\u4ee5\u8ba9\u6211\u4eec\u5f00\u59cb\u7f16\u7801\u3002\u6211\u4eec\u5c06\u8981\u505a\u7684\u7b2c\u4e00\u9879\u4efb\u52a1\u662f\u4e3aG-\u7f13\u51b2\u533a\uff08G-Buffer\uff09\u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b\u3002\u8be5\u7c7b\u540d\u4e3a<code>GBuffer</code>\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjgl.opengl.GL30;\nimport org.lwjgl.system.MemoryStack;\nimport org.lwjglb.engine.Window;\n\nimport java.nio.*;\nimport java.util.Arrays;\n\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class GBuffer {\n\n    private static final int TOTAL_TEXTURES = 4;\n\n    private int gBufferId;\n    private int height;\n    private int[] textureIds;\n    private int width;\n    ...\n}\n</code></pre> <p>\u8be5\u7c7b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5e38\u91cf\uff0c\u7528\u4e8e\u8868\u793a\u8981\u4f7f\u7528\u7684\u6700\u5927\u7f13\u51b2\u533a\u6570\u91cf\u3002G-\u7f13\u51b2\u533a\uff08G-Buffer\uff09\u672c\u8eab\u7684\u6807\u8bc6\u7b26\u4ee5\u53ca\u7528\u4e8e\u5355\u4e2a\u7f13\u51b2\u533a\u7684\u6570\u7ec4\u3002\u8fd8\u5b58\u50a8\u4e86\u7eb9\u7406\u7684\u5927\u5c0f\u3002</p> <p>\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u6784\u9020\u51fd\u6570\uff1a</p> <pre><code>public class GBuffer {\n    ...\n    public GBuffer(Window window) {\n        gBufferId = glGenFramebuffers();\n        glBindFramebuffer(GL_DRAW_FRAMEBUFFER, gBufferId);\n\n        textureIds = new int[TOTAL_TEXTURES];\n        glGenTextures(textureIds);\n\n        this.width = window.getWidth();\n        this.height = window.getHeight();\n\n        for (int i = 0; i &lt; TOTAL_TEXTURES; i++) {\n            glBindTexture(GL_TEXTURE_2D, textureIds[i]);\n            int attachmentType;\n            if (i == TOTAL_TEXTURES - 1) {\n                glTexImage2D(GL_TEXTURE_2D, 0, GL_DEPTH_COMPONENT32F, width, height, 0, GL_DEPTH_COMPONENT, GL_FLOAT,\n                        (ByteBuffer) null);\n                attachmentType = GL_DEPTH_ATTACHMENT;\n            } else {\n                glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA32F, width, height, 0, GL_RGBA, GL_FLOAT, (ByteBuffer) null);\n                attachmentType = GL_COLOR_ATTACHMENT0 + i;\n            }\n            glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\n            glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);\n\n            glFramebufferTexture2D(GL_FRAMEBUFFER, attachmentType, GL_TEXTURE_2D, textureIds[i], 0);\n        }\n\n        try (MemoryStack stack = MemoryStack.stackPush()) {\n            IntBuffer intBuff = stack.mallocInt(TOTAL_TEXTURES);\n            for (int i = 0; i &lt; TOTAL_TEXTURES; i++) {\n                intBuff.put(i, GL_COLOR_ATTACHMENT0 + i);\n            }\n            glDrawBuffers(intBuff);\n        }\n\n        glBindFramebuffer(GL_FRAMEBUFFER, 0);\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u521b\u5efa\u4e00\u4e2a\u5e27\u7f13\u51b2\uff08Frame Buffer\uff09\u3002\u8bb0\u4f4f\uff0c\u5e27\u7f13\u51b2\uff08Frame Buffer\uff09\u53ea\u662f\u4e00\u4e2aOpenGL\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u6765\u6267\u884c\u6e32\u67d3\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u6e32\u67d3\u5230\u5c4f\u5e55\u3002\u7136\u540e\u6211\u4eec\u751f\u6210\u4e00\u7ec4\u7eb9\u7406\uff084\u4e2a\u7eb9\u7406\uff09\uff0c\u8fd9\u4e9b\u7eb9\u7406\u5c06\u4e0e\u5e27\u7f13\u51b2\uff08Frame Buffer\uff09\u5173\u8054\u3002</p> <p>\u4e4b\u540e\uff0c\u6211\u4eec\u4f7f\u7528for\u5faa\u73af\u521d\u59cb\u5316\u7eb9\u7406\u3002\u6211\u4eec\u6709\u4ee5\u4e0b\u7c7b\u578b\uff1a</p> <ul> <li>\u201c\u5e38\u89c4\u7eb9\u7406\u201d\uff0c\u5c06\u5b58\u50a8\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u3001\u6f2b\u53cd\u5c04\uff08Diffuse reflectance\uff09\u5206\u91cf\u7b49\u3002</li> <li>\u7528\u4e8e\u5b58\u50a8\u6df1\u5ea6\u7f13\u51b2\u533a\u7684\u7eb9\u7406\u3002\u8fd9\u5c06\u662f\u6211\u4eec\u7684\u6700\u540e\u4e00\u4e2a\u7eb9\u7406\u3002</li> </ul> <p>\u7eb9\u7406\u521d\u59cb\u5316\u540e\uff0c\u6211\u4eec\u542f\u7528\u5b83\u4eec\u7684\u91c7\u6837\u5e76\u5c06\u5176\u9644\u52a0\u5230\u5e27\u7f13\u51b2\uff08Frame Buffer\uff09\u3002\u6bcf\u4e2a\u7eb9\u7406\u90fd\u4f7f\u7528\u4e00\u4e2a\u4ece<code>GL_COLOR_ATTACHMENT0</code>\u5f00\u59cb\u7684\u6807\u8bc6\u7b26\u9644\u52a0\u3002\u6bcf\u4e2a\u7eb9\u7406\u5c06\u8be5ID\u589e\u52a0\u4e00\uff0c\u56e0\u6b64\u4f4d\u7f6e\u4f7f\u7528<code>GL_COLOR_ATTACHMENT0</code>\u9644\u52a0\uff0c\u6f2b\u53cd\u5c04\uff08Diffuse reflectance\uff09\u5206\u91cf\u4f7f\u7528<code>GL_COLOR_ATTACHMENT1</code>\uff08\u5373<code>GL_COLOR_ATTACHMENT0 + 1</code>\uff09\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002</p> <p>\u521b\u5efa\u6240\u6709\u7eb9\u7406\u540e\uff0c\u6211\u4eec\u9700\u8981\u542f\u7528\u5b83\u4eec\u4f9b\u7247\u6bb5\u7740\u8272\u5668\u7528\u4e8e\u6e32\u67d3\u3002\u8fd9\u901a\u8fc7\u8c03\u7528<code>glDrawBuffers</code>\u5b8c\u6210\u3002\u6211\u4eec\u53ea\u9700\u4f20\u9012\u5305\u542b\u4f7f\u7528\u7684\u989c\u8272\u9644\u4ef6\u6807\u8bc6\u7b26\u7684\u6570\u7ec4\uff08<code>GL_COLOR_ATTACHMENT0</code>\u5230<code>GL_COLOR_ATTACHMENT5</code>\uff09\u3002</p> <p>\u8be5\u7c7b\u7684\u5176\u4f59\u90e8\u5206\u53ea\u662fgetter\u65b9\u6cd5\u548ccleanup\u65b9\u6cd5\u3002</p> <pre><code>public class GBuffer {\n    ...\n    public void cleanUp() {\n        glDeleteFramebuffers(gBufferId);\n        Arrays.stream(textureIds).forEach(GL30::glDeleteTextures);\n    }\n\n    public int getGBufferId() {\n        return gBufferId;\n    }\n\n    public int getHeight() {\n        return height;\n    }\n\n    public int[] getTextureIds() {\n        return textureIds;\n    }\n\n    public int getWidth() {\n        return width;\n    }\n}\n</code></pre>"},{"location":"19-deferred-shading/#_2","title":"\u51e0\u4f55\u4f53\u901a\u9053","text":"<p>\u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u5728\u6267\u884c\u51e0\u4f55\u4f53\u901a\u9053\u65f6\u9700\u8981\u5e94\u7528\u7684\u66f4\u6539\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u66f4\u6539\u5e94\u7528\u4e8e<code>SceneRender</code>\u7c7b\u548c\u76f8\u5173\u7684\u7740\u8272\u5668\u3002\u4ece<code>SceneRender</code>\u7c7b\u5f00\u59cb\uff0c\u6211\u4eec\u9700\u8981\u79fb\u9664\u5149\u7167\u5e38\u91cf\u548c\u5149\u7167\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\uff0c\u5b83\u4eec\u5728\u6b64\u901a\u9053\u4e2d\u4e0d\u4f1a\u4f7f\u7528\uff08\u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u4eec\u4e5f\u4e0d\u4f1a\u4f7f\u7528\u6750\u8d28\uff08Material\uff09\u7684\u73af\u5883\u989c\u8272\uff0c\u6211\u4eec\u9700\u8981\u79fb\u9664\u8be5\u7edf\u4e00\u53d8\u91cf\uff08Uniform\uff09\u5e76\u79fb\u9664\u9009\u5b9a\u5b9e\u4f53\u7edf\u4e00\u53d8\u91cf\uff08Uniform\uff09\uff09\uff1a</p> <pre><code>public class SceneRender {\n\n    private ShaderProgram shaderProgram;\n    private UniformsMap uniformsMap;\n    ...\n    private void createUniforms() {\n        uniformsMap = new UniformsMap(shaderProgram.getProgramId());\n        uniformsMap.createUniform(\"projectionMatrix\");\n        uniformsMap.createUniform(\"modelMatrix\");\n        uniformsMap.createUniform(\"viewMatrix\");\n        uniformsMap.createUniform(\"bonesMatrices\");\n        uniformsMap.createUniform(\"txtSampler\");\n        uniformsMap.createUniform(\"normalSampler\");\n        uniformsMap.createUniform(\"material.diffuse\");\n        uniformsMap.createUniform(\"material.specular\");\n        uniformsMap.createUniform(\"material.reflectance\");\n        uniformsMap.createUniform(\"material.hasNormalMap\");\n    }\n    ...\n}\n</code></pre> <p><code>render</code>\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    public void render(Scene scene, GBuffer gBuffer) {\n        glBindFramebuffer(GL_DRAW_FRAMEBUFFER, gBuffer.getGBufferId());\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n        glViewport(0, 0, gBuffer.getWidth(), gBuffer.getHeight());\n        glDisable(GL_BLEND);\n\n        shaderProgram.bind();\n\n        uniformsMap.setUniform(\"projectionMatrix\", scene.getProjection().getProjMatrix());\n        uniformsMap.setUniform(\"viewMatrix\", scene.getCamera().getViewMatrix());\n\n        uniformsMap.setUniform(\"txtSampler\", 0);\n        uniformsMap.setUniform(\"normalSampler\", 1);\n\n        Collection&lt;Model&gt; models = scene.getModelMap().values();\n        TextureCache textureCache = scene.getTextureCache();\n        for (Model model : models) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n\n            for (Material material : model.getMaterialList()) {\n                uniformsMap.setUniform(\"material.diffuse\", material.getDiffuseColor());\n                uniformsMap.setUniform(\"material.specular\", material.getSpecularColor());\n                uniformsMap.setUniform(\"material.reflectance\", material.getReflectance());\n                String normalMapPath = material.getNormalMapPath();\n                boolean hasNormalMapPath = normalMapPath != null;\n                uniformsMap.setUniform(\"material.hasNormalMap\", hasNormalMapPath ? 1 : 0);\n                Texture texture = textureCache.getTexture(material.getTexturePath());\n                glActiveTexture(GL_TEXTURE0);\n                texture.bind();\n                if (hasNormalMapPath) {\n                    Texture normalMapTexture = textureCache.getTexture(normalMapPath);\n                    glActiveTexture(GL_TEXTURE1);\n                    normalMapTexture.bind();\n                }\n\n                for (Mesh mesh : material.getMeshList()) {\n                    glBindVertexArray(mesh.getVaoId());\n                    for (Entity entity : entities) {\n                        uniformsMap.setUniform(\"modelMatrix\", entity.getModelMatrix());\n                        AnimationData animationData = entity.getAnimationData();\n                        if (animationData == null) {\n                            uniformsMap.setUniform(\"bonesMatrices\", AnimationData.DEFAULT_BONES_MATRICES);\n                        } else {\n                            uniformsMap.setUniform(\"bonesMatrices\", animationData.getCurrentFrame().boneMatrices());\n                        }\n                        glDrawElements(GL_TRIANGLES, mesh.getNumVertices(), GL_UNSIGNED_INT, 0);\n                    }\n                }\n            }\n        }\n\n        glBindVertexArray(0);\n        glEnable(GL_BLEND);\n        shaderProgram.unbind();\n    }\n}\n</code></pre> <p>\u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u73b0\u5728\u63a5\u6536\u4e00\u4e2a<code>GBuffer</code>\u5b9e\u4f8b\u4f5c\u4e3a\u65b9\u6cd5\u53c2\u6570\u3002\u8be5\u7f13\u51b2\u533a\u662f\u6211\u4eec\u6267\u884c\u6e32\u67d3\u7684\u5730\u65b9\uff0c\u56e0\u6b64\u6211\u4eec\u9996\u5148\u901a\u8fc7\u8c03\u7528<code>glBindFramebuffer</code>\u7ed1\u5b9a\u8be5\u7f13\u51b2\u533a\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u6e05\u9664\u8be5\u7f13\u51b2\u533a\u5e76\u7981\u7528\u6df7\u5408\u3002\u4f7f\u7528\u5ef6\u8fdf\u7740\u8272\uff08deferred rendering\uff09\u65f6\uff0c\u900f\u660e\u5bf9\u8c61\u6709\u70b9\u68d8\u624b\u3002\u65b9\u6cd5\u662f\u5728\u5149\u7167\u901a\u9053\u4e2d\u6e32\u67d3\u5b83\u4eec\uff0c\u6216\u8005\u5728\u51e0\u4f55\u4f53\u901a\u9053\u4e2d\u4e22\u5f03\u5b83\u4eec\u3002\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u5df2\u7ecf\u79fb\u9664\u4e86\u6240\u6709\u5149\u7167\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u8bbe\u7f6e\u4ee3\u7801\u3002</p> <p>\u9876\u70b9\u7740\u8272\u5668\uff08<code>scene.vert</code>\uff09\u4e2d\u552f\u4e00\u7684\u66f4\u6539\u662f\uff0c\u73b0\u5728\u89c6\u56fe\u4f4d\u7f6e\u662f\u4e00\u4e2a\u56db\u5206\u91cf\u5411\u91cf\uff08<code>vec4</code>\uff09\uff1a</p> <pre><code>#version 330\n...\nout vec4 outViewPosition;\n...\nvoid main()\n{\n    ...\n    outWorldPosition = modelMatrix * initPos;\n    outViewPosition  = viewMatrix * outWorldPosition;\n    gl_Position   = projectionMatrix * outViewPosition;\n    outNormal     = normalize(modelViewMatrix * initNormal).xyz;\n    outTangent    = normalize(modelViewMatrix * initTangent).xyz;\n    outBitangent  = normalize(modelViewMatrix * initBitangent).xyz;\n    outTextCoord  = texCoord;\n}\n</code></pre> <p>\u7247\u6bb5\u7740\u8272\u5668\uff08<code>scene.frag</code>\uff09\u5df2\u5927\u5927\u7b80\u5316\uff1a</p> <pre><code>#version 330\n\nin vec3 outNormal;\nin vec3 outTangent;\nin vec3 outBitangent;\nin vec2 outTextCoord;\nin vec4 outViewPosition;\nin vec4 outWorldPosition;\n\nlayout (location = 0) out vec4 buffAlbedo;\nlayout (location = 1) out vec4 buffNormal;\nlayout (location = 2) out vec4 buffSpecular;\n\nstruct Material\n{\n    vec4 diffuse;\n    vec4 specular;\n    float reflectance;\n    int hasNormalMap;\n};\n\nuniform sampler2D txtSampler;\nuniform sampler2D normalSampler;\nuniform Material material;\n\nvec3 calcNormal(vec3 normal, vec3 tangent, vec3 bitangent, vec2 textCoords) {\n    mat3 TBN = mat3(tangent, bitangent, normal);\n    vec3 newNormal = texture(normalSampler, textCoords).rgb;\n    newNormal = normalize(newNormal * 2.0 - 1.0);\n    newNormal = normalize(TBN * newNormal);\n    return newNormal;\n}\n\nvoid main() {\n    vec4 text_color = texture(txtSampler, outTextCoord);\n    vec4 diffuse = text_color + material.diffuse;\n    if (diffuse.a &lt; 0.5) {\n        discard;\n    }\n    vec4 specular = text_color + material.specular;\n\n    vec3 normal = outNormal;\n    if (material.hasNormalMap &gt; 0) {\n        normal = calcNormal(outNormal, outTangent, outBitangent, outTextCoord);\n    }\n\n    buffAlbedo   = vec4(diffuse.xyz, material.reflectance);\n    buffNormal   = vec4(0.5 * normal + 0.5, 1.0);\n    buffSpecular = specular;\n}\n</code></pre> <p>\u6700\u76f8\u5173\u7684\u884c\u662f\uff1a</p> <pre><code>...\nlayout (location = 0) out vec4 buffAlbedo;\nlayout (location = 1) out vec4 buffNormal;\nlayout (location = 2) out vec4 buffSpecular;\n...\n</code></pre> <p>\u8fd9\u662f\u6211\u4eec\u5f15\u7528\u6b64\u7247\u6bb5\u7740\u8272\u5668\u5c06\u5199\u5165\u7684\u7eb9\u7406\u7684\u5730\u65b9\u3002\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u8f6c\u50a8\u6f2b\u53cd\u5c04\uff08Diffuse reflectance\uff09\u989c\u8272\uff08\u53ef\u4ee5\u662f\u5173\u8054\u7eb9\u7406\u7684\u989c\u8272\u6216\u6750\u8d28\uff08Material\uff09\u7684\u4e00\u4e2a\u5206\u91cf\uff09\u3001\u955c\u9762\u53cd\u5c04\uff08Specular reflectance\uff09\u5206\u91cf\u3001\u6cd5\u7ebf\u4ee5\u53ca\u9634\u5f71\u8d34\u56fe\uff08shadow map\uff09\u7684\u6df1\u5ea6\u503c\u3002\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u6211\u4eec\u6ca1\u6709\u5728\u7eb9\u7406\u4e2d\u5b58\u50a8\u4f4d\u7f6e\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6df1\u5ea6\u503c\u91cd\u5efa\u7247\u6bb5\u4f4d\u7f6e\u3002\u6211\u4eec\u5c06\u5728\u5149\u7167\u901a\u9053\u4e2d\u770b\u5230\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u3002</p> <p>\u65c1\u6ce8\uff1a\u6211\u4eec\u7b80\u5316\u4e86<code>Material</code>\u7c7b\u7684\u5b9a\u4e49\uff0c\u79fb\u9664\u4e86\u73af\u5883\u989c\u8272\u5206\u91cf\u3002</p> <p>\u5982\u679c\u60a8\u4f7f\u7528OpenGL\u8c03\u8bd5\u5668\uff08\u4f8b\u5982RenderDoc\uff09\u8c03\u8bd5\u793a\u4f8b\u6267\u884c\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u51e0\u4f55\u4f53\u901a\u9053\u671f\u95f4\u751f\u6210\u7684\u7eb9\u7406\u3002\u53cd\u7167\u7387\u7eb9\u7406\u5c06\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u4fdd\u5b58\u6cd5\u7ebf\u503c\u7684\u7eb9\u7406\u5c06\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u4fdd\u5b58\u955c\u9762\u53cd\u5c04\uff08Specular reflectance\uff09\u989c\u8272\u503c\u7684\u7eb9\u7406\u5c06\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u6700\u540e\uff0c\u6df1\u5ea6\u7eb9\u7406\u5c06\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p>"},{"location":"19-deferred-shading/#_3","title":"\u5149\u7167\u901a\u9053","text":"<p>\u4e3a\u4e86\u6267\u884c\u5149\u7167\u901a\u9053\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>LightsRender</code>\u7684\u65b0\u7c7b\uff0c\u8be5\u7c7b\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.joml.*;\nimport org.lwjglb.engine.scene.*;\nimport org.lwjglb.engine.scene.lights.*;\n\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL11.*;\nimport static org.lwjgl.opengl.GL14.*;\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class LightsRender {\n    private static final int MAX_POINT_LIGHTS = 5;\n    private static final int MAX_SPOT_LIGHTS = 5;\n\n    private final ShaderProgram shaderProgram;\n\n    private QuadMesh quadMesh;\n    private UniformsMap uniformsMap;\n\n    public LightsRender() {\n        List&lt;ShaderProgram.ShaderModuleData&gt; shaderModuleDataList = new ArrayList&lt;&gt;();\n        shaderModuleDataList.add(new ShaderProgram.ShaderModuleData(\"resources/shaders/lights.vert\", GL_VERTEX_SHADER));\n        shaderModuleDataList.add(new ShaderProgram.ShaderModuleData(\"resources/shaders/lights.frag\", GL_FRAGMENT_SHADER));\n        shaderProgram = new ShaderProgram(shaderModuleDataList);\n        quadMesh = new QuadMesh();\n        createUniforms();\n    }\n\n    public void cleanup() {\n        quadMesh.cleanup();\n        shaderProgram.cleanup();\n    }\n    ...\n}\n</code></pre> <p>\u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u9664\u4e86\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7740\u8272\u5668\u7a0b\u5e8f\u5916\uff0c\u6211\u4eec\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684<code>QadMesh</code>\u7c7b\u5c5e\u6027\uff08\u5c1a\u672a\u5b9a\u4e49\uff09\u3002\u5728\u5206\u6790\u6e32\u67d3\u65b9\u6cd5\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u7a0d\u5fae\u601d\u8003\u4e00\u4e0b\u5982\u4f55\u6e32\u67d3\u5149\u6e90\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528G-\u7f13\u51b2\u533a\uff08G-Buffer\uff09\u7684\u5185\u5bb9\uff0c\u4f46\u4e3a\u4e86\u4f7f\u7528\u5b83\u4eec\uff0c\u6211\u4eec\u9700\u8981\u5148\u6e32\u67d3\u4e00\u4e9b\u4e1c\u897f\u3002\u4f46\u662f\uff0c\u6211\u4eec\u5df2\u7ecf\u7ed8\u5236\u4e86\u573a\u666f\uff0c\u73b0\u5728\u6211\u4eec\u8981\u6e32\u67d3\u4ec0\u4e48\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6e32\u67d3\u4e00\u4e2a\u586b\u5145\u6574\u4e2a\u5c4f\u5e55\u7684\u56db\u8fb9\u5f62\u3002\u5bf9\u4e8e\u8be5\u56db\u8fb9\u5f62\u7684\u6bcf\u4e2a\u7247\u6bb5\uff0c\u6211\u4eec\u5c06\u4f7f\u7528G-\u7f13\u51b2\u533a\uff08G-Buffer\uff09\u4e2d\u5305\u542b\u7684\u6570\u636e\u5e76\u751f\u6210\u6b63\u786e\u7684\u8f93\u51fa\u989c\u8272\u3002\u8fd9\u5c31\u662f<code>QuadMesh</code>\u7c7b\u53d1\u6325\u4f5c\u7528\u7684\u5730\u65b9\uff0c\u5b83\u53ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u56db\u8fb9\u5f62\uff0c\u5c06\u7528\u4e8e\u5728\u5149\u7167\u901a\u9053\u4e2d\u6e32\u67d3\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjgl.opengl.GL30;\nimport org.lwjgl.system.*;\n\nimport java.nio.*;\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL30.*;\n\npublic class QuadMesh {\n\n    private int numVertices;\n    private int vaoId;\n    private List&lt;Integer&gt; vboIdList;\n\n    public QuadMesh() {\n        vboIdList = new ArrayList&lt;&gt;();\n        float[] positions = new float[]{\n                -1.0f, 1.0f, 0.0f,\n                1.0f, 1.0f, 0.0f,\n                -1.0f, -1.0f, 0.0f,\n                1.0f, -1.0f, 0.0f,};\n        float[] textCoords = new float[]{\n                0.0f, 1.0f,\n                1.0f, 1.0f,\n                0.0f, 0.0f,\n                1.0f, 0.0f,};\n        int[] indices = new int[]{0, 2, 1, 1, 2, 3};\n        numVertices = indices.length;\n\n        vaoId = glGenVertexArrays();\n        glBindVertexArray(vaoId);\n\n        // Positions VBO\n        int vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer positionsBuffer = MemoryUtil.memCallocFloat(positions.length);\n        positionsBuffer.put(0, positions);\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, positionsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(0);\n        glVertexAttribPointer(0, 3, GL_FLOAT, false, 0, 0);\n\n        // Texture coordinates VBO\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer textCoordsBuffer = MemoryUtil.memCallocFloat(textCoords.length);\n        textCoordsBuffer.put(0, textCoords);\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, textCoordsBuffer, GL_STATIC_DRAW);\n        glEnableVertexAttribArray(1);\n        glVertexAttribPointer(1, 2, GL_FLOAT, false, 0, 0);\n\n        // Index VBO\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        IntBuffer indicesBuffer = MemoryUtil.memCallocInt(indices.length);\n        indicesBuffer.put(0, indices);\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indicesBuffer, GL_STATIC_DRAW);\n\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n        glBindVertexArray(0);\n\n        MemoryUtil.memFree(positionsBuffer);\n        MemoryUtil.memFree(textCoordsBuffer);\n        MemoryUtil.memFree(indicesBuffer);\n    }\n\n    public void cleanup() {\n        vboIdList.forEach(GL30::glDeleteBuffers);\n        glDeleteVertexArrays(vaoId);\n    }\n\n    public int getNumVertices() {\n        return numVertices;\n    }\n\n    public int getVaoId() {\n        return vaoId;\n    }\n}\n</code></pre> <p>\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f4d\u7f6e\u548c\u7eb9\u7406\u5750\u6807\uff08Texture Coordinates\uff09\u5c5e\u6027\uff08\u4ee5\u4fbf\u6b63\u786e\u8bbf\u95eeG-\u7f13\u51b2\u533a\uff08G-Buffer\uff09\u7eb9\u7406\uff09\u3002\u56de\u5230<code>LightsRender</code>\u7c7b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u521b\u5efa\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u7684\u65b9\u6cd5\uff0c\u60a8\u5c06\u770b\u5230\uff0c\u5b83\u6062\u590d\u4e86\u4e4b\u524d\u5728<code>SceneRender</code>\u7c7b\u4e2d\u4f7f\u7528\u7684\u5149\u7167\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\uff0c\u6b64\u5916\u8fd8\u6709\u4e00\u7ec4\u65b0\u7684\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u7528\u4e8e\u6620\u5c04G-\u7f13\u51b2\u533a\uff08G-Buffer\uff09\u7eb9\u7406\uff08<code>albedoSampler</code>\u3001<code>normalSampler</code>\u3001<code>specularSampler</code>\u548c<code>depthSampler</code>\uff09\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u65b0\u7684\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u6765\u4ece\u6df1\u5ea6\u503c\u8ba1\u7b97\u7247\u6bb5\u4f4d\u7f6e\uff0c\u4f8b\u5982<code>invProjectionMatrix</code>\u548c<code>invViewMatrix</code>\u3002\u6211\u4eec\u5c06\u5728\u7740\u8272\u5668\u4ee3\u7801\u4e2d\u770b\u5230\u5b83\u4eec\u5982\u4f55\u4f7f\u7528\u3002</p> <pre><code>public class LightsRender {\n    ...\n    private void createUniforms() {\n        uniformsMap = new UniformsMap(shaderProgram.getProgramId());\n        uniformsMap.createUniform(\"albedoSampler\");\n        uniformsMap.createUniform(\"normalSampler\");\n        uniformsMap.createUniform(\"specularSampler\");\n        uniformsMap.createUniform(\"depthSampler\");\n        uniformsMap.createUniform(\"invProjectionMatrix\");\n        uniformsMap.createUniform(\"invViewMatrix\");\n        uniformsMap.createUniform(\"ambientLight.factor\");\n        uniformsMap.createUniform(\"ambientLight.color\");\n\n        for (int i = 0; i &lt; MAX_POINT_LIGHTS; i++) {\n            String name = \"pointLights[\" + i + \"]\";\n            uniformsMap.createUniform(name + \".position\");\n            uniformsMap.createUniform(name + \".color\");\n            uniformsMap.createUniform(name + \".intensity\");\n            uniformsMap.createUniform(name + \".att.constant\");\n            uniformsMap.createUniform(name + \".att.linear\");\n            uniformsMap.createUniform(name + \".att.exponent\");\n        }\n        for (int i = 0; i &lt; MAX_SPOT_LIGHTS; i++) {\n            String name = \"spotLights[\" + i + \"]\";\n            uniformsMap.createUniform(name + \".pl.position\");\n            uniformsMap.createUniform(name + \".pl.color\");\n            uniformsMap.createUniform(name + \".pl.intensity\");\n            uniformsMap.createUniform(name + \".pl.att.constant\");\n            uniformsMap.createUniform(name + \".pl.att.linear\");\n            uniformsMap.createUniform(name + \".pl.att.exponent\");\n            uniformsMap.createUniform(name + \".conedir\");\n            uniformsMap.createUniform(name + \".cutoff\");\n        }\n\n        uniformsMap.createUniform(\"dirLight.color\");\n        uniformsMap.createUniform(\"dirLight.direction\");\n        uniformsMap.createUniform(\"dirLight.intensity\");\n\n        uniformsMap.createUniform(\"fog.activeFog\");\n        uniformsMap.createUniform(\"fog.color\");\n        uniformsMap.createUniform(\"fog.density\");\n\n        for (int i = 0; i &lt; CascadeShadow.SHADOW_MAP_CASCADE_COUNT; i++) {\n            uniformsMap.createUniform(\"shadowMap_\" + i);\n            uniformsMap.createUniform(\"cascadeshadows[\" + i + \"]\" + \".projViewMatrix\");\n            uniformsMap.createUniform(\"cascadeshadows[\" + i + \"]\" + \".splitDistance\");\n        }\n    }\n    ...\n}\n</code></pre> <p><code>render</code>\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class LightsRender {\n    ...\n    public void render(Scene scene, ShadowRender shadowRender, GBuffer gBuffer) {\n        shaderProgram.bind();\n\n        updateLights(scene);\n\n        // Bind the G-Buffer textures\n        int[] textureIds = gBuffer.getTextureIds();\n        int numTextures = textureIds != null ? textureIds.length : 0;\n        for (int i = 0; i &lt; numTextures; i++) {\n            glActiveTexture(GL_TEXTURE0 + i);\n            glBindTexture(GL_TEXTURE_2D, textureIds[i]);\n        }\n\n        uniformsMap.setUniform(\"albedoSampler\", 0);\n        uniformsMap.setUniform(\"normalSampler\", 1);\n        uniformsMap.setUniform(\"specularSampler\", 2);\n        uniformsMap.setUniform(\"depthSampler\", 3);\n\n        Fog fog = scene.getFog();\n        uniformsMap.setUniform(\"fog.activeFog\", fog.isActive() ? 1 : 0);\n        uniformsMap.setUniform(\"fog.color\", fog.getColor());\n        uniformsMap.setUniform(\"fog.density\", fog.getDensity());\n\n        int start = 4;\n        List&lt;CascadeShadow&gt; cascadeShadows = shadowRender.getCascadeShadows();\n        for (int i = 0; i &lt; CascadeShadow.SHADOW_MAP_CASCADE_COUNT; i++) {\n            glActiveTexture(GL_TEXTURE0 + start + i);\n            uniformsMap.setUniform(\"shadowMap_\" + i, start + i);\n            CascadeShadow cascadeShadow = cascadeShadows.get(i);\n            uniformsMap.setUniform(\"cascadeshadows[\" + i + \"]\" + \".projViewMatrix\", cascadeShadow.getProjViewMatrix());\n            uniformsMap.setUniform(\"cascadeshadows[\" + i + \"]\" + \".splitDistance\", cascadeShadow.getSplitDistance());\n        }\n        shadowRender.getShadowBuffer().bindTextures(GL_TEXTURE0 + start);\n\n        uniformsMap.setUniform(\"invProjectionMatrix\", scene.getProjection().getInvProjMatrix());\n        uniformsMap.setUniform(\"invViewMatrix\", scene.getCamera().getInvViewMatrix());\n\n        glBindVertexArray(quadMesh.getVaoId());\n        glDrawElements(GL_TRIANGLES, quadMesh.getNumVertices(), GL_UNSIGNED_INT, 0);\n\n        shaderProgram.unbind();\n    }\n    ...\n}\n</code></pre> <p>\u66f4\u65b0\u5149\u6e90\u540e\uff0c\u6211\u4eec\u6fc0\u6d3b\u4fdd\u5b58\u51e0\u4f55\u4f53\u901a\u9053\u7ed3\u679c\u7684\u7eb9\u7406\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u8bbe\u7f6e\u96fe\u548c\u7ea7\u8054\u9634\u5f71\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u5e76\u53ea\u7ed8\u5236\u4e00\u4e2a\u56db\u8fb9\u5f62\u3002</p> <p>\u90a3\u4e48\uff0c\u5149\u7167\u901a\u9053\u7684\u9876\u70b9\u7740\u8272\u5668\u662f\u4ec0\u4e48\u6837\u7684\u5462\uff08<code>lights.vert</code>\uff09\uff1f</p> <pre><code>#version 330\n\nlayout (location=0) in vec3 inPos;\nlayout (location=1) in vec2 inCoord;\n\nout vec2 outTextCoord;\n\nvoid main()\n{\n    outTextCoord = inCoord;\n    gl_Position = vec4(inPos, 1.0f);\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u53ea\u662f\u76f4\u63a5\u8f6c\u50a8\u9876\u70b9\u5e76\u5c06\u7eb9\u7406\u5750\u6807\uff08Texture Coordinates\uff09\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\u3002\u7247\u6bb5\u7740\u8272\u5668\uff08<code>lights.frag</code>\uff09\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>#version 330\n\nconst int MAX_POINT_LIGHTS = 5;\nconst int MAX_SPOT_LIGHTS = 5;\nconst float SPECULAR_POWER = 10;\nconst int NUM_CASCADES = 3;\nconst float BIAS = 0.0005;\nconst float SHADOW_FACTOR = 0.25;\n\nin vec2 outTextCoord;\nout vec4 fragColor;\n\nstruct Attenuation\n{\n    float constant;\n    float linear;\n    float exponent;\n};\nstruct AmbientLight\n{\n    float factor;\n    vec3 color;\n};\nstruct PointLight {\n    vec3 position;\n    vec3 color;\n    float intensity;\n    Attenuation att;\n};\nstruct SpotLight\n{\n    PointLight pl;\n    vec3 conedir;\n    float cutoff;\n};\nstruct DirLight\n{\n    vec3 color;\n    vec3 direction;\n    float intensity;\n};\nstruct Fog\n{\n    int activeFog;\n    vec3 color;\n    float density;\n};\nstruct CascadeShadow {\n    mat4 projViewMatrix;\n    float splitDistance;\n};\n\nuniform sampler2D albedoSampler;\nuniform sampler2D normalSampler;\nuniform sampler2D specularSampler;\nuniform sampler2D depthSampler;\n\nuniform mat4 invProjectionMatrix;\nuniform mat4 invViewMatrix;\n\nuniform AmbientLight ambientLight;\nuniform PointLight pointLights[MAX_POINT_LIGHTS];\nuniform SpotLight spotLights[MAX_SPOT_LIGHTS];\nuniform DirLight dirLight;\nuniform Fog fog;\nuniform CascadeShadow cascadeshadows[NUM_CASCADES];\nuniform sampler2D shadowMap_0;\nuniform sampler2D shadowMap_1;\nuniform sampler2D shadowMap_2;\n\nvec4 calcAmbient(AmbientLight ambientLight, vec4 ambient) {\n    return vec4(ambientLight.factor * ambientLight.color, 1) * ambient;\n}\n\nvec4 calcLightColor(vec4 diffuse, vec4 specular, float reflectance, vec3 lightColor, float light_intensity, vec3 position, vec3 to_light_dir, vec3 normal) {\n    vec4 diffuseColor = vec4(0, 0, 0, 1);\n    vec4 specColor = vec4(0, 0, 0, 1);\n\n    // Diffuse Light\n    float diffuseFactor = max(dot(normal, to_light_dir), 0.0);\n    diffuseColor = diffuse * vec4(lightColor, 1.0) * light_intensity * diffuseFactor;\n\n    // Specular Light\n    vec3 camera_direction = normalize(-position);\n    vec3 from_light_dir = -to_light_dir;\n    vec3 reflected_light = normalize(reflect(from_light_dir, normal));\n    float specularFactor = max(dot(camera_direction, reflected_light), 0.0);\n    specularFactor = pow(specularFactor, SPECULAR_POWER);\n    specColor = specular * light_intensity  * specularFactor * reflectance * vec4(lightColor, 1.0);\n\n    return (diffuseColor + specColor);\n}\n\nvec4 calcPointLight(vec4 diffuse, vec4 specular, float reflectance, PointLight light, vec3 position, vec3 normal) {\n    vec3 light_direction = light.position - position;\n    vec3 to_light_dir  = normalize(light_direction);\n    vec4 light_color = calcLightColor(diffuse, specular, reflectance, light.color, light.intensity, position, to_light_dir, normal);\n\n    // Apply Attenuation\n    float distance = length(light_direction);\n    float attenuationInv = light.att.constant + light.att.linear * distance +\n    light.att.exponent * distance * distance;\n    return light_color / attenuationInv;\n}\n\nvec4 calcSpotLight(vec4 diffuse, vec4 specular, float reflectance, SpotLight light, vec3 position, vec3 normal) {\n    vec3 light_direction = light.pl.position - position;\n    vec3 to_light_dir  = normalize(light_direction);\n    vec3 from_light_dir  = -to_light_dir;\n    float spot_alfa = dot(from_light_dir, normalize(light.conedir));\n\n    vec4 color = vec4(0, 0, 0, 0);\n\n    if (spot_alfa &gt; light.cutoff)\n    {\n        color = calcPointLight(diffuse, specular, reflectance, light.pl, position, normal);\n        color *= (1.0 - (1.0 - spot_alfa)/(1.0 - light.cutoff));\n    }\n    return color;\n}\n\nvec4 calcDirLight(vec4 diffuse, vec4 specular, float reflectance, DirLight light, vec3 position, vec3 normal) {\n    return calcLightColor(diffuse, specular, reflectance, light.color, light.intensity, position, normalize(light.direction), normal);\n}\n\nvec4 calcFog(vec3 pos, vec4 color, Fog fog, vec3 ambientLight, DirLight dirLight) {\n    vec3 fogColor = fog.color * (ambientLight + dirLight.color * dirLight.intensity);\n    float distance = length(pos);\n    float fogFactor = 1.0 / exp((distance * fog.density) * (distance * fog.density));\n    fogFactor = clamp(fogFactor, 0.0, 1.0);\n\n    vec3 resultColor = mix(fogColor, color.xyz, fogFactor);\n    return vec4(resultColor.xyz, color.w);\n}\n\nfloat textureProj(vec4 shadowCoord, vec2 offset, int idx) {\n    float shadow = 1.0;\n\n    if (shadowCoord.z &gt; -1.0 &amp;&amp; shadowCoord.z &lt; 1.0) {\n        float dist = 0.0;\n        if (idx == 0) {\n            dist = texture(shadowMap_0, vec2(shadowCoord.xy + offset)).r;\n        } else if (idx == 1) {\n            dist = texture(shadowMap_1, vec2(shadowCoord.xy + offset)).r;\n        } else {\n            dist = texture(shadowMap_2, vec2(shadowCoord.xy + offset)).r;\n        }\n        if (shadowCoord.w &gt; 0 &amp;&amp; dist &lt; shadowCoord.z - BIAS) {\n            shadow = SHADOW_FACTOR;\n        }\n    }\n    return shadow;\n}\n\nfloat calcShadow(vec4 worldPosition, int idx) {\n    vec4 shadowMapPosition = cascadeshadows[idx].projViewMatrix * worldPosition;\n    float shadow = 1.0;\n    vec4 shadowCoord = (shadowMapPosition / shadowMapPosition.w) * 0.5 + 0.5;\n    shadow = textureProj(shadowCoord, vec2(0, 0), idx);\n    return shadow;\n}\n\nvoid main()\n{\n    vec4 albedoSamplerValue = texture(albedoSampler, outTextCoord);\n    vec3 albedo  = albedoSamplerValue.rgb;\n    vec4 diffuse = vec4(albedo, 1);\n\n    float reflectance = albedoSamplerValue.a;\n    vec3 normal = normalize(2.0 * texture(normalSampler, outTextCoord).rgb  - 1.0);\n    vec4 specular = texture(specularSampler, outTextCoord);\n\n    // Retrieve position from depth\n    float depth = texture(depthSampler, outTextCoord).x * 2.0 - 1.0;\n    if (depth == 1) {\n        discard;\n    }\n    vec4 clip      = vec4(outTextCoord.x * 2.0 - 1.0, outTextCoord.y * 2.0 - 1.0, depth, 1.0);\n    vec4 view_w    = invProjectionMatrix * clip;\n    vec3 view_pos  = view_w.xyz / view_w.w;\n    vec4 world_pos = invViewMatrix * vec4(view_pos, 1);\n\n    vec4 diffuseSpecularComp = calcDirLight(diffuse, specular, reflectance, dirLight, view_pos, normal);\n\n    int cascadeIndex = 0;\n    for (int i=0; i&lt;NUM_CASCADES - 1; i++) {\n        if (view_pos.z &lt; cascadeshadows[i].splitDistance) {\n            cascadeIndex = i + 1;\n        }\n    }\n    float shadowFactor = calcShadow(world_pos, cascadeIndex);\n\n    for (int i=0; i&lt;MAX_POINT_LIGHTS; i++) {\n        if (pointLights[i].intensity &gt; 0) {\n            diffuseSpecularComp += calcPointLight(diffuse, specular, reflectance, pointLights[i], view_pos, normal);\n        }\n    }\n\n    for (int i=0; i&lt;MAX_SPOT_LIGHTS; i++) {\n        if (spotLights[i].pl.intensity &gt; 0) {\n            diffuseSpecularComp += calcSpotLight(diffuse, specular, reflectance, spotLights[i], view_pos, normal);\n        }\n    }\n    vec4 ambient = calcAmbient(ambientLight, diffuse);\n    fragColor = ambient + diffuseSpecularComp;\n    fragColor.rgb = fragColor.rgb * shadowFactor;\n\n    if (fog.activeFog == 1) {\n        fragColor = calcFog(view_pos, fragColor, fog, ambientLight.color, dirLight);\n    }\n}\n</code></pre> <p>\u5982\u60a8\u6240\u89c1\uff0c\u5b83\u5305\u542b\u60a8\u5e94\u8be5\u719f\u6089\u7684\u529f\u80fd\u3002\u5b83\u4eec\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\u7528\u4e8e\u573a\u666f\u7247\u6bb5\u7740\u8272\u5668\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u91cd\u8981\u4e8b\u9879\u662f\u4ee5\u4e0b\u51e0\u884c\uff1a</p> <pre><code>uniform sampler2D albedoSampler;\nuniform sampler2D normalSampler;\nuniform sampler2D specularSampler;\nuniform sampler2D depthSampler;\n</code></pre> <p>\u6211\u4eec\u9996\u5148\u6839\u636e\u5f53\u524d\u7247\u6bb5\u5750\u6807\u91c7\u6837\u53cd\u7167\u7387\u3001\u6cd5\u7ebf\u8d34\u56fe\uff08\u4ece[0, -1]\u8f6c\u6362\u4e3a[-1, 1]\u8303\u56f4\uff09\u548c\u955c\u9762\u53cd\u5c04\uff08Specular reflectance\uff09\u9644\u4ef6\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u6bb5\u60a8\u53ef\u80fd\u89c9\u5f97\u65b0\u7684\u4ee3\u7801\u7247\u6bb5\u3002\u6211\u4eec\u9700\u8981\u7247\u6bb5\u4f4d\u7f6e\u6765\u6267\u884c\u5149\u7167\u8ba1\u7b97\u3002\u4f46\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u4f4d\u7f6e\u9644\u4ef6\u3002\u8fd9\u5c31\u662f\u6df1\u5ea6\u9644\u4ef6\u548c\u9006\u6295\u5f71\u77e9\u9635\u53d1\u6325\u4f5c\u7528\u7684\u5730\u65b9\u3002\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u5efa\u4e16\u754c\u4f4d\u7f6e\uff08\u89c6\u56fe\u7a7a\u95f4\u5750\u6807\uff09\uff0c\u800c\u65e0\u9700\u53e6\u4e00\u4e2a\u5b58\u50a8\u4f4d\u7f6e\u7684\u9644\u4ef6\u3002\u60a8\u5c06\u5728\u5176\u4ed6\u6559\u7a0b\u4e2d\u770b\u5230\uff0c\u5b83\u4eec\u4e3a\u4f4d\u7f6e\u8bbe\u7f6e\u4e86\u7279\u5b9a\u7684\u9644\u4ef6\uff0c\u4f46\u8fd9\u6837\u505a\u6548\u7387\u66f4\u9ad8\u3002\u8bf7\u59cb\u7ec8\u8bb0\u4f4f\uff0c\u5ef6\u8fdf\u9644\u4ef6\u6d88\u8017\u7684\u5185\u5b58\u8d8a\u5c11\u8d8a\u597d\u3002\u6709\u4e86\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u53ea\u9700\u7b80\u5355\u5730\u904d\u5386\u5149\u6e90\u6765\u8ba1\u7b97\u5149\u5bf9\u6700\u7ec8\u989c\u8272\u7684\u8d21\u732e\u3002</p> <p>\u5176\u4f59\u4ee3\u7801\u4e0e\u573a\u666f\u6e32\u67d3\u7684\u7247\u6bb5\u7740\u8272\u5668\u4e2d\u7684\u4ee3\u7801\u975e\u5e38\u76f8\u4f3c\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0<code>Render</code>\u7c7b\u4ee5\u4f7f\u7528\u65b0\u7c7b\uff1a</p> <pre><code>public class Render {\n    ...\n    private GBuffer gBuffer;\n    ...\n    private LightsRender lightsRender;\n    ...\n    public Render(Window window) {\n        ...\n        lightsRender = new LightsRender();\n        gBuffer = new GBuffer(window);\n    }\n\n    public void cleanup() {\n        ...\n        lightsRender.cleanup();\n        gBuffer.cleanUp();\n    }\n\n    private void lightRenderFinish() {\n        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\n    }\n\n    private void lightRenderStart(Window window) {\n        glBindFramebuffer(GL_FRAMEBUFFER, 0);\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n        glViewport(0, 0, window.getWidth(), window.getHeight());\n\n        glEnable(GL_BLEND);\n        glBlendEquation(GL_FUNC_ADD);\n        glBlendFunc(GL_ONE, GL_ONE);\n\n        glBindFramebuffer(GL_READ_FRAMEBUFFER, gBuffer.getGBufferId());\n    }\n\n    public void render(Window window, Scene scene) {\n        shadowRender.render(scene);\n        sceneRender.render(scene, gBuffer);\n        lightRenderStart(window);\n        lightsRender.render(scene, shadowRender, gBuffer);\n        skyBoxRender.render(scene);\n        lightRenderFinish();\n        guiRender.render(scene);\n    }\n\n    public void resize(int width, int height) {\n        guiRender.resize(width, height);\n    }\n}\n</code></pre> <p>\u6700\u540e\u60a8\u5c06\u80fd\u591f\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u5185\u5bb9\uff1a</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"20-indirect-drawing/","title":"\u7b2c20\u7ae0 - \u95f4\u63a5\u7ed8\u5236\uff08\u9759\u6001\u6a21\u578b\uff09\uff08Indirect drawing (static models)\uff09","text":"<p>\u76f4\u5230\u672c\u7ae0\uff0c\u6211\u4eec\u901a\u8fc7\u7ed1\u5b9a\u6a21\u578b\u7684\u6750\u8d28\uff08Material\uff09\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u3001\u7eb9\u7406\uff08Texture\uff09\u3001\u9876\u70b9\u548c\u7d22\u5f15\u7f13\u51b2\uff08Index Buffer\uff09\uff0c\u5e76\u4e3a\u5b83\u4eec\u7ec4\u6210\u7684\u6bcf\u4e2a\u7f51\u683c\uff08Mesh\uff09\u63d0\u4ea4\u4e00\u4e2a\u7ed8\u5236\u547d\u4ee4\u5217\u8868\uff08Command List\uff09\u6765\u6e32\u67d3\u6a21\u578b\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5f00\u59cb\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u6e32\u67d3\u65b9\u5f0f\uff0c\u6211\u4eec\u5c06\u5f00\u59cb\u5b9e\u73b0\u65e0\u7ed1\u5b9a\u6e32\u67d3\uff08\u81f3\u5c11\u51e0\u4e4e\u65e0\u7ed1\u5b9a\uff09\u3002\u5728\u8fd9\u79cd\u7c7b\u578b\u7684\u6e32\u67d3\u4e2d\uff0c\u6211\u4eec\u4e0d\u8c03\u7528\u4e00\u5806\u7ed8\u5236\u547d\u4ee4\u5217\u8868\uff08Command List\uff09\u6765\u7ed8\u5236\u573a\u666f\uff0c\u800c\u662f\u7528\u6307\u4ee4\u586b\u5145\u4e00\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u8fd9\u4e9b\u6307\u4ee4\u5c06\u5141\u8bb8GPU\u6e32\u67d3\u5b83\u4eec\u3002\u8fd9\u79f0\u4e3a\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\uff0c\u5b83\u662f\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u7ed8\u5236\u65b9\u5f0f\uff0c\u56e0\u4e3a\uff1a</p> <ul> <li>\u6211\u4eec\u6d88\u9664\u4e86\u5728\u7ed8\u5236\u6bcf\u4e2a\u7f51\u683c\uff08Mesh\uff09\u4e4b\u524d\u6267\u884c\u591a\u6b21\u7ed1\u5b9a\u64cd\u4f5c\u7684\u9700\u8981\u3002</li> <li>\u6211\u4eec\u53ea\u9700\u8981\u8c03\u7528\u4e00\u4e2a\u7ed8\u5236\u8c03\u7528\u3002</li> <li>\u6211\u4eec\u53ef\u4ee5\u6267\u884cGPU\u5185\u90e8\u64cd\u4f5c\uff0c\u4f8b\u5982\u89c6\u9525\u4f53\u5254\u9664\uff0c\u4ece\u800c\u51cf\u8f7bCPU\u7aef\u7684\u8d1f\u8f7d\u3002</li> </ul> <p>\u5982\u60a8\u6240\u89c1\uff0c\u6700\u7ec8\u76ee\u6807\u662f\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528GPU\uff0c\u540c\u65f6\u6d88\u9664CPU\u7aef\u53ef\u80fd\u51fa\u73b0\u7684\u6f5c\u5728\u74f6\u9888\u4ee5\u53ca\u7531\u4e8eCPU\u5230GPU\u901a\u4fe1\u5f15\u8d77\u7684\u5ef6\u8fdf\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u628a\u6211\u4eec\u7684\u6e32\u67d3\u8f6c\u6362\u4e3a\u4f7f\u7528\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\uff0c\u4ece\u9759\u6001\u6a21\u578b\u5f00\u59cb\u3002\u52a8\u753b\u6a21\u578b\u5c06\u5728\u4e0b\u4e00\u7ae0\u5904\u7406\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"20-indirect-drawing/#concepts","title":"\u6982\u5ff5\uff08Concepts\uff09","text":"<p>\u5728\u89e3\u91ca\u4ee3\u7801\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u89e3\u91ca\u4e00\u4e0b\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u80cc\u540e\u7684\u6982\u5ff5\u3002\u672c\u8d28\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u8be5\u7f13\u51b2\u533a\uff08Buffers\uff09\u5b58\u50a8\u5c06\u7528\u4e8e\u6e32\u67d3\u9876\u70b9\u7684\u7ed8\u5236\u53c2\u6570\u3002\u60a8\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u6307\u4ee4\u5757\u6216\u7ed8\u5236\u547d\u4ee4\u5217\u8868\uff08Command List\uff09\uff0cGPU\u5c06\u8bfb\u53d6\u8fd9\u4e9b\u6307\u4ee4\u5757\u6216\u7ed8\u5236\u547d\u4ee4\u5217\u8868\uff08Command List\uff09\uff0c\u5e76\u6307\u793a\u5176\u6267\u884c\u7ed8\u5236\u3002\u586b\u5145\u7f13\u51b2\u533a\uff08Buffers\uff09\u540e\uff0c\u6211\u4eec\u8c03\u7528<code>glMultiDrawElementsIndirect</code>\u6765\u89e6\u53d1\u8be5\u8fc7\u7a0b\u3002\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\u5b58\u50a8\u7684\u6bcf\u4e2a\u7ed8\u5236\u547d\u4ee4\u5217\u8868\uff08Command List\uff09\u7531\u4ee5\u4e0b\u53c2\u6570\u5b9a\u4e49\uff08\u5982\u679c\u60a8\u4f7f\u7528C\uff0c\u8fd9\u7531<code>DrawElementsIndirectCommand</code>\u7ed3\u6784\u5efa\u6a21\uff09\uff1a</p> <ul> <li><code>count</code>\uff1a\u8981\u7ed8\u5236\u7684\u9876\u70b9\u6570\u91cf\uff08\u5c06\u9876\u70b9\u7406\u89e3\u4e3a\u5c06\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u4fe1\u606f\u3001\u7eb9\u7406\u5750\u6807\uff08Texture Coordinates\uff09\u7b49\u5206\u7ec4\u7684\u7ed3\u6784\uff09\u3002\u8fd9\u5e94\u8be5\u5305\u542b\u4e0e\u6211\u4eec\u5728\u6e32\u67d3\u7f51\u683c\uff08Mesh\uff09\u65f6\u8c03\u7528<code>glDrawElements</code>\u65f6\u4f7f\u7528\u7684\u9876\u70b9\u6570\u91cf\u76f8\u540c\u7684\u503c\u3002</li> <li><code>instanceCount</code>\uff1a\u8981\u7ed8\u5236\u7684\u5b9e\u4f8b\u6570\u91cf\u3002\u6211\u4eec\u53ef\u80fd\u6709\u591a\u4e2a\u5b9e\u4f53\u5171\u4eab\u540c\u4e00\u4e2a\u6a21\u578b\u3002\u4e0e\u5176\u4e3a\u6bcf\u4e2a\u5b9e\u4f53\u5b58\u50a8\u4e00\u4e2a\u7ed8\u5236\u6307\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u63d0\u4ea4\u4e00\u4e2a\u7ed8\u5236\u6307\u4ee4\uff0c\u4f46\u8bbe\u7f6e\u6211\u4eec\u8981\u7ed8\u5236\u7684\u5b9e\u4f53\u6570\u91cf\u3002\u8fd9\u79f0\u4e3a\u5b9e\u4f8b\u5316\u6e32\u67d3\uff08instance rendering\uff09\uff0c\u5c06\u8282\u7701\u5927\u91cf\u8ba1\u7b97\u65f6\u95f4\u3002\u5982\u679c\u6ca1\u6709\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e3a\u6bcf\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\u8bbe\u7f6e\u7279\u5b9a\u5c5e\u6027\u6765\u83b7\u5f97\u76f8\u540c\u7684\u7ed3\u679c\u3002\u6211\u8ba4\u4e3a\u4f7f\u7528\u8fd9\u79cd\u6280\u672f\u751a\u81f3\u66f4\u7b80\u5355\u3002</li> <li><code>firstIndex</code>\uff1a\u5c06\u4fdd\u5b58\u7528\u4e8e\u6b64\u7ed8\u5236\u6307\u4ee4\u7684\u7d22\u5f15\u503c\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\u7684\u504f\u79fb\u91cf\uff08\u504f\u79fb\u91cf\u4ee5\u7d22\u5f15\u6570\u91cf\u8861\u91cf\uff0c\u800c\u4e0d\u662f\u5b57\u8282\u504f\u79fb\u91cf\uff09\u3002</li> <li><code>baseVertex</code>\uff1a\u5c06\u4fdd\u5b58\u9876\u70b9\u6570\u636e\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\u7684\u504f\u79fb\u91cf\uff08\u504f\u79fb\u91cf\u4ee5\u9876\u70b9\u6570\u91cf\u8861\u91cf\uff0c\u800c\u4e0d\u662f\u5b57\u8282\u504f\u79fb\u91cf\uff09\u3002</li> <li> <p><code>baseInstance</code>\uff1a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6b64\u53c2\u6570\u8bbe\u7f6e\u4e00\u4e2a\u5c06\u7531\u6240\u6709\u8981\u7ed8\u5236\u7684\u5b9e\u4f8b\u5171\u4eab\u7684\u503c\u3002\u5c06\u6b64\u503c\u4e0e\u8981\u7ed8\u5236\u7684\u5b9e\u4f8b\u7f16\u53f7\u7ed3\u5408\u4f7f\u7528\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u8bbf\u95ee\u8be5\u7f13\u51b2\u533a\uff08Buffers\uff09\u5185\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u6570\u636e\uff08\u6211\u4eec\u7a0d\u540e\u4f1a\u770b\u5230\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u6570\u7ec4\u800c\u4e0d\u662f\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u4e3a\u6b64\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\uff09\u3002\u5728\u8be5\u7f13\u51b2\u533a\uff08Buffers\uff09\u5185\uff0c\u6211\u4eec\u5c06\u4fdd\u5b58\u7d22\u5f15\u4ee5\u8bbf\u95ee\u53e6\u5916\u4e24\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\uff1a</p> </li> <li> <p>\u4e00\u4e2a\u5c06\u4fdd\u5b58\u6a21\u578b\u77e9\u9635\u6570\u636e\u3002</p> </li> <li>\u4e00\u4e2a\u5c06\u4fdd\u5b58\u6750\u8d28\uff08Material\uff09\u6570\u636e\uff08\u53cd\u7167\u7387\u989c\u8272\u7b49\uff09\u3002</li> </ul> <p>\u5bf9\u4e8e\u7eb9\u7406\uff08Texture\uff09\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7eb9\u7406\uff08Texture\uff09\u6570\u7ec4\uff0c\u8fd9\u4e0d\u5e94\u4e0e\u7eb9\u7406\uff08Texture\uff09\u6570\u7ec4\u6df7\u6dc6\u3002\u7eb9\u7406\uff08Texture\uff09\u6570\u7ec4\u662f\u5305\u542b\u5177\u6709\u7eb9\u7406\uff08Texture\uff09\u4fe1\u606f\u7684\u6570\u7ec4\u503c\u7684\u7eb9\u7406\uff08Texture\uff09\uff0c\u5177\u6709\u76f8\u540c\u5927\u5c0f\u7684\u591a\u4e2a\u56fe\u50cf\u3002\u7eb9\u7406\uff08Texture\uff09\u6570\u7ec4\u662f\u6620\u5c04\u5230\u5e38\u89c4\u7eb9\u7406\uff08Texture\uff09\u7684\u91c7\u6837\u5668\uff08sampler\uff09\u5217\u8868\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u7684\u5927\u5c0f\u3002\u7eb9\u7406\uff08Texture\uff09\u6570\u7ec4\u6709\u4e00\u4e2a\u9650\u5236\uff0c\u5176\u957f\u5ea6\u4e0d\u80fd\u662f\u4efb\u610f\u957f\u5ea6\uff0c\u5b83\u4eec\u6709\u4e00\u4e2a\u9650\u5236\uff0c\u5728\u793a\u4f8b\u4e2d\u6211\u4eec\u5c06\u8bbe\u7f6e\u4e3a16\u4e2a\u7eb9\u7406\uff08Texture\uff09\uff08\u5c3d\u7ba1\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u8bbe\u7f6e\u8be5\u9650\u5236\u4e4b\u524d\u68c0\u67e5\u60a8\u7684GPU\u7684\u529f\u80fd\uff09\u3002\u5982\u679c\u60a8\u4f7f\u7528\u591a\u4e2a\u6a21\u578b\uff0c16\u4e2a\u7eb9\u7406\uff08Texture\uff09\u4e0d\u662f\u4e00\u4e2a\u9ad8\u503c\uff0c\u4e3a\u4e86\u89c4\u907f\u6b64\u9650\u5236\uff0c\u60a8\u53ef\u80fd\u6709\u4e24\u79cd\u9009\u62e9\uff1a</p> <ul> <li>\u4f7f\u7528\u7eb9\u7406\u56fe\u96c6\uff08texture atlas\uff09\uff08\u4e00\u4e2a\u5de8\u5927\u7684\u7eb9\u7406\uff08Texture\uff09\u6587\u4ef6\uff0c\u5b83\u7ec4\u5408\u4e86\u5355\u4e2a\u7eb9\u7406\uff08Texture\uff09\uff09\u3002\u5373\u4f7f\u60a8\u4e0d\u4f7f\u7528\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\uff0c\u60a8\u4e5f\u5e94\u8be5\u5c3d\u91cf\u4f7f\u7528\u7eb9\u7406\u56fe\u96c6\uff08texture atlas\uff09\uff0c\u56e0\u4e3a\u5b83\u9650\u5236\u4e86\u7ed1\u5b9a\u8c03\u7528\u3002</li> <li>\u4f7f\u7528\u65e0\u7ed1\u5b9a\u7eb9\u7406\uff08bindless textures\uff09\u3002\u8fd9\u79cd\u65b9\u6cd5\u57fa\u672c\u4e0a\u5141\u8bb8\u6211\u4eec\u4f20\u9012\u53e5\u67c4\uff0864\u4f4d\u6574\u6570\u503c\uff09\u6765\u6807\u8bc6\u7eb9\u7406\uff08Texture\uff09\uff0c\u5e76\u4f7f\u7528\u8be5\u6807\u8bc6\u7b26\u5728\u7740\u8272\u5668\uff08Shader\uff09\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u91c7\u6837\u5668\uff08sampler\uff09\u3002\u5982\u679c\u60a8\u53ef\u4ee5\u7684\u8bdd\uff0c\u8fd9\u7edd\u5bf9\u662f\u95f4\u63a5\u7ed8\u5236\uff08indirect rendering\uff09\u7684\u65b9\u5f0f\uff08\u8fd9\u4e0d\u662f\u6838\u5fc3\u529f\u80fd\uff0c\u800c\u662f\u4ece4.4\u7248\u672c\u5f00\u59cb\u7684\u6269\u5c55\uff09\u3002\u6211\u4eec\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3aRenderDoc\u76ee\u524d\u4e0d\u652f\u6301\u6b64\u529f\u80fd\uff08\u5931\u53bb\u5728\u6ca1\u6709RenderDoc\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u8c03\u8bd5\u7684\u80fd\u529b\u5bf9\u6211\u6765\u8bf4\u662f\u4e00\u4e2a\u969c\u788d\uff09\u3002</li> </ul> <p>\u4e0b\u56fe\u63cf\u7ed8\u4e86\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u4e2d\u6d89\u53ca\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\u548c\u7ed3\u6784\uff08\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u4ec5\u5728\u6e32\u67d3\u9759\u6001\u6a21\u578b\u65f6\u6709\u6548\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7ae0\u4e2d\u770b\u5230\u6e32\u67d3\u52a8\u753b\u6a21\u578b\u65f6\u9700\u8981\u4f7f\u7528\u7684\u65b0\u7ed3\u6784\uff09\u3002</p> <p></p> <p>\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u6570\u7ec4\u6765\u5b58\u50a8\u6bcf\u4e2a\u5b9e\u4f53\u6570\u636e\u3001\u6750\u8d28\uff08Material\uff09\u548c\u6a21\u578b\u77e9\u9635\uff08\u6700\u7ec8\u6570\u7ec4\u662f\u4e00\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u4f46\u6211\u4eec\u5c06\u80fd\u591f\u901a\u8fc7\u4f7f\u7528\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u4ee5\u65b9\u4fbf\u7684\u65b9\u5f0f\u8bbf\u95ee\u6570\u636e\uff09\u3002</p>"},{"location":"20-indirect-drawing/#implementation","title":"\u5b9e\u73b0\uff08Implementation\uff09","text":"<p>\u4e3a\u4e86\u4f7f\u7528\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u8981\u4f7f\u7528OpenGL 4.6\u7248\u672c\u3002\u56e0\u6b64\uff0c\u7b2c\u4e00\u6b65\u662f\u66f4\u65b0\u6211\u4eec\u7528\u4e8e\u7a97\u53e3\u521b\u5efa\u7684\u7a97\u53e3\u63d0\u793a\u7684\u4e3b\u8981\u548c\u6b21\u8981\u7248\u672c\uff1a</p> <pre><code>public class Window {\n    ...\n    public Window(String title, WindowOptions opts, Callable&lt;Void&gt; resizeFunc) {\n        ...\n        glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 4);\n        glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 6);\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u4e0b\u4e00\u6b65\u662f\u4fee\u6539\u4ee3\u7801\u4ee5\u5c06\u6240\u6709\u7f51\u683c\uff08Mesh\uff09\u52a0\u8f7d\u5230\u5355\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\uff0c\u4f46\u662f\uff0c\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u4fee\u6539\u5b58\u50a8\u6a21\u578b\u3001\u6750\u8d28\uff08Material\uff09\u548c\u7f51\u683c\uff08Mesh\uff09\u7684\u7c7b\u5c42\u6b21\u7ed3\u6784\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6a21\u578b\u62e5\u6709\u4e00\u7ec4\u5173\u8054\u7684\u6750\u8d28\uff08Material\uff09\uff0c\u8fd9\u4e9b\u6750\u8d28\uff08Material\uff09\u62e5\u6709\u4e00\u7ec4\u7f51\u683c\uff08Mesh\uff09\u3002\u6b64\u7c7b\u7684\u5c42\u6b21\u7ed3\u6784\u662f\u4e3a\u4e86\u4f18\u5316\u7ed8\u5236\u8c03\u7528\u800c\u8bbe\u7f6e\u7684\uff0c\u6211\u4eec\u9996\u5148\u904d\u5386\u6a21\u578b\uff0c\u7136\u540e\u904d\u5386\u6750\u8d28\uff08Material\uff09\uff0c\u6700\u540e\u904d\u5386\u7f51\u683c\uff08Mesh\uff09\u3002\u6211\u4eec\u5c06\u66f4\u6539\u6b64\u7ed3\u6784\uff0c\u4e0d\u518d\u5728\u6750\u8d28\uff08Material\uff09\u4e0b\u5b58\u50a8\u7f51\u683c\uff08Mesh\uff09\u3002\u76f8\u53cd\uff0c\u7f51\u683c\uff08Mesh\uff09\u5c06\u76f4\u63a5\u5b58\u50a8\u5728\u6a21\u578b\u4e0b\u3002\u6211\u4eec\u5c06\u6750\u8d28\uff08Material\uff09\u5b58\u50a8\u5728\u67d0\u79cd\u7f13\u5b58\u4e2d\uff0c\u5e76\u5c06\u5f15\u7528\u8be5\u7f13\u5b58\u4e2d\u7684\u4e00\u4e2a\u952e\u7528\u4e8e\u7f51\u683c\uff08Mesh\uff09\u3002\u6b64\u5916\uff0c\u4e4b\u524d\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u6a21\u578b\u7f51\u683c\uff08Mesh\uff09\u521b\u5efa\u4e86\u4e00\u4e2a<code>Mesh</code>\u5b9e\u4f8b\uff0c\u8be5\u5b9e\u4f8b\u672c\u8d28\u4e0a\u5305\u542b\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\u548c\u5173\u8054\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Objects\uff0cVBOs\uff09\u7528\u4e8e\u7f51\u683c\uff08Mesh\uff09\u6570\u636e\u3002\u7531\u4e8e\u6211\u4eec\u5c06\u4e3a\u6240\u6709\u7f51\u683c\uff08Mesh\uff09\u4f7f\u7528\u5355\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\u53ca\u5176\u5173\u8054\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Objects\uff0cVBOs\uff09\u7528\u4e8e\u573a\u666f\u4e2d\u7684\u6240\u6709\u7f51\u683c\uff08Mesh\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u5728<code>Model</code>\u7c7b\u4e0b\u5b58\u50a8\u7528\u4e8e\u6784\u5efa\u7ed8\u5236\u53c2\u6570\u7684\u6570\u636e\uff0c\u4f8b\u5982\u9876\u70b9\u7f13\u51b2\u533a\uff08Buffers\uff09\u7684\u504f\u79fb\u91cf\u3001\u7d22\u5f15\u7f13\u51b2\uff08Index Buffer\uff09\u7684\u504f\u79fb\u91cf\u7b49\uff0c\u800c\u4e0d\u662f\u5b58\u50a8<code>Mesh</code>\u5b9e\u4f8b\u5217\u8868\u3002\u8ba9\u6211\u4eec\u9010\u4e00\u68c0\u67e5\u66f4\u6539\u3002</p> <p>\u6211\u4eec\u5c06\u4ece<code>MaterialCache</code>\u7c7b\u5f00\u59cb\uff0c\u8be5\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport java.util.*;\n\npublic class MaterialCache {\n\n    public static final int DEFAULT_MATERIAL_IDX = 0;\n\n    private List&lt;Material&gt; materialsList;\n\n    public MaterialCache() {\n        materialsList = new ArrayList&lt;&gt;();\n        Material defaultMaterial = new Material();\n        materialsList.add(defaultMaterial);\n    }\n\n    public void addMaterial(Material material) {\n        materialsList.add(material);\n        material.setMaterialIdx(materialsList.size() - 1);\n    }\n\n    public Material getMaterial(int idx) {\n        return materialsList.get(idx);\n    }\n\n    public List&lt;Material&gt; getMaterialsList() {\n        return materialsList;\n    }\n}\n</code></pre> <p>\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u662f\u5c06<code>Material</code>\u5b9e\u4f8b\u5b58\u50a8\u5728<code>List</code>\u4e2d\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u6807\u8bc6<code>Material</code>\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8be5\u5b9e\u4f8b\u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u3002\uff08\u8fd9\u79cd\u65b9\u6cd5\u53ef\u80fd\u4f1a\u4f7f\u52a8\u6001\u6dfb\u52a0\u65b0\u6750\u8d28\uff08Material\uff09\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u4f46\u5bf9\u4e8e\u6b64\u793a\u4f8b\u7684\u76ee\u7684\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u7b80\u5355\u4e86\u3002\u60a8\u53ef\u80fd\u5e0c\u671b\u66f4\u6539\u5b83\uff0c\u5e76\u5728\u60a8\u7684\u4ee3\u7801\u4e2d\u63d0\u4f9b\u5bf9\u6dfb\u52a0\u65b0\u6a21\u578b\u3001\u6750\u8d28\uff08Material\uff09\u7b49\u7684\u5f3a\u5927\u652f\u6301\u3002\uff09\u6211\u4eec\u9700\u8981\u4fee\u6539<code>Material</code>\u7c7b\u4ee5\u79fb\u9664<code>Mesh</code>\u5b9e\u4f8b\u5217\u8868\uff0c\u5e76\u5728\u6750\u8d28\uff08Material\uff09\u7f13\u5b58\u4e2d\u5b58\u50a8\u6750\u8d28\uff08Material\uff09\u7d22\u5f15\uff1a</p> <pre><code>public class Material {\n    ...\n    private Vector4f ambientColor;\n    private Vector4f diffuseColor;\n    private int materialIdx;\n    private String normalMapPath;\n    private float reflectance;\n    private Vector4f specularColor;\n    private String texturePath;\n\n    public Material() {\n        diffuseColor = DEFAULT_COLOR;\n        ambientColor = DEFAULT_COLOR;\n        specularColor = DEFAULT_COLOR;\n        materialIdx = 0;\n    }\n    ...\n    public int getMaterialIdx() {\n        return materialIdx;\n    }\n    ...\n    public void setMaterialIdx(int materialIdx) {\n        this.materialIdx = materialIdx;\n    }\n    ...\n}\n</code></pre> <p>\u5982\u524d\u6240\u8ff0\uff0c\u6211\u4eec\u9700\u8981\u66f4\u6539<code>Model</code>\u7c7b\u4ee5\u79fb\u9664\u5bf9\u6750\u8d28\uff08Material\uff09\u7684\u5f15\u7528\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\u4fdd\u7559\u4e24\u4e2a\u4e3b\u8981\u5f15\u7528\uff1a</p> <ul> <li><code>MeshData</code>\u5b9e\u4f8b\u5217\u8868\uff08\u4e00\u4e2a\u65b0\u7c7b\uff09\uff0c\u5b83\u5c06\u4fdd\u5b58\u4f7f\u7528Assimp\u8bfb\u53d6\u7684\u7f51\u683c\uff08Mesh\uff09\u6570\u636e\u3002</li> <li><code>RenderBuffers.MeshDrawData</code>\u5b9e\u4f8b\u5217\u8868\uff08\u4e5f\u662f\u4e00\u4e2a\u65b0\u7c7b\uff09\uff0c\u5b83\u5c06\u5305\u542b\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u6240\u9700\u7684\u4fe1\u606f\uff08\u4e3b\u8981\u662f\u4e0e\u4e0a\u9762\u89e3\u91ca\u7684\u6570\u636e\u7f13\u51b2\u533a\uff08Buffers\uff09\u76f8\u5173\u7684\u504f\u79fb\u4fe1\u606f\uff09\u3002</li> </ul> <p>\u6211\u4eec\u5c06\u9996\u5148\u5728\u52a0\u8f7d\u6a21\u578b\u65f6\u4f7f\u7528assimp\u586b\u5145<code>MeshData</code>\u5b9e\u4f8b\u5217\u8868\uff0c\u4e4b\u540e\u6211\u4eec\u5c06\u6784\u5efa\u4fdd\u5b58\u6570\u636e\u7684\u5168\u5c40\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u586b\u5145<code>RenderBuffers.MeshDrawData</code>\u5b9e\u4f8b\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u79fb\u9664\u5bf9<code>MeshData</code>\u5b9e\u4f8b\u7684\u5f15\u7528\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u975e\u5e38\u4f18\u96c5\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5b83\u8db3\u591f\u7b80\u5355\uff0c\u53ef\u4ee5\u5728\u4e0d\u5f15\u5165\u66f4\u591a\u590d\u6742\u6027\u7684\u60c5\u51b5\u4e0b\u89e3\u91ca\u6982\u5ff5\uff0c\u800c\u65e0\u9700\u4f7f\u7528\u52a0\u8f7d\u524d\u548c\u52a0\u8f7d\u540e\u5c42\u6b21\u7ed3\u6784\u3002<code>Model</code>\u7c7b\u4e2d\u7684\u66f4\u6539\u5982\u4e0b\uff1a</p> <pre><code>public class Model {\n    ...\n    private final String id;\n    private List&lt;Animation&gt; animationList;\n    private List&lt;Entity&gt; entitiesList;\n    private List&lt;MeshData&gt; meshDataList;\n    private List&lt;RenderBuffers.MeshDrawData&gt; meshDrawDataList;\n\n    public Model(String id, List&lt;MeshData&gt; meshDataList, List&lt;Animation&gt; animationList) {\n        entitiesList = new ArrayList&lt;&gt;();\n        this.id = id;\n        this.meshDataList = meshDataList;\n        this.animationList = animationList;\n        meshDrawDataList = new ArrayList&lt;&gt;();\n    }\n    ...\n    public List&lt;MeshData&gt; getMeshDataList() {\n        return meshDataList;\n    }\n\n    public List&lt;RenderBuffers.MeshDrawData&gt; getMeshDrawDataList() {\n        return meshDrawDataList;\n    }\n\n    public boolean isAnimated() {\n        return animationList != null &amp;&amp; !animationList.isEmpty();\n    }\n    ...\n}\n</code></pre> <p><code>MeshData</code>\u7c7b\u7684\u5b9a\u4e49\u975e\u5e38\u7b80\u5355\u3002\u5b83\u53ea\u5b58\u50a8\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\uff08Texture Coordinates\uff09\u7b49\uff1a <pre><code>package org.lwjglb.engine.graph;\n\nimport org.joml.Vector3f;\n\npublic class MeshData {\n\n    private Vector3f aabbMax;\n    private Vector3f aabbMin;\n    private float[] bitangents;\n    private int[] boneIndices;\n    private int[] indices;\n    private int materialIdx;\n    private float[] normals;\n    private float[] positions;\n    private float[] tangents;\n    private float[] textCoords;\n    private float[] weights;\n\n    public MeshData(float[] positions, float[] normals, float[] tangents, float[] bitangents,\n                    float[] textCoords, int[] indices, int[] boneIndices, float[] weights,\n                    Vector3f aabbMin, Vector3f aabbMax) {\n        materialIdx = 0;\n        this.positions = positions;\n        this.normals = normals;\n        this.tangents = tangents;\n        this.bitangents = bitangents;\n        this.textCoords = textCoords;\n        this.indices = indices;\n        this.boneIndices = boneIndices;\n        this.weights = weights;\n        this.aabbMin = aabbMin;\n        this.aabbMax = aabbMax;\n    }\n\n    public Vector3f getAabbMax() {\n        return aabbMax;\n    }\n\n    public Vector3f getAabbMin() {\n        return aabbMin;\n    }\n\n    public float[] getBitangents() {\n        return bitangents;\n    }\n\n    public int[] getBoneIndices() {\n        return boneIndices;\n    }\n\n    public int[] getIndices() {\n        return indices;\n    }\n\n    public int getMaterialIdx() {\n        return materialIdx;\n    }\n\n    public float[] getNormals() {\n        return normals;\n    }\n\n    public float[] getPositions() {\n        return positions;\n    }\n\n    public float[] getTangents() {\n        return tangents;\n    }\n\n    public float[] getTextCoords() {\n        return textCoords;\n    }\n\n    public float[] getWeights() {\n        return weights;\n    }\n\n    public void setMaterialIdx(int materialIdx) {\n        this.materialIdx = materialIdx;\n    }\n}\n</code></pre></p> <p><code>ModelLoader</code>\u7c7b\u4e2d\u7684\u66f4\u6539\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6750\u8d28\uff08Material\uff09\u7f13\u5b58\u5e76\u5c06\u8bfb\u53d6\u7684\u6570\u636e\u5b58\u50a8\u5728\u65b0\u7684<code>MeshData</code>\u7c7b\u4e2d\uff08\u800c\u4e0d\u662f\u4e4b\u524d\u7684<code>Mesh</code>\u7c7b\uff09\u3002\u6b64\u5916\uff0c\u6750\u8d28\uff08Material\uff09\u5c06\u4e0d\u518d\u5f15\u7528\u7f51\u683c\uff08Mesh\uff09\u6570\u636e\uff0c\u800c\u662f\u7f51\u683c\uff08Mesh\uff09\u6570\u636e\u5c06\u5f15\u7528\u6750\u8d28\uff08Material\uff09\u5728\u7f13\u5b58\u4e2d\u7684\u7d22\u5f15\uff1a</p> <pre><code>public class ModelLoader {\n    ...\n    public static Model loadModel(String modelId, String modelPath, TextureCache textureCache, MaterialCache materialCache,\n                                  boolean animation) {\n        return loadModel(modelId, modelPath, textureCache, materialCache, aiProcess_GenSmoothNormals | aiProcess_JoinIdenticalVertices |\n                aiProcess_Triangulate | aiProcess_FixInfacingNormals | aiProcess_CalcTangentSpace | aiProcess_LimitBoneWeights |\n                aiProcess_GenBoundingBoxes | (animation ? 0 : aiProcess_PreTransformVertices));\n    }\n\n    public static Model loadModel(String modelId, String modelPath, TextureCache textureCache,\n                                  MaterialCache materialCache, int flags) {\n        ...\n\n        for (int i = 0; i &lt; numMaterials; i++) {\n            AIMaterial aiMaterial = AIMaterial.create(aiScene.mMaterials().get(i));\n            Material material = processMaterial(aiMaterial, modelDir, textureCache);\n            materialCache.addMaterial(material);\n            materialList.add(material);\n        }\n\n        int numMeshes = aiScene.mNumMeshes();\n        PointerBuffer aiMeshes = aiScene.mMeshes();\n        List&lt;MeshData&gt; meshDataList = new ArrayList&lt;&gt;();\n        List&lt;Bone&gt; boneList = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; numMeshes; i++) {\n            AIMesh aiMesh = AIMesh.create(aiMeshes.get(i));\n            MeshData meshData = processMesh(aiMesh, boneList);\n            int materialIdx = aiMesh.mMaterialIndex();\n            if (materialIdx &gt;= 0 &amp;&amp; materialIdx &lt; materialList.size()) {\n                meshData.setMaterialIdx(materialList.get(materialIdx).getMaterialIdx());\n            } else {\n                meshData.setMaterialIdx(MaterialCache.DEFAULT_MATERIAL_IDX);\n            }\n            meshDataList.add(meshData);\n        }\n        ...\n        return new Model(modelId, meshDataList, animations);\n    }\n    ...\n    private static MeshData processMesh(AIMesh aiMesh, List&lt;Bone&gt; boneList) {\n        ...\n        return new MeshData(vertices, normals, tangents, bitangents, textCoords, indices, animMeshData.boneIds,\n                animMeshData.weights, aabbMin, aabbMax);\n    }\n}\n</code></pre> <p><code>Scene</code>\u7c7b\u5c06\u662f\u4fdd\u5b58\u6750\u8d28\uff08Material\uff09\u7f13\u5b58\u7684\u7c7b\uff08\u6b64\u5916\uff0c\u4e0d\u518d\u9700\u8981<code>cleanup</code>\u65b9\u6cd5\uff0c\u56e0\u4e3a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Objects\uff0cVAOs\uff09\u548c\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Objects\uff0cVBOs\uff09\u5c06\u4e0d\u518d\u94fe\u63a5\u5230\u6a21\u578b\u6620\u5c04\uff09\uff1a</p> <pre><code>public class Scene {\n    ...\n    private MaterialCache materialCache;\n    ...\n    public Scene(int width, int height) {\n        ...\n        materialCache = new MaterialCache();\n        ...\n    }\n    ...\n    public MaterialCache getMaterialCache() {\n        return materialCache;\n    }\n    ...    \n}\n</code></pre> <p><code>Mesh</code>\u7c7b\u4e2d\u7684\u66f4\u6539\u662f\u7531\u4e8e\u6211\u4eec\u5f15\u5165\u4e86<code>MeshData</code>\u7c7b\uff08\u53ea\u662f\u66f4\u6539\u6784\u9020\u51fd\u6570\u53c2\u6570\u548c\u65b9\u6cd5\u7684\u95ee\u9898\uff09\uff1a</p> <pre><code>public class Mesh {\n    ...\n    public Mesh(MeshData meshData) {\n        this.aabbMin = meshData.getAabbMin();\n        this.aabbMax = meshData.getAabbMax();\n        numVertices = meshData.getIndices().length;\n        ...\n        FloatBuffer positionsBuffer = MemoryUtil.memCallocFloat(meshData.getPositions().length);\n        positionsBuffer.put(0, meshData.getPositions());\n        ...\n        FloatBuffer normalsBuffer = MemoryUtil.memCallocFloat(meshData.getNormals().length);\n        normalsBuffer.put(0, meshData.getNormals());\n        ...\n        FloatBuffer tangentsBuffer = MemoryUtil.memCallocFloat(meshData.getTangents().length);\n        tangentsBuffer.put(0, meshData.getTangents());\n        ...\n        FloatBuffer bitangentsBuffer = MemoryUtil.memCallocFloat(meshData.getBitangents().length);\n        bitangentsBuffer.put(0, meshData.getBitangents());\n        ...\n        FloatBuffer textCoordsBuffer = MemoryUtil.memCallocFloat(meshData.getTextCoords().length);\n        textCoordsBuffer.put(0, meshData.getTextCoords());\n        ...\n        FloatBuffer weightsBuffer = MemoryUtil.memCallocFloat(meshData.getWeights().length);\n        weightsBuffer.put(meshData.getWeights()).flip();\n        ...\n        IntBuffer boneIndicesBuffer = MemoryUtil.memCallocInt(meshData.getBoneIndices().length);\n        boneIndicesBuffer.put(meshData.getBoneIndices()).flip();\n        ...\n        IntBuffer indicesBuffer = MemoryUtil.memCallocInt(meshData.getIndices().length);\n        indicesBuffer.put(0, meshData.getIndices());\n    }\n    ...\n}\n</code></pre> <p>\u73b0\u5728\u8f6e\u5230\u6211\u4eec\u5c06\u4e3a\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u521b\u5efa\u7684\u65b0\u5173\u952e\u7c7b\u4e4b\u4e00\uff0c\u5373<code>RenderBuffers</code>\u7c7b\u3002\u6b64\u7c7b\u5c06\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\uff0c\u8be5\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\u5c06\u4fdd\u5b58\u5305\u542b\u6240\u6709\u7f51\u683c\uff08Mesh\uff09\u6570\u636e\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Objects\uff0cVBOs\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u53ea\u652f\u6301\u9759\u6001\u6a21\u578b\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\u3002<code>RenderBuffers</code>\u7c7b\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>public class RenderBuffers {\n\n    private int staticVaoId;\n    private List&lt;Integer&gt; vboIdList;\n\n    public RenderBuffers() {\n        vboIdList = new ArrayList&lt;&gt;();\n    }\n\n    public void cleanup() {\n        vboIdList.forEach(GL30::glDeleteBuffers);\n        glDeleteVertexArrays(staticVaoId);\n    }\n    ...\n}\n</code></pre> <p>\u6b64\u7c7b\u5b9a\u4e49\u4e86\u4e24\u79cd\u52a0\u8f7d\u6a21\u578b\u7684\u65b9\u6cd5\uff1a * <code>loadAnimatedModels</code>\u7528\u4e8e\u52a8\u753b\u6a21\u578b\u3002\u672c\u7ae0\u4e0d\u5b9e\u73b0\u6b64\u529f\u80fd\u3002 * <code>loadStaticModels</code>\u7528\u4e8e\u6ca1\u6709\u52a8\u753b\u7684\u6a21\u578b\u3002</p> <p>\u8fd9\u4e9b\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class RenderBuffers {\n    ...\n    public final int getStaticVaoId() {\n        return staticVaoId;\n    }\n\n    public void loadAnimatedModels(Scene scene) {\n        // To be completed\n    }\n\n    public void loadStaticModels(Scene scene) {\n        List&lt;Model&gt; modelList = scene.getModelMap().values().stream().filter(m -&gt; !m.isAnimated()).toList();\n        staticVaoId = glGenVertexArrays();\n        glBindVertexArray(staticVaoId);\n        int positionsSize = 0;\n        int normalsSize = 0;\n        int textureCoordsSize = 0;\n        int indicesSize = 0;\n        int offset = 0;\n        for (Model model : modelList) {\n            List&lt;RenderBuffers.MeshDrawData&gt; meshDrawDataList = model.getMeshDrawDataList();\n            for (MeshData meshData : model.getMeshDataList()) {\n                positionsSize += meshData.getPositions().length;\n                normalsSize += meshData.getNormals().length;\n                textureCoordsSize += meshData.getTextCoords().length;\n                indicesSize += meshData.getIndices().length;\n\n                int meshSizeInBytes = meshData.getPositions().length * 14 * 4;\n                meshDrawDataList.add(new MeshDrawData(meshSizeInBytes, meshData.getMaterialIdx(), offset,\n                        meshData.getIndices().length));\n                offset = positionsSize / 3;\n            }\n        }\n\n        int vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        FloatBuffer meshesBuffer = MemoryUtil.memAllocFloat(positionsSize + normalsSize * 3 + textureCoordsSize);\n        for (Model model : modelList) {\n            for (MeshData meshData : model.getMeshDataList()) {\n                populateMeshBuffer(meshesBuffer, meshData);\n            }\n        }\n        meshesBuffer.flip();\n        glBindBuffer(GL_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ARRAY_BUFFER, meshesBuffer, GL_STATIC_DRAW);\n        MemoryUtil.memFree(meshesBuffer);\n\n        defineVertexAttribs();\n\n        // Index VBO\n        vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        IntBuffer indicesBuffer = MemoryUtil.memAllocInt(indicesSize);\n        for (Model model : modelList) {\n            for (MeshData meshData : model.getMeshDataList()) {\n                indicesBuffer.put(meshData.getIndices());\n            }\n        }\n        indicesBuffer.flip();\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indicesBuffer, GL_STATIC_DRAW);\n        MemoryUtil.memFree(indicesBuffer);\n\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n        glBindVertexArray(0);\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\uff08\u5c06\u7528\u4e8e\u9759\u6001\u6a21\u578b\uff09\uff0c\u7136\u540e\u904d\u5386\u6a21\u578b\u7684\u7f51\u683c\uff08Mesh\uff09\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\u6765\u4fdd\u5b58\u6240\u6709\u6570\u636e\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u904d\u5386\u8fd9\u4e9b\u5143\u7d20\u4ee5\u83b7\u53d6\u6700\u7ec8\u7f13\u51b2\u533a\uff08Buffers\uff09\u5927\u5c0f\u3002\u6211\u4eec\u5c06\u8ba1\u7b97\u4f4d\u7f6e\u5143\u7d20\u3001\u6cd5\u7ebf\u7b49\u7684\u6570\u91cf\u3002\u6211\u4eec\u4f7f\u7528\u7b2c\u4e00\u4e2a\u5faa\u73af\u6765\u586b\u5145\u6211\u4eec\u5c06\u5b58\u50a8\u5728\u5305\u542b<code>RenderBuffers.MeshDrawData</code>\u5b9e\u4f8b\u7684\u5217\u8868\u4e2d\u7684\u504f\u79fb\u4fe1\u606f\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Object\uff0c\u7b80\u79f0VBO\uff09\u3002\u60a8\u4f1a\u53d1\u73b0\u4e0e<code>Mesh</code>\u7c7b\u4e2d\u6267\u884c\u7c7b\u4f3c\u4efb\u52a1\uff08\u521b\u5efa\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\u548c\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Objects\uff0cVBOs\uff09\uff09\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Object\uff0c\u7b80\u79f0VBO\uff09\u6709\u5f88\u5927\u4e0d\u540c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e3a\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u7b49\u4f7f\u7528\u4e00\u4e2a\u5355\u72ec\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Object\uff0c\u7b80\u79f0VBO\uff09\u3002\u6211\u4eec\u53ea\u662f\u9010\u884c\u52a0\u8f7d\u6240\u6709\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5355\u72ec\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Objects\uff0cVBOs\uff09\u3002\u8fd9\u5728<code>populateMeshBuffer</code>\u4e2d\u5b8c\u6210\uff08\u6211\u4eec\u5c06\u5728\u4e4b\u540e\u770b\u5230\uff09\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u521b\u5efa\u7d22\u5f15\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Object\uff0c\u7b80\u79f0VBO\uff09\uff0c\u5b83\u5c06\u5305\u542b\u6240\u6709\u6a21\u578b\u7684\u6240\u6709\u7f51\u683c\uff08Mesh\uff09\u7684\u7d22\u5f15\u3002</p> <p><code>MeshDrawData</code>\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class RenderBuffers {\n    ...\n    public record MeshDrawData(int sizeInBytes, int materialIdx, int offset, int vertices) {\n    }\n}\n</code></pre> <p>\u5b83\u57fa\u672c\u4e0a\u5b58\u50a8\u7f51\u683c\uff08Mesh\uff09\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\uff08<code>sizeInBytes</code>\uff09\u3001\u4e0e\u4e4b\u5173\u8054\u7684\u6750\u8d28\uff08Material\uff09\u7d22\u5f15\u3001\u4fdd\u5b58\u9876\u70b9\u4fe1\u606f\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\u7684\u504f\u79fb\u91cf\u4ee5\u53ca\u9876\u70b9\uff0c\u5373\u6b64\u7f51\u683c\uff08Mesh\uff09\u7684\u7d22\u5f15\u6570\u91cf\u3002\u504f\u79fb\u91cf\u4ee5\u201c\u884c\u201d\u4e3a\u5355\u4f4d\u8861\u91cf\u3002\u60a8\u53ef\u4ee5\u8ba4\u4e3a\u7f51\u683c\uff08Mesh\uff09\u4e2d\u4fdd\u5b58\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u548c\u7eb9\u7406\u5750\u6807\uff08Texture Coordinates\uff09\u7684\u90e8\u5206\u662f\u4e00\u884c\u3002\u8fd9\u4e00\u884c\u4fdd\u5b58\u4e0e\u5355\u4e2a\u9876\u70b9\u5173\u8054\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5e76\u5c06\u5728\u9876\u70b9\u7740\u8272\u5668\uff08Shader\uff09\u4e2d\u5904\u7406\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u53ea\u5c06\u4f4d\u7f6e\u5143\u7d20\u7684\u6570\u91cf\u9664\u4ee5\u4e09\uff0c\u6bcf\u4e00\u884c\u5c06\u6709\u4e09\u4e2a\u4f4d\u7f6e\u5143\u7d20\uff0c\u5e76\u4e14\u4f4d\u7f6e\u6570\u636e\u4e2d\u7684\u884c\u6570\u5c06\u4e0e\u6cd5\u7ebf\u6570\u636e\u4e2d\u7684\u884c\u6570\u7b49\u5339\u914d\u3002</p> <p><code>populateMeshBuffer</code>\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class RenderBuffers {\n    ...\n    private void populateMeshBuffer(FloatBuffer meshesBuffer, MeshData meshData) {\n        float[] positions = meshData.getPositions();\n        float[] normals = meshData.getNormals();\n        float[] tangents = meshData.getTangents();\n        float[] bitangents = meshData.getBitangents();\n        float[] textCoords = meshData.getTextCoords();\n\n        int rows = positions.length / 3;\n        for (int row = 0; row &lt; rows; row++) {\n            int startPos = row * 3;\n            int startTextCoord = row * 2;\n            meshesBuffer.put(positions[startPos]);\n            meshesBuffer.put(positions[startPos + 1]);\n            meshesBuffer.put(positions[startPos + 2]);\n            meshesBuffer.put(normals[startPos]);\n            meshesBuffer.put(normals[startPos + 1]);\n            meshesBuffer.put(normals[startPos + 2]);\n            meshesBuffer.put(tangents[startPos]);\n            meshesBuffer.put(tangents[startPos + 1]);\n            meshesBuffer.put(tangents[startPos + 2]);\n            meshesBuffer.put(bitangents[startPos]);\n            meshesBuffer.put(bitangents[startPos + 1]);\n            meshesBuffer.put(bitangents[startPos + 2]);\n            meshesBuffer.put(textCoords[startTextCoord]);\n            meshesBuffer.put(textCoords[startTextCoord + 1]);\n        }\n    }\n    ...\n}\n</code></pre> <p>\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u53ea\u662f\u904d\u5386\u6570\u636e\u7684\u201c\u884c\u201d\uff0c\u5e76\u5c06\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u548c\u7eb9\u7406\u5750\u6807\uff08Texture Coordinates\uff09\u6253\u5305\u5230\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\u3002<code>defineVertexAttribs</code>\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class RenderBuffers {\n    ...\n    private void defineVertexAttribs() {\n        int stride = 3 * 4 * 4 + 2 * 4;\n        int pointer = 0;\n        // Positions\n        glEnableVertexAttribArray(0);\n        glVertexAttribPointer(0, 3, GL_FLOAT, false, stride, pointer);\n        pointer += 3 * 4;\n        // Normals\n        glEnableVertexAttribArray(1);\n        glVertexAttribPointer(1, 3, GL_FLOAT, false, stride, pointer);\n        pointer += 3 * 4;\n        // Tangents\n        glEnableVertexAttribArray(2);\n        glVertexAttribPointer(2, 3, GL_FLOAT, false, stride, pointer);\n        pointer += 3 * 4;\n        // Bitangents\n        glEnableVertexAttribArray(3);\n        glVertexAttribPointer(3, 3, GL_FLOAT, false, stride, pointer);\n        pointer += 3 * 4;\n        // Texture coordinates\n        glEnableVertexAttribArray(4);\n        glVertexAttribPointer(4, 2, GL_FLOAT, false, stride, pointer);\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u53ea\u662f\u50cf\u524d\u9762\u7684\u793a\u4f8b\u4e00\u6837\u4e3a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\u5b9a\u4e49\u9876\u70b9\u5c5e\u6027\u3002\u8fd9\u91cc\u552f\u4e00\u7684\u533a\u522b\u662f\u6211\u4eec\u4e3a\u5b83\u4eec\u4f7f\u7528\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Object\uff0c\u7b80\u79f0VBO\uff09\u3002</p> <p>\u5728\u68c0\u67e5<code>SceneRender</code>\u7c7b\u4e2d\u7684\u66f4\u6539\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u4ece\u9876\u70b9\u7740\u8272\u5668\uff08Shader\uff09\uff08<code>scene.vert</code>\uff09\u5f00\u59cb\uff0c\u5b83\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>#version 460\n\nconst int MAX_DRAW_ELEMENTS = 100;\nconst int MAX_ENTITIES = 50;\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 normal;\nlayout (location=2) in vec3 tangent;\nlayout (location=3) in vec3 bitangent;\nlayout (location=4) in vec2 texCoord;\n\nout vec3 outNormal;\nout vec3 outTangent;\nout vec3 outBitangent;\nout vec2 outTextCoord;\nout vec4 outViewPosition;\nout vec4 outWorldPosition;\nflat out uint outMaterialIdx;\n\nstruct DrawElement\n{\n    int modelMatrixIdx;\n    int materialIdx;\n};\n\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 modelMatrix;\nuniform DrawElement drawElements[MAX_DRAW_ELEMENTS];\nuniform mat4 modelMatrices[MAX_ENTITIES];\n...\n</code></pre> <p>\u60a8\u4f1a\u6ce8\u610f\u5230\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u6211\u4eec\u5df2\u5c06\u7248\u672c\u63d0\u9ad8\u5230<code>460</code>\u3002\u6211\u4eec\u8fd8\u79fb\u9664\u4e86\u4e0e\u52a8\u753b\u76f8\u5173\u7684\u5e38\u91cf\uff08<code>MAX_WEIGHTS</code>\u548c<code>MAX_BONES</code>\uff09\u3001\u9aa8\u9abc\u7d22\u5f15\u7684\u5c5e\u6027\u4ee5\u53ca\u9aa8\u9abc\u77e9\u9635\u7684\u7edf\u4e00\u53d8\u91cf\uff08Uniform\uff09\u3002\u60a8\u5c06\u5728\u4e0b\u4e00\u7ae0\u4e2d\u770b\u5230\uff0c\u6211\u4eec\u5728\u6b64\u5904\u4e0d\u9700\u8981\u8fd9\u4e9b\u4fe1\u606f\u6765\u8fdb\u884c\u52a8\u753b\u3002\u6211\u4eec\u521b\u5efa\u4e86\u4e24\u4e2a\u65b0\u5e38\u91cf\u6765\u5b9a\u4e49<code>drawElements</code>\u548c<code>modelMatrices</code>\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u7684\u5927\u5c0f\u3002<code>drawElements</code>\u7edf\u4e00\u53d8\u91cf\uff08Uniform\uff09\u5c06\u4fdd\u5b58<code>DrawElement</code>\u5b9e\u4f8b\u3002\u5b83\u5c06\u4e3a\u6bcf\u4e2a\u7f51\u683c\uff08Mesh\uff09\u548c\u5173\u8054\u7684\u5b9e\u4f53\u5305\u542b\u4e00\u4e2a\u9879\u76ee\u3002\u5982\u679c\u60a8\u8fd8\u8bb0\u5f97\uff0c\u6211\u4eec\u5c06\u8bb0\u5f55\u4e00\u4e2a\u6307\u4ee4\u6765\u7ed8\u5236\u4e0e\u7f51\u683c\uff08Mesh\uff09\u5173\u8054\u7684\u6240\u6709\u9879\u76ee\uff0c\u5e76\u8bbe\u7f6e\u8981\u7ed8\u5236\u7684\u5b9e\u4f8b\u6570\u91cf\u3002\u4f46\u662f\uff0c\u6211\u4eec\u9700\u8981\u7279\u5b9a\u7684\u6bcf\u4e2a\u5b9e\u4f53\u6570\u636e\uff0c\u4f8b\u5982\u6a21\u578b\u77e9\u9635\u3002\u8fd9\u5c06\u4fdd\u5b58\u5728<code>drawElements</code>\u6570\u7ec4\u4e2d\uff0c\u8be5\u6570\u7ec4\u8fd8\u5c06\u6307\u5411\u8981\u4f7f\u7528\u7684\u6750\u8d28\uff08Material\uff09\u7d22\u5f15\u3002<code>modelMatrices</code>\u6570\u7ec4\u5c06\u53ea\u4fdd\u5b58\u6bcf\u4e2a\u5b9e\u4f53\u7684\u6a21\u578b\u77e9\u9635\u3002\u6750\u8d28\uff08Material\uff09\u4fe1\u606f\u5c06\u5728\u7247\u6bb5\u7740\u8272\u5668\uff08Shader\uff09\u4e2d\u4f7f\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528<code>outMaterialIdx</code>\u8f93\u51fa\u53d8\u91cf\u4f20\u9012\u5b83\u3002</p> <p><code>main</code>\u51fd\u6570\uff0c\u7531\u4e8e\u6211\u4eec\u4e0d\u9700\u8981\u5904\u7406\u52a8\u753b\uff0c\u5df2\u7ecf\u5927\u5927\u7b80\u5316\uff1a</p> <pre><code>...\nvoid main()\n{\n    vec4 initPos = vec4(position, 1.0);\n    vec4 initNormal = vec4(normal, 0.0);\n    vec4 initTangent = vec4(tangent, 0.0);\n    vec4 initBitangent = vec4(bitangent, 0.0);\n\n    uint idx = gl_BaseInstance + gl_InstanceID;\n    DrawElement drawElement = drawElements[idx];\n    outMaterialIdx = drawElement.materialIdx;\n    mat4 modelMatrix =  modelMatrices[drawElement.modelMatrixIdx];\n    mat4 modelViewMatrix = viewMatrix * modelMatrix;\n    outWorldPosition = modelMatrix * initPos;\n    outViewPosition  = viewMatrix * outWorldPosition;\n    gl_Position   = projectionMatrix * outViewPosition;\n    outNormal     = normalize(modelViewMatrix * initNormal).xyz;\n    outTangent    = normalize(modelViewMatrix * initTangent).xyz;\n    outBitangent  = normalize(modelViewMatrix * initBitangent).xyz;\n    outTextCoord  = texCoord;\n}\n</code></pre> <p>\u8fd9\u91cc\u7684\u5173\u952e\u662f\u83b7\u53d6\u6b63\u786e\u7684\u7d22\u5f15\u6765\u8bbf\u95ee<code>drawElements</code>\u5927\u5c0f\u3002\u6211\u4eec\u4f7f\u7528\u5185\u7f6e\u53d8\u91cf<code>gl_BaseInstance</code>\u548c<code>gl_InstanceID</code>\u3002\u5728\u8bb0\u5f55\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u7684\u6307\u4ee4\u65f6\uff0c\u6211\u4eec\u5c06\u4f7f\u7528<code>baseInstance</code>\u5c5e\u6027\u3002\u8be5\u5c5e\u6027\u7684\u503c\u5c06\u4e0e\u5185\u7f6e\u53d8\u91cf<code>gl_BaseInstance</code>\u5173\u8054\u3002<code>gl_InstanceID</code>\u5c06\u5728\u6211\u4eec\u4ece\u4e00\u4e2a\u7f51\u683c\uff08Mesh\uff09\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u7f51\u683c\uff08Mesh\uff09\u65f6\u4ece<code>0</code>\u5f00\u59cb\uff0c\u5e76\u4e3a\u4e0e\u6a21\u578b\u5173\u8054\u7684\u5b9e\u4f53\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u589e\u52a0\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u7ec4\u5408\u8fd9\u4e24\u4e2a\u53d8\u91cf\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u8bbf\u95ee<code>drawElements</code>\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5b9e\u4f53\u7684\u7279\u5b9a\u4fe1\u606f\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u6b63\u786e\u7684\u7d22\u5f15\uff0c\u6211\u4eec\u5c31\u50cf\u5728\u7740\u8272\u5668\uff08Shader\uff09\u7684\u5148\u524d\u7248\u672c\u4e2d\u4e00\u6837\u8f6c\u6362\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u4fe1\u606f\u3002</p> <p>\u573a\u666f\u7247\u6bb5\u7740\u8272\u5668\uff08Shader\uff09\uff08<code>scene.frag</code>\uff09\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>#version 400\n\nconst int MAX_MATERIALS  = 20;\nconst int MAX_TEXTURES = 16;\n\nin vec3 outNormal;\nin vec3 outTangent;\nin vec3 outBitangent;\nin vec2 outTextCoord;\nin vec4 outViewPosition;\nin vec4 outWorldPosition;\nflat in uint outMaterialIdx;\n\nlayout (location = 0) out vec4 buffAlbedo;\nlayout (location = 1) out vec4 buffNormal;\nlayout (location = 2) out vec4 buffSpecular;\n\nstruct Material\n{\n    vec4 diffuse;\n    vec4 specular;\n    float reflectance;\n    int normalMapIdx;\n    int textureIdx;\n};\n\nuniform sampler2D txtSampler[MAX_TEXTURES];\nuniform Material materials[MAX_MATERIALS];\n\nvec3 calcNormal(int idx, vec3 normal, vec3 tangent, vec3 bitangent, vec2 textCoords) {\n    mat3 TBN = mat3(tangent, bitangent, normal);\n    vec3 newNormal = texture(txtSampler[idx], textCoords).rgb;\n    newNormal = normalize(newNormal * 2.0 - 1.0);\n    newNormal = normalize(TBN * newNormal);\n    return newNormal;\n}\n\nvoid main() {\n    Material material = materials[outMaterialIdx];\n    vec4 text_color = texture(txtSampler[material.textureIdx], outTextCoord);\n    vec4 diffuse = text_color + material.diffuse;\n    if (diffuse.a &lt; 0.5) {\n        discard;\n    }\n    vec4 specular = text_color + material.specular;\n\n    vec3 normal = outNormal;\n    if (material.normalMapIdx &gt; 0) {\n        normal = calcNormal(material.normalMapIdx, outNormal, outTangent, outBitangent, outTextCoord);\n    }\n\n    buffAlbedo   = vec4(diffuse.xyz, material.reflectance);\n    buffNormal   = vec4(0.5 * normal + 0.5, 1.0);\n    buffSpecular = specular;\n}\n</code></pre> <p>\u4e3b\u8981\u66f4\u6539\u4e0e\u6211\u4eec\u8bbf\u95ee\u6750\u8d28\uff08Material\uff09\u4fe1\u606f\u548c\u7eb9\u7406\uff08Texture\uff09\u7684\u65b9\u5f0f\u6709\u5173\u3002\u6211\u4eec\u73b0\u5728\u5c06\u62e5\u6709\u4e00\u4e2a\u6750\u8d28\uff08Material\uff09\u4fe1\u606f\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u5c06\u901a\u8fc7\u6211\u4eec\u5728\u9876\u70b9\u7740\u8272\u5668\uff08Shader\uff09\u4e2d\u8ba1\u7b97\u7684\u7d22\u5f15\u8bbf\u95ee\uff0c\u8be5\u7d22\u5f15\u73b0\u5728\u4f4d\u4e8e<code>outMaterialIdx</code>\u8f93\u5165\u53d8\u91cf\u4e2d\uff08\u8be5\u53d8\u91cf\u5177\u6709<code>flat</code>\u4fee\u9970\u7b26\uff0c\u8868\u793a\u8be5\u503c\u4e0d\u5e94\u4ece\u9876\u70b9\u9636\u6bb5\u63d2\u503c\u5230\u7247\u6bb5\u9636\u6bb5\uff09\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7eb9\u7406\uff08Texture\uff09\u6570\u7ec4\u6765\u8bbf\u95ee\u5e38\u89c4\u7eb9\u7406\uff08Texture\uff09\u6216\u6cd5\u7ebf\u8d34\u56fe\u3002\u8fd9\u4e9b\u7eb9\u7406\uff08Texture\uff09\u7684\u7d22\u5f15\u73b0\u5728\u5b58\u50a8\u5728<code>Material</code>\u7ed3\u6784\u4e2d\u3002\u7531\u4e8e\u6211\u4eec\u5c06\u4f7f\u7528\u975e\u5e38\u91cf\u8868\u8fbe\u5f0f\u8bbf\u95ee\u91c7\u6837\u5668\uff08sampler\uff09\u6570\u7ec4\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06GLSL\u7248\u672c\u5347\u7ea7\u5230400\uff08\u8be5\u529f\u80fd\u4ec5\u5728OpenGL 4.0\u4e4b\u540e\u53ef\u7528\uff09\u3002</p> <p>\u73b0\u5728\u8f6e\u5230\u68c0\u67e5<code>SceneRender</code>\u7c7b\u4e2d\u7684\u66f4\u6539\u4e86\u3002\u6211\u4eec\u5c06\u9996\u5148\u5b9a\u4e49\u4e00\u7ec4\u5c06\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u5e38\u91cf\uff0c\u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u6307\u4ee4\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\u7684\u53e5\u67c4\uff08<code>staticRenderBufferHandle</code>\uff09\u548c\u7ed8\u5236\u547d\u4ee4\u5217\u8868\uff08Command List\uff09\u7684\u6570\u91cf\uff08<code>staticDrawCount</code>\uff09\u3002\u6211\u4eec\u8fd8\u9700\u8981\u6839\u636e\u524d\u9762\u663e\u793a\u7684\u7740\u8272\u5668\uff08Shader\uff09\u4e2d\u7684\u66f4\u6539\u4fee\u6539<code>createUniforms</code>\u65b9\u6cd5\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    public static final int MAX_DRAW_ELEMENTS = 100;\n    public static final int MAX_ENTITIES = 50;\n    private static final int COMMAND_SIZE = 5 * 4;\n    private static final int MAX_MATERIALS = 20;\n    private static final int MAX_TEXTURES = 16;\n    ...\n    private Map&lt;String, Integer&gt; entitiesIdxMap;\n    ...\n    private int staticDrawCount;\n    private int staticRenderBufferHandle;\n    ...\n    public SceneRender() {\n        ...\n        entitiesIdxMap = new HashMap&lt;&gt;();\n    }\n\n    private void createUniforms() {\n        uniformsMap = new UniformsMap(shaderProgram.getProgramId());\n        uniformsMap.createUniform(\"projectionMatrix\");\n        uniformsMap.createUniform(\"viewMatrix\");\n\n        for (int i = 0; i &lt; MAX_TEXTURES; i++) {\n            uniformsMap.createUniform(\"txtSampler[\" + i + \"]\");\n        }\n\n        for (int i = 0; i &lt; MAX_MATERIALS; i++) {\n            String name = \"materials[\" + i + \"]\";\n            uniformsMap.createUniform(name + \".diffuse\");\n            uniformsMap.createUniform(name + \".specular\");\n            uniformsMap.createUniform(name + \".reflectance\");\n            uniformsMap.createUniform(name + \".normalMapIdx\");\n            uniformsMap.createUniform(name + \".textureIdx\");\n        }\n\n        for (int i = 0; i &lt; MAX_DRAW_ELEMENTS; i++) {\n            String name = \"drawElements[\" + i + \"]\";\n            uniformsMap.createUniform(name + \".modelMatrixIdx\");\n            uniformsMap.createUniform(name + \".materialIdx\");\n        }\n\n        for (int i = 0; i &lt; MAX_ENTITIES; i++) {\n            uniformsMap.createUniform(\"modelMatrices[\" + i + \"]\");\n        }\n    }\n    ...\n}\n</code></pre> <p><code>entitiesIdxMap</code>\u5c06\u5b58\u50a8\u4e0e\u6a21\u578b\u5173\u8054\u7684\u5b9e\u4f53\u5217\u8868\u4e2d\u6bcf\u4e2a\u5b9e\u4f53\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5c06\u8be5\u4fe1\u606f\u5b58\u50a8\u5728<code>Map</code>\u4e2d\uff0c\u4f7f\u7528\u5b9e\u4f53\u6807\u8bc6\u7b26\u4f5c\u4e3a\u952e\u3002\u6211\u4eec\u7a0d\u540e\u9700\u8981\u6b64\u4fe1\u606f\uff0c\u56e0\u4e3a\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u547d\u4ee4\u5217\u8868\uff08Command List\uff09\u5c06\u8bb0\u5f55\u5728\u4e0e\u6bcf\u4e2a\u6a21\u578b\u5173\u8054\u7684\u7f51\u683c\uff08Mesh\uff09\u4e0a\u8fed\u4ee3\u3002\u4e3b\u8981\u66f4\u6539\u5728<code>render</code>\u65b9\u6cd5\u4e2d\uff0c\u8be5\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    public void render(Scene scene, RenderBuffers renderBuffers, GBuffer gBuffer) {\n        glBindFramebuffer(GL_DRAW_FRAMEBUFFER, gBuffer.getGBufferId());\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n        glViewport(0, 0, gBuffer.getWidth(), gBuffer.getHeight());\n        glDisable(GL_BLEND);\n\n        shaderProgram.bind();\n\n        uniformsMap.setUniform(\"projectionMatrix\", scene.getProjection().getProjMatrix());\n        uniformsMap.setUniform(\"viewMatrix\", scene.getCamera().getViewMatrix());\n\n        TextureCache textureCache = scene.getTextureCache();\n        List&lt;Texture&gt; textures = textureCache.getAll().stream().toList();\n        int numTextures = textures.size();\n        if (numTextures &gt; MAX_TEXTURES) {\n            Logger.warn(\"Only \" + MAX_TEXTURES + \" textures can be used\");\n        }\n        for (int i = 0; i &lt; Math.min(MAX_TEXTURES, numTextures); i++) {\n            uniformsMap.setUniform(\"txtSampler[\" + i + \"]\", i);\n            Texture texture = textures.get(i);\n            glActiveTexture(GL_TEXTURE0 + i);\n            texture.bind();\n        }\n\n        int entityIdx = 0;\n        for (Model model : scene.getModelMap().values()) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            for (Entity entity : entities) {\n                uniformsMap.setUniform(\"modelMatrices[\" + entityIdx + \"]\", entity.getModelMatrix());\n                entityIdx++;\n            }\n        }\n\n        // Static meshes\n        int drawElement = 0;\n        for (Model model: scene.getModelMap().values()) {\n            if (model.isAnimated()) {\n                continue;\n            }\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            for (RenderBuffers.MeshDrawData meshDrawData : model.getMeshDrawDataList()) {\n                for (Entity entity : entities) {\n                    String name = \"drawElements[\" + drawElement + \"]\";\n                    uniformsMap.setUniform(name + \".modelMatrixIdx\", entitiesIdxMap.get(entity.getId()));\n                    uniformsMap.setUniform(name + \".materialIdx\", meshDrawData.materialIdx());\n                    drawElement++;\n                }\n            }\n        }\n        glBindBuffer(GL_DRAW_INDIRECT_BUFFER, staticRenderBufferHandle);\n        glBindVertexArray(renderBuffers.getStaticVaoId());\n        glMultiDrawElementsIndirect(GL_TRIANGLES, GL_UNSIGNED_INT, 0, staticDrawCount, 0);\n        glBindVertexArray(0);\n\n        glEnable(GL_BLEND);\n        shaderProgram.unbind();\n    }\n    ...\n}\n</code></pre> <p>\u60a8\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u73b0\u5728\u5fc5\u987b\u7ed1\u5b9a\u7eb9\u7406\u91c7\u6837\u5668\uff08Texture Sampler\uff09\u6570\u7ec4\u5e76\u6fc0\u6d3b\u6240\u6709\u7eb9\u7406\u5355\u5143\uff08Texture Unit\uff09\u3002\u6b64\u5916\uff0c\u6211\u4eec\u904d\u5386\u5b9e\u4f53\u5e76\u4e3a\u6a21\u578b\u77e9\u9635\u8bbe\u7f6e\u7edf\u4e00\u53d8\u91cf\uff08Uniform\uff09\u503c\u3002\u4e0b\u4e00\u6b65\u662f\u4f7f\u7528\u9002\u5f53\u7684\u503c\u8bbe\u7f6e<code>drawElements</code>\u6570\u7ec4\u7edf\u4e00\u53d8\u91cf\uff08Uniform\uff09\uff0c\u8fd9\u4e9b\u503c\u5c06\u6307\u5411\u6a21\u578b\u77e9\u9635\u7684\u7d22\u5f15\u548c\u6750\u8d28\uff08Material\uff09\u7d22\u5f15\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u8c03\u7528<code>glMultiDrawElementsIndirect</code>\u51fd\u6570\u6267\u884c\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u4fdd\u5b58\u7ed8\u5236\u6307\u4ee4\uff08\u7ed8\u5236\u547d\u4ee4\u5217\u8868\uff08Command List\uff09\uff09\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\u4ee5\u53ca\u4fdd\u5b58\u7f51\u683c\uff08Mesh\uff09\u548c\u7d22\u5f15\u6570\u636e\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\u3002\u4f46\u662f\uff0c\u6211\u4eec\u4f55\u65f6\u586b\u5145\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\uff1f\u7b54\u6848\u662f\uff0c\u5982\u679c\u5b9e\u4f53\u6570\u91cf\u6ca1\u6709\u53d8\u5316\uff0c\u5219\u65e0\u9700\u5728\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u65f6\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u60a8\u53ef\u4ee5\u8bb0\u5f55\u8be5\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e00\u6b21\uff0c\u5e76\u5728\u6bcf\u6b21\u6e32\u67d3\u8c03\u7528\u4e2d\u4f7f\u7528\u5b83\u3002\u5728\u6b64\u7279\u5b9a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ea\u5728\u542f\u52a8\u65f6\u586b\u5145\u8be5\u7f13\u51b2\u533a\uff08Buffers\uff09\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u60a8\u60f3\u66f4\u6539\u5b9e\u4f53\u6570\u91cf\uff0c\u5219\u9700\u8981\u518d\u6b21\u91cd\u65b0\u521b\u5efa\u8be5\u7f13\u51b2\u533a\uff08Buffers\uff09\uff08\u60a8\u5e94\u8be5\u5728\u81ea\u5df1\u7684\u5f15\u64ce\u4e2d\u8fd9\u6837\u505a\uff09\u3002</p> <p>\u5b9e\u9645\u6784\u5efa\u95f4\u63a5\u7ed8\u5236\uff08indirect draw\uff09\u7f13\u51b2\u533a\uff08Buffers\uff09\u7684\u65b9\u6cd5\u79f0\u4e3a<code>setupStaticCommandBuffer</code>\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>public class SceneRender {\n    ...\n    private void setupStaticCommandBuffer(Scene scene) {\n        List&lt;Model&gt; modelList = scene.getModelMap().values().stream().filter(m -&gt; !m.isAnimated()).toList();\n        int numMeshes = 0;\n        for (Model model : modelList) {\n            numMeshes += model.getMeshDrawDataList().size();\n        }\n\n        int firstIndex = 0;\n        int baseInstance = 0;\n        ByteBuffer commandBuffer = MemoryUtil.memAlloc(numMeshes * COMMAND_SIZE);\n        for (Model model : modelList) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            int numEntities = entities.size();\n            for (RenderBuffers.MeshDrawData meshDrawData : model.getMeshDrawDataList()) {\n                // count\n                commandBuffer.putInt(meshDrawData.vertices());\n                // instanceCount\n                commandBuffer.putInt(numEntities);\n                commandBuffer.putInt(firstIndex);\n                // baseVertex\n                commandBuffer.putInt(meshDrawData.offset());\n                commandBuffer.putInt(baseInstance);\n\n                firstIndex += meshDrawData.vertices();\n                baseInstance += entities.size();\n            }\n        }\n        commandBuffer.flip();\n\n        staticDrawCount = commandBuffer.remaining() / COMMAND_SIZE;\n\n        staticRenderBufferHandle = glGenBuffers();\n        glBindBuffer(GL_DRAW_INDIRECT_BUFFER, staticRenderBufferHandle);\n        glBufferData(GL_DRAW_INDIRECT_BUFFER, commandBuffer, GL_DYNAMIC_DRAW);\n\n        MemoryUtil.memFree(commandBuffer);\n    }\n    ...\n}\n</code></pre></p> <p>\u6211\u4eec\u9996\u5148\u8ba1\u7b97\u7f51\u683c\uff08Mesh\uff09\u7684\u603b\u6570\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4fdd\u5b58\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u6307\u4ee4\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\u5e76\u586b\u5145\u5b83\u3002\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u9996\u5148\u5206\u914d\u4e00\u4e2a<code>ByteBuffer</code>\u3002\u6b64\u7f13\u51b2\u533a\uff08Buffers\uff09\u5c06\u4fdd\u5b58\u4e0e\u7f51\u683c\uff08Mesh\uff09\u6570\u91cf\u4e00\u6837\u591a\u7684\u6307\u4ee4\u96c6\u3002\u6bcf\u7ec4\u7ed8\u5236\u6307\u4ee4\u7531\u4e94\u4e2a\u5c5e\u6027\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5c5e\u6027\u957f\u5ea6\u4e3a4\u5b57\u8282\uff08\u6bcf\u7ec4\u53c2\u6570\u7684\u603b\u957f\u5ea6\u5b9a\u4e49\u4e86<code>COMMAND_SIZE</code>\u5e38\u91cf\uff09\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u904d\u5386\u4e0e\u6a21\u578b\u5173\u8054\u7684\u7f51\u683c\uff08Mesh\uff09\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u672c\u7ae0\u5f00\u5934\u4ee5\u68c0\u67e5\u7ed8\u5236\u95f4\u63a5\u6240\u9700\u7684\u7ed3\u6784\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u4f7f\u7528\u4e4b\u524d\u8ba1\u7b97\u7684<code>Map</code>\u586b\u5145<code>drawElements</code>\u7edf\u4e00\u53d8\u91cf\uff08Uniform\uff09\uff0c\u4ee5\u4fbf\u6b63\u786e\u83b7\u53d6\u6bcf\u4e2a\u5b9e\u4f53\u7684\u6a21\u578b\u77e9\u9635\u7d22\u5f15\u3002\u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u521b\u5efa\u4e00\u4e2aGPU\u7f13\u51b2\u533a\uff08Buffers\uff09\u5e76\u5c06\u6570\u636e\u8f6c\u50a8\u5230\u5176\u4e2d\u3002</p> <p>\u6211\u4eec\u9700\u8981\u66f4\u65b0<code>cleanup</code>\u65b9\u6cd5\u4ee5\u91ca\u653e\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u7f13\u51b2\u533a\uff08Buffers\uff09\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    public void cleanup() {\n        shaderProgram.cleanup();\n        glDeleteBuffers(staticRenderBufferHandle);\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\u6765\u8bbe\u7f6e\u6750\u8d28\uff08Material\uff09\u7edf\u4e00\u53d8\u91cf\uff08Uniform\uff09\u7684\u503c\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    private void setupMaterialsUniform(TextureCache textureCache, MaterialCache materialCache) {\n        List&lt;Texture&gt; textures = textureCache.getAll().stream().toList();\n        int numTextures = textures.size();\n        if (numTextures &gt; MAX_TEXTURES) {\n            Logger.warn(\"Only \" + MAX_TEXTURES + \" textures can be used\");\n        }\n        Map&lt;String, Integer&gt; texturePosMap = new HashMap&lt;&gt;();\n        for (int i = 0; i &lt; Math.min(MAX_TEXTURES, numTextures); i++) {\n            texturePosMap.put(textures.get(i).getTexturePath(), i);\n        }\n\n        shaderProgram.bind();\n        List&lt;Material&gt; materialList = materialCache.getMaterialsList();\n        int numMaterials = materialList.size();\n        for (int i = 0; i &lt; numMaterials; i++) {\n            Material material = materialCache.getMaterial(i);\n            String name = \"materials[\" + i + \"]\";\n            uniformsMap.setUniform(name + \".diffuse\", material.getDiffuseColor());\n            uniformsMap.setUniform(name + \".specular\", material.getSpecularColor());\n            uniformsMap.setUniform(name + \".reflectance\", material.getReflectance());\n            String normalMapPath = material.getNormalMapPath();\n            int idx = 0;\n            if (normalMapPath != null) {\n                idx = texturePosMap.computeIfAbsent(normalMapPath, k -&gt; 0);\n            }\n            uniformsMap.setUniform(name + \".normalMapIdx\", idx);\n            Texture texture = textureCache.getTexture(material.getTexturePath());\n            idx = texturePosMap.computeIfAbsent(texture.getTexturePath(), k -&gt; 0);\n            uniformsMap.setUniform(name + \".textureIdx\", idx);\n        }\n        shaderProgram.unbind();\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u53ea\u9700\u68c0\u67e5\u6211\u4eec\u6ca1\u6709\u8d85\u8fc7\u652f\u6301\u7684\u6700\u5927\u7eb9\u7406\uff08Texture\uff09\u6570\u91cf\uff08<code>MAX_TEXTURES</code>\uff09\uff0c\u5e76\u4f7f\u7528\u6211\u4eec\u5728\u524d\u51e0\u7ae0\u4e2d\u4f7f\u7528\u7684\u4fe1\u606f\u521b\u5efa\u4e00\u4e2a\u6750\u8d28\uff08Material\uff09\u4fe1\u606f\u6570\u7ec4\u3002\u552f\u4e00\u7684\u66f4\u6539\u662f\u6211\u4eec\u9700\u8981\u5728\u6750\u8d28\uff08Material\uff09\u4fe1\u606f\u4e2d\u5b58\u50a8\u5173\u8054\u7eb9\u7406\uff08Texture\uff09\u548c\u6cd5\u7ebf\u8d34\u56fe\u7684\u7d22\u5f15\u3002</p> <p>\u6211\u4eec\u9700\u8981\u53e6\u4e00\u4e2a\u65b9\u6cd5\u6765\u66f4\u65b0\u5b9e\u4f53\u7d22\u5f15\u6620\u5c04\uff1a <pre><code>public class SceneRender {\n    ...\n    private void setupEntitiesData(Scene scene) {\n        entitiesIdxMap.clear();\n        int entityIdx = 0;\n        for (Model model : scene.getModelMap().values()) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            for (Entity entity : entities) {\n                entitiesIdxMap.put(entity.getId(), entityIdx);\n                entityIdx++;\n            }\n        }\n    }\n    ...\n}\n</code></pre></p> <p>\u4e3a\u4e86\u5b8c\u6210<code>SceneRender</code>\u7c7b\u4e2d\u7684\u66f4\u6539\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5305\u88c5<code>setupXX</code>\u7684\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u4ece<code>Render</code>\u7c7b\u4e2d\u8c03\u7528\u5b83\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    public void setupData(Scene scene) {\n        setupEntitiesData(scene);\n        setupStaticCommandBuffer(scene);\n        setupMaterialsUniform(scene.getTextureCache(), scene.getMaterialCache());\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u8fd8\u5c06\u66f4\u6539\u9634\u5f71\u6e32\u67d3\u8fc7\u7a0b\u4ee5\u4f7f\u7528\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u3002\u9876\u70b9\u7740\u8272\u5668\uff08Shader\uff09\uff08<code>shadow.vert</code>\uff09\u4e2d\u7684\u66f4\u6539\u975e\u5e38\u76f8\u4f3c\uff0c\u6211\u4eec\u5c06\u4e0d\u4f7f\u7528\u52a8\u753b\u4fe1\u606f\uff0c\u5e76\u4e14\u9700\u8981\u4f7f\u7528<code>gl_BaseInstance</code>\u548c<code>gl_InstanceID</code>\u5185\u7f6e\u53d8\u91cf\u7684\u7ec4\u5408\u6765\u8bbf\u95ee\u9002\u5f53\u7684\u6a21\u578b\u77e9\u9635\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u6750\u8d28\uff08Material\uff09\u4fe1\u606f\uff0c\u56e0\u6b64\u7247\u6bb5\u7740\u8272\u5668\uff08Shader\uff09\uff08<code>shadow.frag</code>\uff09\u6ca1\u6709\u66f4\u6539\u3002</p> <pre><code>#version 460\n\nconst int MAX_DRAW_ELEMENTS = 100;\nconst int MAX_ENTITIES = 50;\n\nlayout (location=0) in vec3 position;\nlayout (location=1) in vec3 normal;\nlayout (location=2) in vec3 tangent;\nlayout (location=3) in vec3 bitangent;\nlayout (location=4) in vec2 texCoord;\n\nstruct DrawElement\n{\n    int modelMatrixIdx;\n};\n\nuniform mat4 modelMatrix;\nuniform mat4 projViewMatrix;\nuniform DrawElement drawElements[MAX_DRAW_ELEMENTS];\nuniform mat4 modelMatrices[MAX_ENTITIES];\n\nvoid main()\n{\n    vec4 initPos = vec4(position, 1.0);\n    uint idx = gl_BaseInstance + gl_InstanceID;\n    int modelMatrixIdx = drawElements[idx].modelMatrixIdx;\n    mat4 modelMatrix = modelMatrices[modelMatrixIdx];\n    gl_Position = projViewMatrix * modelMatrix * initPos;\n}\n</code></pre> <p><code>ShadowRender</code>\u4e2d\u7684\u66f4\u6539\u4e5f\u4e0e<code>SceneRender</code>\u7c7b\u4e2d\u7684\u66f4\u6539\u975e\u5e38\u76f8\u4f3c\uff1a</p> <pre><code>public class ShadowRender {\n\n    private static final int COMMAND_SIZE = 5 * 4;\n    ...\n    private Map&lt;String, Integer&gt; entitiesIdxMap;\n    ...\n    private int staticRenderBufferHandle;\n    ...\n    public ShadowRender() {\n        ...\n        entitiesIdxMap = new HashMap&lt;&gt;();\n    }\n\n    public void cleanup() {\n        shaderProgram.cleanup();\n        shadowBuffer.cleanup();\n        glDeleteBuffers(staticRenderBufferHandle);\n    }\n\n    private void createUniforms() {\n        ...\n        for (int i = 0; i &lt; SceneRender.MAX_DRAW_ELEMENTS; i++) {\n            String name = \"drawElements[\" + i + \"]\";\n            uniformsMap.createUniform(name + \".modelMatrixIdx\");\n        }\n\n        for (int i = 0; i &lt; SceneRender.MAX_ENTITIES; i++) {\n            uniformsMap.createUniform(\"modelMatrices[\" + i + \"]\");\n        }\n    }\n    ...\n}\n</code></pre> <p><code>createUniforms</code>\u65b9\u6cd5\u9700\u8981\u66f4\u65b0\u4ee5\u4f7f\u7528\u65b0\u7684\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\uff0c\u5e76\u4e14<code>cleanup</code>\u65b9\u6cd5\u9700\u8981\u91ca\u653e\u95f4\u63a5\u7ed8\u5236\uff08indirect draw\uff09\u7f13\u51b2\u533a\uff08Buffers\uff09\u3002<code>render</code>\u65b9\u6cd5\u73b0\u5728\u5c06\u4f7f\u7528<code>glMultiDrawElementsIndirect</code>\u800c\u4e0d\u662f\u4e3a\u7f51\u683c\uff08Mesh\uff09\u548c\u5b9e\u4f53\u63d0\u4ea4\u5355\u72ec\u7684\u7ed8\u5236\u547d\u4ee4\u5217\u8868\uff08Command List\uff09\uff1a</p> <p><pre><code>public class ShadowRender {\n    ...\n    public void render(Scene scene, RenderBuffers renderBuffers) {\n        CascadeShadow.updateCascadeShadows(cascadeShadows, scene);\n\n        glBindFramebuffer(GL_FRAMEBUFFER, shadowBuffer.getDepthMapFBO());\n        glViewport(0, 0, ShadowBuffer.SHADOW_MAP_WIDTH, ShadowBuffer.SHADOW_MAP_HEIGHT);\n\n        shaderProgram.bind();\n\n        int entityIdx = 0;\n        for (Model model : scene.getModelMap().values()) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            for (Entity entity : entities) {\n                uniformsMap.setUniform(\"modelMatrices[\" + entityIdx + \"]\", entity.getModelMatrix());\n                entityIdx++;\n            }\n        }\n\n        for (int i = 0; i &lt; CascadeShadow.SHADOW_MAP_CASCADE_COUNT; i++) {\n            glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, shadowBuffer.getDepthMapTexture().getIds()[i], 0);\n            glClear(GL_DEPTH_BUFFER_BIT);\n        }\n\n        // Static meshes\n        int drawElement = 0;\n        for (Model model: scene.getModelMap().values()) {\n            if (model.isAnimated()) {\n                continue;\n            }\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            for (RenderBuffers.MeshDrawData meshDrawData : model.getMeshDrawDataList()) {\n                for (Entity entity : entities) {\n                    String name = \"drawElements[\" + drawElement + \"]\";\n                    uniformsMap.setUniform(name + \".modelMatrixIdx\", entitiesIdxMap.get(entity.getId()));\n                    drawElement++;\n                }\n            }\n        }\n        glBindBuffer(GL_DRAW_INDIRECT_BUFFER, staticRenderBufferHandle);\n        glBindVertexArray(renderBuffers.getStaticVaoId());\n        for (int i = 0; i &lt; CascadeShadow.SHADOW_MAP_CASCADE_COUNT; i++) {\n            glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, shadowBuffer.getDepthMapTexture().getIds()[i], 0);\n\n            CascadeShadow shadowCascade = cascadeShadows.get(i);\n            uniformsMap.setUniform(\"projViewMatrix\", shadowCascade.getProjViewMatrix());\n\n            glMultiDrawElementsIndirect(GL_TRIANGLES, GL_UNSIGNED_INT, 0, staticDrawCount, 0);\n        }\n        glBindVertexArray(0);\n\n        shaderProgram.unbind();\n        glBindFramebuffer(GL_FRAMEBUFFER, 0);\n    }\n    ...\n}\n</code></pre> \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7c7b\u4f3c\u7684\u65b9\u6cd5\u6765\u8bbe\u7f6e\u95f4\u63a5\u7ed8\u5236\uff08indirect draw\uff09\u7f13\u51b2\u533a\uff08Buffers\uff09\u548c\u5b9e\u4f53\u6620\u5c04\uff1a</p> <pre><code>public class ShadowRender {\n    ...\n    public void setupData(Scene scene) {\n        setupEntitiesData(scene);\n        setupStaticCommandBuffer(scene);\n    }\n\n    private void setupEntitiesData(Scene scene) {\n        entitiesIdxMap.clear();\n        int entityIdx = 0;\n        for (Model model : scene.getModelMap().values()) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            for (Entity entity : entities) {\n                entitiesIdxMap.put(entity.getId(), entityIdx);\n                entityIdx++;\n            }\n        }\n    }\n\n    private void setupStaticCommandBuffer(Scene scene) {\n        List&lt;Model&gt; modelList = scene.getModelMap().values().stream().filter(m -&gt; !m.isAnimated()).toList();\n        Map&lt;String, Integer&gt; entitiesIdxMap = new HashMap&lt;&gt;();\n        int entityIdx = 0;\n        int numMeshes = 0;\n        for (Model model : scene.getModelMap().values()) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            numMeshes += model.getMeshDrawDataList().size();\n            for (Entity entity : entities) {\n                entitiesIdxMap.put(entity.getId(), entityIdx);\n                entityIdx++;\n            }\n        }\n\n        int firstIndex = 0;\n        int baseInstance = 0;\n        int drawElement = 0;\n        shaderProgram.bind();\n        ByteBuffer commandBuffer = MemoryUtil.memAlloc(numMeshes * COMMAND_SIZE);\n        for (Model model : modelList) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            int numEntities = entities.size();\n            for (RenderBuffers.MeshDrawData meshDrawData : model.getMeshDrawDataList()) {\n                // count\n                commandBuffer.putInt(meshDrawData.vertices());\n                // instanceCount\n                commandBuffer.putInt(numEntities);\n                commandBuffer.putInt(firstIndex);\n                // baseVertex\n                commandBuffer.putInt(meshDrawData.offset());\n                commandBuffer.putInt(baseInstance);\n\n                firstIndex += meshDrawData.vertices();\n                baseInstance += entities.size();\n\n                for (Entity entity : entities) {\n                    String name = \"drawElements[\" + drawElement + \"]\";\n                    uniformsMap.setUniform(name + \".modelMatrixIdx\", entitiesIdxMap.get(entity.getId()));\n                    drawElement++;\n                }\n            }\n        }\n        commandBuffer.flip();\n        shaderProgram.unbind();\n\n        staticDrawCount = commandBuffer.remaining() / COMMAND_SIZE;\n\n        staticRenderBufferHandle = glGenBuffers();\n        glBindBuffer(GL_DRAW_INDIRECT_BUFFER, staticRenderBufferHandle);\n        glBufferData(GL_DRAW_INDIRECT_BUFFER, commandBuffer, GL_DYNAMIC_DRAW);\n\n        MemoryUtil.memFree(commandBuffer);\n    }\n}\n</code></pre> <p>\u5728<code>Render</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u4f8b\u5316<code>RenderBuffers</code>\u7c7b\u5e76\u63d0\u4f9b\u4e00\u4e2a\u65b0\u65b9\u6cd5<code>setupData</code>\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u5728\u521b\u5efa\u6240\u6709\u6a21\u578b\u548c\u5b9e\u4f53\u540e\u8c03\u7528\uff0c\u4ee5\u521b\u5efa\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u7f13\u51b2\u533a\uff08Buffers\uff09\u548c\u5173\u8054\u6570\u636e\u3002</p> <pre><code>public class Render {\n    ...\n    private RenderBuffers renderBuffers;\n    ...\n    public Render(Window window) {\n        ...\n        renderBuffers = new RenderBuffers();\n    }\n\n    public void cleanup() {\n        ...\n        renderBuffers.cleanup();\n    }\n    ...\n    public void render(Window window, Scene scene) {\n        shadowRender.render(scene, renderBuffers);\n        sceneRender.render(scene, renderBuffers, gBuffer);\n        ...\n    }\n    ...\n    public void setupData(Scene scene) {\n        renderBuffers.loadStaticModels(scene);\n        renderBuffers.loadAnimatedModels(scene);\n        sceneRender.setupData(scene);\n        shadowRender.setupData(scene);\n        List&lt;Model&gt; modelList = new ArrayList&lt;&gt;(scene.getModelMap().values());\n        modelList.forEach(m -&gt; m.getMeshDataList().clear());\n    }\n}\n</code></pre> <p>\u6211\u4eec\u9700\u8981\u66f4\u65b0<code>TextureCache</code>\u7c7b\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u8fd4\u56de\u6240\u6709\u7eb9\u7406\uff08Texture\uff09\u7684\u65b9\u6cd5\uff1a</p> <pre><code>public class TextureCache {\n    ...\n    public Collection&lt;Texture&gt; getAll() {\n        return textureMap.values();\n    }\n    ...\n}\n</code></pre> <p>\u7531\u4e8e\u6211\u4eec\u4fee\u6539\u4e86\u5904\u7406\u6a21\u578b\u548c\u6750\u8d28\uff08Material\uff09\u7684\u7c7b\u5c42\u6b21\u7ed3\u6784\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0<code>SkyBox</code>\u7c7b\uff08\u52a0\u8f7d\u5355\u4e2a\u6a21\u578b\u73b0\u5728\u9700\u8981\u989d\u5916\u7684\u6b65\u9aa4\uff09\uff1a</p> <pre><code>public class SkyBox {\n\n    private Material material;\n    private Mesh mesh;\n    ...\n    public SkyBox(String skyBoxModelPath, TextureCache textureCache, MaterialCache materialCache) {\n        skyBoxModel = ModelLoader.loadModel(\"skybox-model\", skyBoxModelPath, textureCache, materialCache, false);\n        MeshData meshData = skyBoxModel.getMeshDataList().get(0);\n        material = materialCache.getMaterial(meshData.getMaterialIdx());\n        mesh = new Mesh(meshData);\n        skyBoxModel.getMeshDataList().clear();\n        skyBoxEntity = new Entity(\"skyBoxEntity-entity\", skyBoxModel.getId());\n    }\n\n    public void cleanuo() {\n        mesh.cleanup();\n    }\n\n    public Material getMaterial() {\n        return material;\n    }\n\n    public Mesh getMesh() {\n        return mesh;\n    }\n    ...\n}\n</code></pre> <p>\u8fd9\u4e9b\u66f4\u6539\u4e5f\u5f71\u54cd\u4e86<code>SkyBoxRender</code>\u7c7b\u3002\u5bf9\u4e8e\u5929\u7a7a\u76d2\uff08Sky Box\uff09\u6e32\u67d3\uff0c\u6211\u4eec\u5c06\u4e0d\u4f7f\u7528\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\uff08\u4e0d\u503c\u5f97\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u53ea\u6e32\u67d3\u4e00\u4e2a\u7f51\u683c\uff08Mesh\uff09\uff09\uff1a</p> <pre><code>public class SkyBoxRender {\n    ...\n    public void render(Scene scene) {\n        SkyBox skyBox = scene.getSkyBox();\n        if (skyBox == null) {\n            return;\n        }\n        shaderProgram.bind();\n\n        uniformsMap.setUniform(\"projectionMatrix\", scene.getProjection().getProjMatrix());\n        viewMatrix.set(scene.getCamera().getViewMatrix());\n        viewMatrix.m30(0);\n        viewMatrix.m31(0);\n        viewMatrix.m32(0);\n        uniformsMap.setUniform(\"viewMatrix\", viewMatrix);\n        uniformsMap.setUniform(\"txtSampler\", 0);\n\n        Entity skyBoxEntity = skyBox.getSkyBoxEntity();\n        TextureCache textureCache = scene.getTextureCache();\n        Material material = skyBox.getMaterial();\n        Mesh mesh = skyBox.getMesh();\n        Texture texture = textureCache.getTexture(material.getTexturePath());\n        glActiveTexture(GL_TEXTURE0);\n        texture.bind();\n\n        uniformsMap.setUniform(\"diffuse\", material.getDiffuseColor());\n        uniformsMap.setUniform(\"hasTexture\", texture.getTexturePath().equals(TextureCache.DEFAULT_TEXTURE) ? 0 : 1);\n\n        glBindVertexArray(mesh.getVaoId());\n\n        uniformsMap.setUniform(\"modelMatrix\", skyBoxEntity.getModelMatrix());\n        glDrawElements(GL_TRIANGLES, mesh.getNumVertices(), GL_UNSIGNED_INT, 0);\n\n        glBindVertexArray(0);\n\n        shaderProgram.unbind();\n    }\n    ...\n}\n</code></pre> <p>\u5728<code>Scene</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e0d\u8c03\u7528<code>Scene</code>\u7684<code>cleanup</code>\u65b9\u6cd5\uff08\u56e0\u4e3a\u4e0e\u7f13\u51b2\u533a\uff08Buffers\uff09\u5173\u8054\u7684\u6570\u636e\u5728<code>RenderBuffers</code>\u7c7b\u4e2d\uff09\uff1a</p> <pre><code>public class Engine {\n    ...\n    private void cleanup() {\n        appLogic.cleanup();\n        render.cleanup();\n        window.cleanup();\n    }\n    ...\n}\n</code></pre> <p>\u6700\u540e\uff0c\u5728<code>Main</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u5c06\u52a0\u8f7d\u4e0e\u7acb\u65b9\u4f53\u6a21\u578b\u5173\u8054\u7684\u4e24\u4e2a\u5b9e\u4f53\u3002\u6211\u4eec\u5c06\u72ec\u7acb\u65cb\u8f6c\u5b83\u4eec\u4ee5\u68c0\u67e5\u4ee3\u7801\u662f\u5426\u6b63\u5e38\u5de5\u4f5c\u3002\u6700\u91cd\u8981\u7684\u90e8\u5206\u662f\u5728\u52a0\u8f7d\u6240\u6709\u5185\u5bb9\u540e\u8c03\u7528<code>Render</code>\u7c7b\u7684<code>setupData</code>\u65b9\u6cd5\u3002</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    private Entity cubeEntity1;\n    private Entity cubeEntity2;\n    ...\n    private float rotation;\n\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-20\", opts, main);\n        ...\n    }\n\n    public void init(Window window, Scene scene, Render render) {\n        ...\n        Model terrainModel = ModelLoader.loadModel(terrainModelId, \"resources/models/terrain/terrain.obj\",\n                scene.getTextureCache(), scene.getMaterialCache(), false);\n        ...\n        Model cubeModel = ModelLoader.loadModel(\"cube-model\", \"resources/models/cube/cube.obj\",\n                scene.getTextureCache(), scene.getMaterialCache(), false);\n        scene.addModel(cubeModel);\n        cubeEntity1 = new Entity(\"cube-entity-1\", cubeModel.getId());\n        cubeEntity1.setPosition(0, 2, -1);\n        cubeEntity1.updateModelMatrix();\n        scene.addEntity(cubeEntity1);\n\n        cubeEntity2 = new Entity(\"cube-entity-2\", cubeModel.getId());\n        cubeEntity2.setPosition(-2, 2, -1);\n        cubeEntity2.updateModelMatrix();\n        scene.addEntity(cubeEntity2);\n\n        render.setupData(scene);\n        ...\n        SkyBox skyBox = new SkyBox(\"resources/models/skybox/skybox.obj\", scene.getTextureCache(),\n                scene.getMaterialCache());\n        ...\n    }\n    ...\n    public void update(Window window, Scene scene, long diffTimeMillis) {\n        rotation += 1.5;\n        if (rotation &gt; 360) {\n            rotation = 0;\n        }\n        cubeEntity1.setRotation(1, 1, 1, (float) Math.toRadians(rotation));\n        cubeEntity1.updateModelMatrix();\n\n        cubeEntity2.setRotation(1, 1, 1, (float) Math.toRadians(360 - rotation));\n        cubeEntity2.updateModelMatrix();\n    }\n}\n</code></pre> <p>\u5b8c\u6210\u6240\u6709\u8fd9\u4e9b\u66f4\u6539\u540e\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u5185\u5bb9\u3002</p> <p></p> <p>\u4e0b\u4e00\u7ae0</p>"},{"location":"21-indirect-drawing-and-copute-shaders/","title":"\u7b2c21\u7ae0 - \u95f4\u63a5\u7ed8\u5236\uff08\u52a8\u753b\u6a21\u578b\uff09\u548c\u8ba1\u7b97\u7740\u8272\u5668\uff08Indirect drawing (animated models) and compute shaders\uff09","text":"<p>\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5728\u4f7f\u7528\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u65f6\u6dfb\u52a0\u5bf9\u52a8\u753b\u6a21\u578b\u7684\u652f\u6301\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u5f15\u5165\u4e00\u4e2a\u65b0\u4e3b\u9898\uff0c\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u5c06\u6a21\u578b\u9876\u70b9\u4ece\u7ed1\u5b9a\u59ff\u52bf\u8f6c\u6362\u4e3a\u6700\u7ec8\u4f4d\u7f6e\uff08\u6839\u636e\u5f53\u524d\u52a8\u753b\uff09\u3002\u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e38\u89c4\u7740\u8272\u5668\uff08Shader\uff09\u6e32\u67d3\u5b83\u4eec\uff0c\u6e32\u67d3\u65f6\u65e0\u9700\u533a\u5206\u52a8\u753b\u6a21\u578b\u548c\u975e\u52a8\u753b\u6a21\u578b\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u5c06\u52a8\u753b\u53d8\u6362\u4e0e\u6e32\u67d3\u8fc7\u7a0b\u89e3\u8026\u3002\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u5c06\u80fd\u591f\u4ee5\u4e0e\u6e32\u67d3\u901f\u7387\u4e0d\u540c\u7684\u901f\u7387\u66f4\u65b0\u52a8\u753b\u6a21\u578b\uff08\u5982\u679c\u5b83\u4eec\u6ca1\u6709\u6539\u53d8\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5728\u6bcf\u4e00\u5e27\u4e2d\u8f6c\u6362\u52a8\u753b\u9876\u70b9\uff09\u3002</p> <p>\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u672c\u7ae0\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002</p>"},{"location":"21-indirect-drawing-and-copute-shaders/#_1","title":"\u6982\u5ff5","text":"<p>\u5728\u89e3\u91ca\u4ee3\u7801\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u89e3\u91ca\u4e00\u4e0b\u52a8\u753b\u6a21\u578b\u95f4\u63a5\u7ed8\u5236\uff08indirect drawing\uff09\u80cc\u540e\u7684\u6982\u5ff5\u3002\u6211\u4eec\u5c06\u9075\u5faa\u7684\u65b9\u6cd5\u4e0e\u4e0a\u4e00\u7ae0\u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5\u5927\u81f4\u76f8\u540c\u3002\u6211\u4eec\u5c06\u6709\u4e00\u4e2a\u5168\u5c40\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u5176\u4e2d\u5305\u542b\u9876\u70b9\u6570\u636e\u3002\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u6211\u4eec\u5c06\u9996\u5148\u4f7f\u7528\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u5c06\u9876\u70b9\u4ece\u7ed1\u5b9a\u59ff\u52bf\u8f6c\u6362\u4e3a\u6700\u7ec8\u59ff\u52bf\u3002\u6b64\u5916\uff0c\u6211\u4eec\u4e0d\u4f1a\u4e3a\u6a21\u578b\u4f7f\u7528\u591a\u4e2a\u5b9e\u4f8b\u3002\u539f\u56e0\u5728\u4e8e\uff0c\u5373\u4f7f\u6211\u4eec\u6709\u591a\u4e2a\u5b9e\u4f53\u5171\u4eab\u540c\u4e00\u4e2a\u52a8\u753b\u6a21\u578b\uff0c\u5b83\u4eec\u4e5f\u53ef\u80fd\u5904\u4e8e\u4e0d\u540c\u7684\u52a8\u753b\u72b6\u6001\uff08\u52a8\u753b\u53ef\u80fd\u7a0d\u540e\u5f00\u59cb\uff0c\u66f4\u65b0\u901f\u7387\u8f83\u4f4e\uff0c\u751a\u81f3\u6a21\u578b\u7684\u7279\u5b9a\u9009\u5b9a\u52a8\u753b\u4e5f\u53ef\u80fd\u4e0d\u540c\uff09\u3002\u56e0\u6b64\uff0c\u5728\u5305\u542b\u52a8\u753b\u9876\u70b9\u7684\u5168\u5c40\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u5b9e\u4f53\u63d0\u4f9b\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u636e\u5757\u3002</p> <p>\u6211\u4eec\u4ecd\u7136\u9700\u8981\u4fdd\u7559\u7ed1\u5b9a\u6570\u636e\uff0c\u6211\u4eec\u5c06\u4e3a\u573a\u666f\u4e2d\u7684\u6240\u6709\u7f51\u683c\uff08Mesh\uff09\u521b\u5efa\u53e6\u4e00\u4e2a\u5168\u5c40\u7f13\u51b2\u533a\uff08Buffers\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4e3a\u6bcf\u4e2a\u5b9e\u4f53\u8bbe\u7f6e\u5355\u72ec\u7684\u6570\u636e\u5757\uff0c\u6bcf\u4e2a\u7f51\u683c\uff08Mesh\uff09\u53ea\u9700\u8981\u4e00\u4e2a\u3002\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u5c06\u8bbf\u95ee\u8be5\u7ed1\u5b9a\u59ff\u52bf\u6570\u636e\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u4e3a\u6bcf\u4e2a\u5b9e\u4f53\u5904\u7406\u8be5\u6570\u636e\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u53e6\u4e00\u4e2a\u5168\u5c40\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\uff0c\u5176\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u7528\u4e8e\u9759\u6001\u6a21\u578b\u7684\u7ed3\u6784\u3002</p>"},{"location":"21-indirect-drawing-and-copute-shaders/#_2","title":"\u6a21\u578b\u52a0\u8f7d","text":"<p>\u6211\u4eec\u9700\u8981\u66f4\u65b0<code>Model</code>\u7c7b\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u4e0d\u518d\u5728\u6b64\u7c7b\u4e2d\u5b58\u50a8\u9aa8\u9abc\u77e9\u9635\u6570\u636e\u3002\u76f8\u53cd\uff0c\u8be5\u4fe1\u606f\u5c06\u5b58\u50a8\u5728\u516c\u5171\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\u3002\u56e0\u6b64\uff0c\u5185\u90e8\u7c7b<code>AnimatedFrame</code>\u4e0d\u80fd\u518d\u662f\u8bb0\u5f55\uff08\u8bb0\u5f55\u662f\u4e0d\u53ef\u53d8\u7684\uff09\u3002</p> <pre><code>public class Model {\n    ...\n    public static class AnimatedFrame {\n        private Matrix4f[] bonesMatrices;\n        private int offset;\n\n        public AnimatedFrame(Matrix4f[] bonesMatrices) {\n            this.bonesMatrices = bonesMatrices;\n        }\n\n        public void clearData() {\n            bonesMatrices = null;\n        }\n\n        public Matrix4f[] getBonesMatrices() {\n            return bonesMatrices;\n        }\n\n        public int getOffset() {\n            return offset;\n        }\n\n        public void setOffset(int offset) {\n            this.offset = offset;\n        }\n    }\n    ...\n}\n</code></pre> <p>\u4ece\u8bb0\u5f55\u66f4\u6539\u4e3a\u5e38\u89c4\u5185\u90e8\u7c7b\uff0c\u66f4\u6539\u4e86\u6211\u4eec\u8bbf\u95ee<code>Model</code>\u7c7b\u5c5e\u6027\u7684\u65b9\u5f0f\uff0c\u8fd9\u9700\u8981\u5728<code>ModelLoader</code>\u7c7b\u4e2d\u8fdb\u884c\u7ec6\u5fae\u4fee\u6539\uff1a <pre><code>public class ModelLoader {\n    ...\n    private static void buildFrameMatrices(AIAnimation aiAnimation, List&lt;Bone&gt; boneList, Model.AnimatedFrame animatedFrame,\n                                           int frame, Node node, Matrix4f parentTransformation, Matrix4f globalInverseTransform) {\n        ...\n        for (Bone bone : affectedBones) {\n            ...\n            animatedFrame.getBonesMatrices()[bone.boneId()] = boneTransform;\n        }\n        ...\n    }\n    ...\n}\n</code></pre></p> <p>\u73b0\u5728\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u5c06\u9700\u8981\u7684\u65b0\u5168\u5c40\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u8fd9\u4e9b\u7f13\u51b2\u533a\uff08Buffers\uff09\u5c06\u5728<code>RenderBuffers</code>\u7c7b\u4e2d\u8fdb\u884c\u7ba1\u7406\uff1a</p> <pre><code>public class RenderBuffers {\n\n    private int animVaoId;\n    private int bindingPosesBuffer;\n    private int bonesIndicesWeightsBuffer;\n    private int bonesMatricesBuffer;\n    private int destAnimationBuffer;\n    ...\n    public void cleanup() {\n        ...\n        glDeleteVertexArrays(animVaoId);\n    }\n    ...\n    public int getAnimVaoId() {\n        return animVaoId;\n    }\n\n    public int getBindingPosesBuffer() {\n        return bindingPosesBuffer;\n    }\n\n    public int getBonesIndicesWeightsBuffer() {\n        return bonesIndicesWeightsBuffer;\n    }\n\n    public int getBonesMatricesBuffer() {\n        return bonesMatricesBuffer;\n    }\n\n    public int getDestAnimationBuffer() {\n        return destAnimationBuffer;\n    }\n    ...\n}\n</code></pre> <p><code>animVaoId</code>\u5c06\u5b58\u50a8\u5b9a\u4e49\u5c06\u5305\u542b\u8f6c\u6362\u540e\u7684\u52a8\u753b\u9876\u70b9\u7684\u6570\u636e\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\uff0c\u5373\u7ecf\u8fc7\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u5904\u7406\u540e\u7684\u6570\u636e\uff08\u8bb0\u4f4f\u6bcf\u4e2a\u7f51\u683c\uff08Mesh\uff09\u548c\u5b9e\u4f53\u4e00\u4e2a\u6570\u636e\u5757\uff09\u3002\u6570\u636e\u672c\u8eab\u5c06\u5b58\u50a8\u5728\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\uff0c\u5176\u53e5\u67c4\u5c06\u5b58\u50a8\u5728<code>destAnimationBuffer</code>\u4e2d\u3002\u6211\u4eec\u9700\u8981\u5728\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u4e2d\u8bbf\u95ee\u8be5\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u5b83\u4e0d\u7406\u89e3\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Objects\uff0cVAOs\uff09\uff0c\u53ea\u7406\u89e3\u7f13\u51b2\u533a\uff08Buffers\uff09\u3002\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u9aa8\u9abc\u77e9\u9635\u548c\u7d22\u5f15\u4ee5\u53ca\u6743\u91cd\u5b58\u50a8\u5230\u5206\u522b\u7531<code>bonesMatricesBuffer</code>\u548c<code>bonesIndicesWeightsBuffer</code>\u8868\u793a\u7684\u4e24\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\u3002\u5728<code>cleanup</code>\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e0d\u80fd\u5fd8\u8bb0\u6e05\u7406\u65b0\u7684\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\u3002\u6211\u4eec\u8fd8\u9700\u8981\u4e3a\u65b0\u5c5e\u6027\u6dfb\u52a0getter\u3002</p> <p>\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5b9e\u73b0<code>loadAnimatedModels</code>\uff0c\u5b83\u5982\u4e0b\u6240\u793a\uff1a <pre><code>public class RenderBuffers {\n    ...\n    public void loadAnimatedModels(Scene scene) {\n        List&lt;Model&gt; modelList = scene.getModelMap().values().stream().filter(Model::isAnimated).toList();\n        loadBindingPoses(modelList);\n        loadBonesMatricesBuffer(modelList);\n        loadBonesIndicesWeights(modelList);\n\n        animVaoId = glGenVertexArrays();\n        glBindVertexArray(animVaoId);\n        int positionsSize = 0;\n        int normalsSize = 0;\n        int textureCoordsSize = 0;\n        int indicesSize = 0;\n        int offset = 0;\n        int chunkBindingPoseOffset = 0;\n        int bindingPoseOffset = 0;\n        int chunkWeightsOffset = 0;\n        int weightsOffset = 0;\n        for (Model model : modelList) {\n            List&lt;Entity&gt; entities = model.getEntitiesList();\n            for (Entity entity : entities) {\n                List&lt;RenderBuffers.MeshDrawData&gt; meshDrawDataList = model.getMeshDrawDataList();\n                bindingPoseOffset = chunkBindingPoseOffset;\n                weightsOffset = chunkWeightsOffset;\n                for (MeshData meshData : model.getMeshDataList()) {\n                    positionsSize += meshData.getPositions().length;\n                    normalsSize += meshData.getNormals().length;\n                    textureCoordsSize += meshData.getTextCoords().length;\n                    indicesSize += meshData.getIndices().length;\n\n                    int meshSizeInBytes = (meshData.getPositions().length + meshData.getNormals().length * 3 + meshData.getTextCoords().length) * 4;\n                    meshDrawDataList.add(new MeshDrawData(meshSizeInBytes, meshData.getMaterialIdx(), offset,\n                            meshData.getIndices().length, new AnimMeshDrawData(entity, bindingPoseOffset, weightsOffset)));\n                    bindingPoseOffset += meshSizeInBytes / 4;\n                    int groupSize = (int) Math.ceil((float) meshSizeInBytes / (14 * 4));\n                    weightsOffset += groupSize * 2 * 4;\n                    offset = positionsSize / 3;\n                }\n            }\n            chunkBindingPoseOffset += bindingPoseOffset;\n            chunkWeightsOffset += weightsOffset;\n        }\n\n        destAnimationBuffer = glGenBuffers();\n        vboIdList.add(destAnimationBuffer);\n        FloatBuffer meshesBuffer = MemoryUtil.memAllocFloat(positionsSize + normalsSize * 3 + textureCoordsSize);\n        for (Model model : modelList) {\n            model.getEntitiesList().forEach(e -&gt; {\n                for (MeshData meshData : model.getMeshDataList()) {\n                    populateMeshBuffer(meshesBuffer, meshData);\n                }\n            });\n        }\n        meshesBuffer.flip();\n        glBindBuffer(GL_ARRAY_BUFFER, destAnimationBuffer);\n        glBufferData(GL_ARRAY_BUFFER, meshesBuffer, GL_STATIC_DRAW);\n        MemoryUtil.memFree(meshesBuffer);\n\n        defineVertexAttribs();\n\n        // Index VBO\n        int vboId = glGenBuffers();\n        vboIdList.add(vboId);\n        IntBuffer indicesBuffer = MemoryUtil.memAllocInt(indicesSize);\n        for (Model model : modelList) {\n            model.getEntitiesList().forEach(e -&gt; {\n                for (MeshData meshData : model.getMeshDataList()) {\n                    indicesBuffer.put(meshData.getIndices());\n                }\n            });\n        }\n        indicesBuffer.flip();\n        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, vboId);\n        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indicesBuffer, GL_STATIC_DRAW);\n        MemoryUtil.memFree(indicesBuffer);\n\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n        glBindVertexArray(0);\n    }\n    ...\n}\n</code></pre></p> <p>\u6211\u4eec\u7a0d\u540e\u5c06\u770b\u5230\u4ee5\u4e0b\u65b9\u6cd5\u662f\u5982\u4f55\u5b9a\u4e49\u7684\uff0c\u4f46\u76ee\u524d\uff1a * <code>loadBindingPoses</code>\uff1a\u5b58\u50a8\u4e0e\u52a8\u753b\u6a21\u578b\u5173\u8054\u7684\u6240\u6709\u7f51\u683c\uff08Mesh\uff09\u7684\u7ed1\u5b9a\u59ff\u52bf\u4fe1\u606f\u3002 * <code>loadBonesMatricesBuffer</code>\uff1a\u5b58\u50a8\u52a8\u753b\u6a21\u578b\u7684\u6bcf\u4e2a\u52a8\u753b\u7684\u9aa8\u9abc\u77e9\u9635\u3002 * <code>loadBonesIndicesWeights</code>\uff1a\u5b58\u50a8\u52a8\u753b\u6a21\u578b\u7684\u9aa8\u9abc\u7d22\u5f15\u548c\u6743\u91cd\u4fe1\u606f\u3002</p> <p>\u4ee3\u7801\u4e0e<code>loadStaticModels</code>\u975e\u5e38\u76f8\u4f3c\uff0c\u6211\u4eec\u9996\u5148\u4e3a\u52a8\u753b\u6a21\u578b\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Object\uff0c\u7b80\u79f0VAO\uff09\uff0c\u7136\u540e\u904d\u5386\u6a21\u578b\u7684\u7f51\u683c\uff08Mesh\uff09\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\u6765\u4fdd\u5b58\u6240\u6709\u6570\u636e\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u904d\u5386\u8fd9\u4e9b\u5143\u7d20\u4ee5\u83b7\u53d6\u6700\u7ec8\u7f13\u51b2\u533a\uff08Buffers\uff09\u5927\u5c0f\u3002\u8bf7\u6ce8\u610f\uff0c\u7b2c\u4e00\u4e2a\u5faa\u73af\u4e0e\u9759\u6001\u7248\u672c\u7565\u6709\u4e0d\u540c\u3002\u6211\u4eec\u9700\u8981\u904d\u5386\u4e0e\u6a21\u578b\u5173\u8054\u7684\u5b9e\u4f53\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5b9e\u4f53\u8ba1\u7b97\u6240\u6709\u5173\u8054\u7f51\u683c\uff08Mesh\uff09\u7684\u5927\u5c0f\u3002</p> <p>\u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b<code>loadBindingPoses</code>\u65b9\u6cd5\uff1a</p> <pre><code>public class RenderBuffers {\n    ...\n    private void loadBindingPoses(List&lt;Model&gt; modelList) {\n        int meshSize = 0;\n        for (Model model : modelList) {\n            for (MeshData meshData : model.getMeshDataList()) {\n                meshSize += meshData.getPositions().length + meshData.getNormals().length * 3 +\n                        meshData.getTextCoords().length + meshData.getIndices().length;\n            }\n        }\n\n        bindingPosesBuffer = glGenBuffers();\n        vboIdList.add(bindingPosesBuffer);\n        FloatBuffer meshesBuffer = MemoryUtil.memAllocFloat(meshSize);\n        for (Model model : modelList) {\n            for (MeshData meshData : model.getMeshDataList()) {\n                populateMeshBuffer(meshesBuffer, meshData);\n            }\n        }\n        meshesBuffer.flip();\n        glBindBuffer(GL_SHADER_STORAGE_BUFFER, bindingPosesBuffer);\n        glBufferData(GL_SHADER_STORAGE_BUFFER, meshesBuffer, GL_STATIC_DRAW);\n        MemoryUtil.memFree(meshesBuffer);\n\n        glBindBuffer(GL_ARRAY_BUFFER, 0);\n    }\n    ...\n}\n</code></pre> <p><code>loadBindingPoses</code>\u904d\u5386\u6240\u6709\u52a8\u753b\u6a21\u578b\uff0c\u83b7\u53d6\u603b\u5927\u5c0f\u4ee5\u5bb9\u7eb3\u6240\u6709\u5173\u8054\u7684\u7f51\u683c\uff08Mesh\uff09\u3002\u4f7f\u7528\u8be5\u5927\u5c0f\uff0c\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\u5e76\u4f7f\u7528\u524d\u9762\u7ae0\u8282\u4e2d\u5df2\u6709\u7684<code>populateMeshBuffer</code>\u586b\u5145\u5b83\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u52a8\u753b\u6a21\u578b\u6240\u6709\u7f51\u683c\uff08Mesh\uff09\u7684\u7ed1\u5b9a\u59ff\u52bf\u9876\u70b9\u5b58\u50a8\u5230\u5355\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\u3002\u6211\u4eec\u5c06\u5728\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u4e2d\u8bbf\u95ee\u6b64\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5728\u7ed1\u5b9a\u65f6\u4f7f\u7528\u4e86<code>GL_SHADER_STORAGE_BUFFER</code>\u6807\u5fd7\u3002</p> <p><code>loadBonesMatricesBuffer</code>\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class RenderBuffers {\n    ...\n    private void loadBonesMatricesBuffer(List&lt;Model&gt; modelList) {\n        int bufferSize = 0;\n        for (Model model : modelList) {\n            List&lt;Model.Animation&gt; animationsList = model.getAnimationList();\n            for (Model.Animation animation : animationsList) {\n                List&lt;Model.AnimatedFrame&gt; frameList = animation.frames();\n                for (Model.AnimatedFrame frame : frameList) {\n                    Matrix4f[] matrices = frame.getBonesMatrices();\n                    bufferSize += matrices.length * 64;\n                }\n            }\n        }\n\n        bonesMatricesBuffer = glGenBuffers();\n        vboIdList.add(bonesMatricesBuffer);\n        ByteBuffer dataBuffer = MemoryUtil.memAlloc(bufferSize);\n        int matrixSize = 4 * 4 * 4;\n        for (Model model : modelList) {\n            List&lt;Model.Animation&gt; animationsList = model.getAnimationList();\n            for (Model.AnimatedFrame frame : frameList) {\n                frame.setOffset(dataBuffer.position() / matrixSize);\n                Matrix4f[] matrices = frame.getBonesMatrices();\n                for (Matrix4f matrix : matrices) {\n                    matrix.get(dataBuffer);\n                    dataBuffer.position(dataBuffer.position() + matrixSize);\n                }\n                frame.clearData();\n            }\n        }\n        dataBuffer.flip();\n\n        glBindBuffer(GL_SHADER_STORAGE_BUFFER, bonesMatricesBuffer);\n        glBufferData(GL_SHADER_STORAGE_BUFFER, dataBuffer, GL_STATIC_DRAW);\n        MemoryUtil.memFree(dataBuffer);\n    }\n    ...\n}\n</code></pre> <p>\u6211\u4eec\u5f00\u59cb\u904d\u5386\u6bcf\u4e2a\u6a21\u578b\u7684\u52a8\u753b\u6570\u636e\uff0c\u83b7\u53d6\u6bcf\u4e2a\u52a8\u753b\u5e27\u7684\u5173\u8054\u53d8\u6362\u77e9\u9635\uff08\u7528\u4e8e\u6240\u6709\u9aa8\u9abc\uff09\uff0c\u4ee5\u4fbf\u8ba1\u7b97\u5c06\u4fdd\u5b58\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u5927\u5c0f\uff0c\u6211\u4eec\u5c31\u521b\u5efa\u7f13\u51b2\u533a\uff08Buffers\uff09\u5e76\u5f00\u59cb\u7528\u8fd9\u4e9b\u77e9\u9635\u586b\u5145\u5b83\uff08\u5728\u7b2c\u4e8c\u4e2a\u5faa\u73af\u4e2d\uff09\u3002\u4e0e\u4e0a\u4e00\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e00\u6837\uff0c\u6211\u4eec\u5c06\u5728\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u4e2d\u8bbf\u95ee\u6b64\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528<code>GL_SHADER_STORAGE_BUFFER</code>\u6807\u5fd7\u3002</p> <p><code>loadBonesIndicesWeights</code>\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>public class RenderBuffers {\n    ...\n    private void loadBonesIndicesWeights(List&lt;Model&gt; modelList) {\n        int bufferSize = 0;\n        for (Model model : modelList) {\n            for (MeshData meshData : model.getMeshDataList()) {\n                bufferSize += meshData.getBoneIndices().length * 4 + meshData.getWeights().length * 4;\n            }\n        }\n        ByteBuffer dataBuffer = MemoryUtil.memAlloc(bufferSize);\n        for (Model model : modelList) {\n            for (MeshData meshData : model.getMeshDataList()) {\n                int[] bonesIndices = meshData.getBoneIndices();\n                float[] weights = meshData.getWeights();\n                int rows = bonesIndices.length / 4;\n                for (int row = 0; row &lt; rows; row++) {\n                    int startPos = row * 4;\n                    dataBuffer.putFloat(weights[startPos]);\n                    dataBuffer.putFloat(weights[startPos + 1]);\n                    dataBuffer.putFloat(weights[startPos + 2]);\n                    dataBuffer.putFloat(weights[startPos + 3]);\n                    dataBuffer.putFloat(bonesIndices[startPos]);\n                    dataBuffer.putFloat(bonesIndices[startPos + 1]);\n                    dataBuffer.putFloat(bonesIndices[startPos + 2]);\n                    dataBuffer.putFloat(bonesIndices[startPos + 3]);\n                }\n            }\n        }\n        dataBuffer.flip();\n\n        bonesIndicesWeightsBuffer = glGenBuffers();\n        vboIdList.add(bonesIndicesWeightsBuffer);\n        glBindBuffer(GL_SHADER_STORAGE_BUFFER, bonesIndicesWeightsBuffer);\n        glBufferData(GL_SHADER_STORAGE_BUFFER, dataBuffer, GL_STATIC_DRAW);\n        MemoryUtil.memFree(dataBuffer);\n\n        glBindBuffer(GL_SHADER_STORAGE_BUFFER, 0);\n    }\n    ...\n}\n</code></pre> <p>\u4e0e\u4e4b\u524d\u7684\u65b9\u6cd5\u4e00\u6837\uff0c\u6211\u4eec\u5c06\u6743\u91cd\u548c\u9aa8\u9abc\u7d22\u5f15\u4fe1\u606f\u5b58\u50a8\u5230\u5355\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u9996\u5148\u8ba1\u7b97\u5176\u5927\u5c0f\uff0c\u7136\u540e\u586b\u5145\u5b83\u3002\u4e0e\u4e4b\u524d\u7684\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e00\u6837\uff0c\u6211\u4eec\u5c06\u5728\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u4e2d\u8bbf\u95ee\u8fd9\u4e9b\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528<code>GL_SHADER_STORAGE_BUFFER</code>\u6807\u5fd7\u3002</p>"},{"location":"21-indirect-drawing-and-copute-shaders/#_3","title":"\u8ba1\u7b97\u7740\u8272\u5668","text":"<p>\u73b0\u5728\u8f6e\u5230\u901a\u8fc7\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u5b9e\u73b0\u52a8\u753b\u53d8\u6362\u4e86\u3002\u5982\u524d\u6240\u8ff0\uff0c\u7740\u8272\u5668\uff08Shader\uff09\u5c31\u50cf\u4efb\u4f55\u5176\u4ed6\u7740\u8272\u5668\uff08Shader\uff09\u4e00\u6837\uff0c\u4f46\u5b83\u5bf9\u5176\u8f93\u5165\u548c\u8f93\u51fa\u6ca1\u6709\u4efb\u4f55\u9650\u5236\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u4eec\u6765\u8f6c\u6362\u6570\u636e\uff0c\u5b83\u4eec\u5c06\u8bbf\u95ee\u4fdd\u5b58\u7ed1\u5b9a\u59ff\u52bf\u548c\u52a8\u753b\u53d8\u6362\u77e9\u9635\u4fe1\u606f\u7684\u5168\u5c40\u7f13\u51b2\u533a\uff08Buffers\uff09\uff0c\u5e76\u5c06\u7ed3\u679c\u8f6c\u50a8\u5230\u53e6\u4e00\u4e2a\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\uff0c\u5176\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u7528\u4e8e\u9759\u6001\u6a21\u578b\u7684\u7ed3\u6784\u3002\u52a8\u753b\u7684\u7740\u8272\u5668\uff08Shader\uff09\u4ee3\u7801\uff08<code>anim.comp</code>\uff09\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>#version 460\n\nlayout (std430, binding=0) readonly buffer srcBuf {\n    float data[];\n} srcVector;\n\nlayout (std430, binding=1) readonly buffer weightsBuf {\n    float data[];\n} weightsVector;\n\nlayout (std430, binding=2) readonly buffer bonesBuf {\n    mat4 data[];\n} bonesMatrices;\n\nlayout (std430, binding=3) buffer dstBuf {\n    float data[];\n} dstVector;\n\nstruct DrawParameters\n{\n    int srcOffset;\n    int srcSize;\n    int weightsOffset;\n    int bonesMatricesOffset;\n    int dstOffset;\n};\nuniform DrawParameters drawParameters;\n\nlayout (local_size_x=1, local_size_y=1, local_size_z=1) in;\n\nvoid main()\n{\n    int baseIdx = int(gl_GlobalInvocationID.x) * 14;\n    uint baseIdxWeightsBuf  = drawParameters.weightsOffset + int(gl_GlobalInvocationID.x) * 8;\n    uint baseIdxSrcBuf = drawParameters.srcOffset + baseIdx;\n    uint baseIdxDstBuf = drawParameters.dstOffset + baseIdx;\n    if (baseIdx &gt;= drawParameters.srcSize) {\n        return;\n    }\n\n    vec4 weights = vec4(weightsVector.data[baseIdxWeightsBuf], weightsVector.data[baseIdxWeightsBuf + 1], weightsVector.data[baseIdxWeightsBuf + 2], weightsVector.data[baseIdxWeightsBuf + 3]);\n    ivec4 bonesIndices = ivec4(weightsVector.data[baseIdxWeightsBuf + 4], weightsVector.data[baseIdxWeightsBuf + 5], weightsVector.data[baseIdxWeightsBuf + 6], weightsVector.data[baseIdxWeightsBuf + 7]);\n\n    vec4 position = vec4(srcVector.data[baseIdxSrcBuf], srcVector.data[baseIdxSrcBuf + 1], srcVector.data[baseIdxSrcBuf + 2], 1);\n    position =\n    weights.x * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.x] * position +\n    weights.y * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.y] * position +\n    weights.z * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.z] * position +\n    weights.w * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.w] * position;\n    dstVector.data[baseIdxDstBuf] = position.x / position.w;\n    dstVector.data[baseIdxDstBuf + 1] = position.y / position.w;\n    dstVector.data[baseIdxDstBuf + 2] = position.z / position.w;\n\n    baseIdxSrcBuf += 3;\n    baseIdxDstBuf += 3;\n    vec4 normal = vec4(srcVector.data[baseIdxSrcBuf], srcVector.data[baseIdxSrcBuf + 1], srcVector.data[baseIdxSrcBuf + 2], 0);\n    normal =\n    weights.x * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.x] * normal +\n    weights.y * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.y] * normal +\n    weights.z * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.z] * normal +\n    weights.w * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.w] * normal;\n    dstVector.data[baseIdxDstBuf] = normal.x;\n    dstVector.data[baseIdxDstBuf + 1] = normal.y;\n    dstVector.data[baseIdxDstBuf + 2] = normal.z;\n\n    baseIdxSrcBuf += 3;\n    baseIdxDstBuf += 3;\n    vec4 tangent = vec4(srcVector.data[baseIdxSrcBuf], srcVector.data[baseIdxSrcBuf + 1], srcVector.data[baseIdxSrcBuf + 2], 0);\n    tangent =\n    weights.x * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.x] * tangent +\n    weights.y * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.y] * tangent +\n    weights.z * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.z] * tangent +\n    weights.w * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.w] * tangent;\n    dstVector.data[baseIdxDstBuf] = tangent.x;\n    dstVector.data[baseIdxDstBuf + 1] = tangent.y;\n    dstVector.data[baseIdxDstBuf + 2] = tangent.z;\n\n    baseIdxSrcBuf += 3;\n    baseIdxDstBuf += 3;\n    vec4 bitangent = vec4(srcVector.data[baseIdxSrcBuf], srcVector.data[baseIdxSrcBuf + 1], srcVector.data[baseIdxSrcBuf + 2], 0);\n    bitangent =\n    weights.x * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.x] * bitangent +\n    weights.y * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.y] * bitangent +\n    weights.z * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.z] * bitangent +\n    weights.w * bonesMatrices.data[drawParameters.bonesMatricesOffset + bonesIndices.w] * bitangent;\n    dstVector.data[baseIdxDstBuf] = bitangent.x;\n    dstVector.data[baseIdxDstBuf + 1] = bitangent.y;\n    dstVector.data[baseIdxDstBuf + 2] = bitangent.z;\n\n    baseIdxSrcBuf += 3;\n    baseIdxDstBuf += 3;\n    vec2 textCoords = vec2(srcVector.data[baseIdxSrcBuf], srcVector.data[baseIdxSrcBuf + 1]);\n    dstVector.data[baseIdxDstBuf] = textCoords.x;\n    dstVector.data[baseIdxDstBuf + 1] = textCoords.y;\n}\n</code></pre> <p>\u5982\u60a8\u6240\u89c1\uff0c\u4ee3\u7801\u4e0e\u524d\u51e0\u7ae0\u4e2d\u7528\u4e8e\u52a8\u753b\u7684\u4ee3\u7801\u975e\u5e38\u76f8\u4f3c\uff08\u5c55\u5f00\u5faa\u73af\uff09\u3002\u60a8\u4f1a\u6ce8\u610f\u5230\uff0c\u7531\u4e8e\u6570\u636e\u73b0\u5728\u5b58\u50a8\u5728\u516c\u5171\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\uff0c\u56e0\u6b64\u6bcf\u4e2a\u7f51\u683c\uff08Mesh\uff09\u90fd\u9700\u8981\u5e94\u7528\u504f\u79fb\u91cf\u3002\u4e3a\u4e86\u652f\u6301\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u4e2d\u7684\u63a8\u9001\u5e38\u91cf\u3002\u8f93\u5165/\u8f93\u51fa\u6570\u636e\u5b9a\u4e49\u4e3a\u4e00\u7ec4\u7f13\u51b2\u533a\uff08Buffers\uff09\uff1a * <code>srcVector</code>\uff1a\u6b64\u7f13\u51b2\u533a\uff08Buffers\uff09\u5c06\u5305\u542b\u9876\u70b9\u4fe1\u606f\uff08\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u7b49\uff09\u3002 * <code>weightsVector</code>\uff1a\u6b64\u7f13\u51b2\u533a\uff08Buffers\uff09\u5c06\u5305\u542b\u7279\u5b9a\u7f51\u683c\uff08Mesh\uff09\u548c\u5b9e\u4f53\u7684\u5f53\u524d\u52a8\u753b\u72b6\u6001\u7684\u6743\u91cd\u3002 * <code>bonesMatrices</code>\uff1a\u76f8\u540c\uff0c\u4f46\u5305\u542b\u9aa8\u9abc\u77e9\u9635\u4fe1\u606f\u3002 * <code>dstVector</code>\uff1a\u6b64\u7f13\u51b2\u533a\uff08Buffers\uff09\u5c06\u4fdd\u5b58\u5e94\u7528\u52a8\u753b\u53d8\u6362\u7684\u7ed3\u679c\u3002</p> <p>\u6709\u8da3\u7684\u662f\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u8be5\u504f\u79fb\u91cf\u3002<code>gl_GlobalInvocationID</code>\u53d8\u91cf\u5c06\u5305\u542b\u5f53\u524d\u5728\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u4e2d\u6267\u884c\u7684\u5de5\u4f5c\u9879\u7684\u7d22\u5f15\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e0e\u5168\u5c40\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\u7684\u201c\u5757\u201d\u4e00\u6837\u591a\u7684\u5de5\u4f5c\u9879\u3002\u4e00\u4e2a\u5757\u6a21\u62df\u9876\u70b9\u6570\u636e\uff0c\u5373\u5176\u4f4d\u7f6e\u3001\u6cd5\u7ebf\u3001\u7eb9\u7406\u5750\u6807\uff08Texture Coordinates\uff09\u7b49\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u9876\u70b9\u6570\u636e\uff0c\u6bcf\u6b21\u5de5\u4f5c\u9879\u589e\u52a0\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5728\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\u5411\u524d\u79fb\u52a814\u4e2a\u4f4d\u7f6e\uff0814\u4e2a\u6d6e\u70b9\u6570\uff1a3\u4e2a\u7528\u4e8e\u4f4d\u7f6e\uff0c3\u4e2a\u7528\u4e8e\u6cd5\u7ebf\uff0c3\u4e2a\u7528\u4e8e\u526f\u5207\u7ebf\uff0c3\u4e2a\u7528\u4e8e\u5207\u7ebf\uff0c2\u4e2a\u7528\u4e8e\u7eb9\u7406\u5750\u6807\uff08Texture Coordinates\uff09\uff09\u3002\u6743\u91cd\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e5f\u9002\u7528\uff0c\u5b83\u4fdd\u5b58\u4e0e\u6bcf\u4e2a\u9876\u70b9\u5173\u8054\u7684\u6743\u91cd\uff084\u4e2a\u6d6e\u70b9\u6570\uff09\u548c\u9aa8\u9abc\u7d22\u5f15\uff084\u4e2a\u6d6e\u70b9\u6570\uff09\u7684\u6570\u636e\u3002\u6211\u4eec\u8fd8\u4f7f\u7528\u9876\u70b9\u504f\u79fb\u91cf\u6cbf\u7ed1\u5b9a\u59ff\u52bf\u7f13\u51b2\u533a\uff08Buffers\uff09\u548c\u76ee\u6807\u7f13\u51b2\u533a\uff08Buffers\uff09\u79fb\u52a8\uff0c\u4ee5\u53ca\u6307\u5411\u6bcf\u4e2a\u7f51\u683c\uff08Mesh\uff09\u548c\u5b9e\u4f53\u7684\u57fa\u672c\u504f\u79fb\u91cf\u7684<code>drawParameters</code>\u6570\u636e\u3002</p> <p>\u6211\u4eec\u5c06\u5728\u4e00\u4e2a\u540d\u4e3a<code>AnimationRender</code>\u7684\u65b0\u7c7b\u4e2d\u4f7f\u7528\u6b64\u7740\u8272\u5668\uff08Shader\uff09\uff0c\u8be5\u7c7b\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>package org.lwjglb.engine.graph;\n\nimport org.lwjglb.engine.scene.*;\n\nimport java.util.*;\n\nimport static org.lwjgl.opengl.GL43.*;\n\npublic class AnimationRender {\n\n    private ShaderProgram shaderProgram;\n    private UniformsMap uniformsMap;\n\n    public AnimationRender() {\n        List&lt;ShaderProgram.ShaderModuleData&gt; shaderModuleDataList = new ArrayList&lt;&gt;();\n        shaderModuleDataList.add(new ShaderProgram.ShaderModuleData(\"resources/shaders/anim.comp\", GL_COMPUTE_SHADER));\n        shaderProgram = new ShaderProgram(shaderModuleDataList);\n        createUniforms();\n    }\n\n    public void cleanup() {\n        shaderProgram.cleanup();\n    }\n\n    private void createUniforms() {\n        uniformsMap = new UniformsMap(shaderProgram.getProgramId());\n        uniformsMap.createUniform(\"drawParameters.srcOffset\");\n        uniformsMap.createUniform(\"drawParameters.srcSize\");\n        uniformsMap.createUniform(\"drawParameters.weightsOffset\");\n        uniformsMap.createUniform(\"drawParameters.bonesMatricesOffset\");\n        uniformsMap.createUniform(\"drawParameters.dstOffset\");\n    }\n\n    public void render(Scene scene, RenderBuffers globalBuffer) {\n        shaderProgram.bind();\n        glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 0, globalBuffer.getBindingPosesBuffer());\n        glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 1, globalBuffer.getBonesIndicesWeightsBuffer());\n        glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 2, globalBuffer.getBonesMatricesBuffer());\n        glBindBufferBase(GL_SHADER_STORAGE_BUFFER, 3, globalBuffer.getDestAnimationBuffer());\n\n        int dstOffset = 0;\n        for (Model model : scene.getModelMap().values()) {\n            if (model.isAnimated()) {\n                for (RenderBuffers.MeshDrawData meshDrawData : model.getMeshDrawDataList()) {\n                    RenderBuffers.AnimMeshDrawData animMeshDrawData = meshDrawData.animMeshDrawData();\n                    Entity entity = animMeshDrawData.entity();\n                    Model.AnimatedFrame frame = entity.getAnimationData().getCurrentFrame();\n                    int groupSize = (int) Math.ceil((float) meshDrawData.sizeInBytes() / (14 * 4));\n                    uniformsMap.setUniform(\"drawParameters.srcOffset\", animMeshDrawData.bindingPoseOffset());\n                    uniformsMap.setUniform(\"drawParameters.srcSize\", meshDrawData.sizeInBytes() / 4);\n                    uniformsMap.setUniform(\"drawParameters.weightsOffset\", animMeshDrawData.weightsOffset());\n                    uniformsMap.setUniform(\"drawParameters.bonesMatricesOffset\", frame.getOffset());\n                    uniformsMap.setUniform(\"drawParameters.dstOffset\", dstOffset);\n                    glDispatchCompute(groupSize, 1, 1);\n                    dstOffset += meshDrawData.sizeInBytes() / 4;\n                }\n            }\n        }\n\n        glMemoryBarrier(GL_SHADER_STORAGE_BARRIER_BIT);\n        shaderProgram.unbind();\n    }\n}\n</code></pre> <p>\u5982\u60a8\u6240\u89c1\uff0c\u5b9a\u4e49\u975e\u5e38\u7b80\u5355\uff0c\u521b\u5efa\u7740\u8272\u5668\uff08Shader\uff09\u65f6\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e<code>GL_COMPUTE_SHADER</code>\u4ee5\u6307\u793a\u8fd9\u662f\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7684\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09\u5c06\u5305\u542b\u7ed1\u5b9a\u59ff\u52bf\u7f13\u51b2\u533a\uff08Buffers\uff09\u3001\u6743\u91cd\u548c\u77e9\u9635\u7f13\u51b2\u533a\uff08Buffers\uff09\u4ee5\u53ca\u76ee\u6807\u7f13\u51b2\u533a\uff08Buffers\uff09\u4e2d\u7684\u504f\u79fb\u91cf\u3002\u5728<code>render</code>\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u904d\u5386\u6a21\u578b\u5e76\u83b7\u53d6\u6bcf\u4e2a\u5b9e\u4f53\u7684\u7f51\u683c\uff08Mesh\uff09\u7ed8\u5236\u6570\u636e\uff0c\u901a\u8fc7\u8c03\u7528<code>glDispatchCompute</code>\u5411\u8ba1\u7b97\u7740\u8272\u5668\uff08compute shaders\uff09\u5206\u6d3e\u8c03\u7528\u3002\u5173\u952e\u4ecd\u7136\u662f<code>groupSize</code>\u53d8\u91cf\u3002\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528\u7740\u8272\u5668\uff08Shader\uff09\u7684\u6b21\u6570\u4e0e\u7f51\u683c\uff08Mesh\uff09\u4e2d\u7684\u9876\u70b9\u5757\u6570\u76f8\u540c\u3002</p>"},{"location":"21-indirect-drawing-and-copute-shaders/#_4","title":"\u5176\u4ed6\u66f4\u6539","text":"<p>\u6211\u4eec\u9700\u8981\u66f4\u65b0<code>SceneRender</code>\u7c7b\u4ee5\u6e32\u67d3\u4e0e\u52a8\u753b\u6a21\u578b\u5173\u8054\u7684\u5b9e\u4f53\u3002\u66f4\u6539\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>public class SceneRender {\n    ...\n    private int animDrawCount;\n    private int animRenderBufferHandle;\n    ...\n    public void cleanup() {\n        ...\n        glDeleteBuffers(animRenderBufferHandle);\n    }\n    ...\n    public void render(Scene scene, RenderBuffers renderBuffers, GBuffer gBuffer) {\n        ...\n        // Animated meshes\n        drawElement = 0;\n        for (Model model: scene.getModelMap().values()) {\n            if (!model.isAnimated()) {\n                continue;\n            }\n            for (RenderBuffers.MeshDrawData meshDrawData : model.getMeshDrawDataList()) {\n                RenderBuffers.AnimMeshDrawData animMeshDrawData = meshDrawData.animMeshDrawData();\n                Entity entity = animMeshDrawData.entity();\n                String name = \"drawElements[\" + drawElement + \"]\";\n                uniformsMap.setUniform(name + \".modelMatrixIdx\", entitiesIdxMap.get(entity.getId()));\n                uniformsMap.setUniform(name + \".materialIdx\", meshDrawData.materialIdx());\n                drawElement++;\n            }\n        }\n        glBindBuffer(GL_DRAW_INDIRECT_BUFFER, animRenderBufferHandle);\n        glBindVertexArray(renderBuffers.getAnimVaoId());\n        glMultiDrawElementsIndirect(GL_TRIANGLES, GL_UNSIGNED_INT, 0, animDrawCount, 0);\n\n        glBindVertexArray(0);\n        glEnable(GL_BLEND);\n        shaderProgram.unbind();\n    }\n\n    private void setupAnimCommandBuffer(Scene scene) {\n        List&lt;Model&gt; modelList = scene.getModelMap().values().stream().filter(m -&gt; m.isAnimated()).toList();\n        int numMeshes = 0;\n        for (Model model : modelList) {\n            numMeshes += model.getMeshDrawDataList().size();\n        }\n\n        int firstIndex = 0;\n        int baseInstance = 0;\n        ByteBuffer commandBuffer = MemoryUtil.memAlloc(numMeshes * COMMAND_SIZE);\n        for (Model model : modelList) {\n            for (RenderBuffers.MeshDrawData meshDrawData : model.getMeshDrawDataList()) {\n                RenderBuffers.AnimMeshDrawData animMeshDrawData = meshDrawData.animMeshDrawData();\n                Entity entity = animMeshDrawData.entity();\n                // count\n                commandBuffer.putInt(meshDrawData.vertices());\n                // instanceCount\n                commandBuffer.putInt(1);\n                commandBuffer.putInt(firstIndex);\n                // baseVertex\n                commandBuffer.putInt(meshDrawData.offset());\n                commandBuffer.putInt(baseInstance);\n\n                firstIndex += meshDrawData.vertices();\n                baseInstance++;\n            }\n        }\n        commandBuffer.flip();\n\n        animDrawCount = commandBuffer.remaining() / COMMAND_SIZE;\n\n        animRenderBufferHandle = glGenBuffers();\n        glBindBuffer(GL_DRAW_INDIRECT_BUFFER, animRenderBufferHandle);\n        glBufferData(GL_DRAW_INDIRECT_BUFFER, commandBuffer, GL_DYNAMIC_DRAW);\n\n        MemoryUtil.memFree(commandBuffer);\n    }\n\n    public void setupData(Scene scene) {\n        ...\n        setupAnimCommandBuffer(scene);\n        ...\n    }\n    ...\n}\n</code></pre> <p>\u6e32\u67d3\u52a8\u753b\u6a21\u578b\u7684\u4ee3\u7801\u4e0e\u7528\u4e8e\u9759\u6001\u5b9e\u4f53\u7684\u4ee3\u7801\u975e\u5e38\u76f8\u4f3c\u3002\u533a\u522b\u5728\u4e8e\u6211\u4eec\u6ca1\u6709\u5bf9\u5171\u4eab\u540c\u4e00\u6a21\u578b\u7684\u5b9e\u4f53\u8fdb\u884c\u5206\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u6bcf\u4e2a\u5b9e\u4f53\u548c\u5173\u8054\u7684\u7f51\u683c\uff08Mesh\uff09\u8bb0\u5f55\u7ed8\u5236\u6307\u4ee4\u3002</p> <p>\u6211\u4eec\u8fd8\u9700\u8981\u66f4\u65b0<code>ShadowRender</code>\u7c7b\u4ee5\u6e32\u67d3\u52a8\u753b\u6a21\u578b\uff1a</p> <pre><code>public class ShadowRender {\n    ...\n    private int animDrawCount;\n    private int animRenderBufferHandle;\n    ...\n    public void cleanup() {\n        ...\n        glDeleteBuffers(animRenderBufferHandle);\n    }\n    ...\n    public void render(Scene scene, RenderBuffers renderBuffers) {\n        ...\n        // Animated meshes\n        drawElement = 0;\n        for (Model model: scene.getModelMap().values()) {\n            if (!model.isAnimated()) {\n                continue;\n            }\n            for (RenderBuffers.MeshDrawData meshDrawData : model.getMeshDrawDataList()) {\n                RenderBuffers.AnimMeshDrawData animMeshDrawData = meshDrawData.animMeshDrawData();\n                Entity entity = animMeshDrawData.entity();\n                String name = \"drawElements[\" + drawElement + \"]\";\n                uniformsMap.setUniform(name + \".modelMatrixIdx\", entitiesIdxMap.get(entity.getId()));\n                drawElement++;\n            }\n        }\n        glBindBuffer(GL_DRAW_INDIRECT_BUFFER, animRenderBufferHandle);\n        glBindVertexArray(renderBuffers.getAnimVaoId());\n        for (int i = 0; i &lt; CascadeShadow.SHADOW_MAP_CASCADE_COUNT; i++) {\n            glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, shadowBuffer.getDepthMapTexture().getIds()[i], 0);\n\n            CascadeShadow shadowCascade = cascadeShadows.get(i);\n            uniformsMap.setUniform(\"projViewMatrix\", shadowCascade.getProjViewMatrix());\n\n            glMultiDrawElementsIndirect(GL_TRIANGLES, GL_UNSIGNED_INT, 0, animDrawCount, 0);\n        }\n\n        glBindVertexArray(0);\n    }\n\n    private void setupAnimCommandBuffer(Scene scene) {\n        List&lt;Model&gt; modelList = scene.getModelMap().values().stream().filter(m -&gt; m.isAnimated()).toList();\n        int numMeshes = 0;\n        for (Model model : modelList) {\n            numMeshes += model.getMeshDrawDataList().size();\n        }\n\n        int firstIndex = 0;\n        int baseInstance = 0;\n        ByteBuffer commandBuffer = MemoryUtil.memAlloc(numMeshes * COMMAND_SIZE);\n        for (Model model : modelList) {\n            for (RenderBuffers.MeshDrawData meshDrawData : model.getMeshDrawDataList()) {\n                RenderBuffers.AnimMeshDrawData animMeshDrawData = meshDrawData.animMeshDrawData();\n                Entity entity = animMeshDrawData.entity();\n                // count\n                commandBuffer.putInt(meshDrawData.vertices());\n                // instanceCount\n                commandBuffer.putInt(1);\n                commandBuffer.putInt(firstIndex);\n                // baseVertex\n                commandBuffer.putInt(meshDrawData.offset());\n                commandBuffer.putInt(baseInstance);\n\n                firstIndex += meshDrawData.vertices();\n                baseInstance++;\n            }\n        }\n        commandBuffer.flip();\n\n        animDrawCount = commandBuffer.remaining() / COMMAND_SIZE;\n\n        animRenderBufferHandle = glGenBuffers();\n        glBindBuffer(GL_DRAW_INDIRECT_BUFFER, animRenderBufferHandle);\n        glBufferData(GL_DRAW_INDIRECT_BUFFER, commandBuffer, GL_DYNAMIC_DRAW);\n\n        MemoryUtil.memFree(commandBuffer);\n    }\n}\n</code></pre> <p>\u5728<code>Render</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u4f8b\u5316<code>AnimationRender</code>\u7c7b\uff0c\u5e76\u5728<code>render</code>\u5faa\u73af\u548c<code>cleanup</code>\u65b9\u6cd5\u4e2d\u4f7f\u7528\u5b83\u3002\u5728<code>render</code>\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u5c06\u5728\u6700\u5f00\u59cb\u8c03\u7528<code>AnimationRender</code>\u7c7b\u7684<code>render</code>\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u5728\u6e32\u67d3\u573a\u666f\u4e4b\u524d\u5e94\u7528\u52a8\u753b\u53d8\u6362\u3002</p> <pre><code>public class Render {\n\n    private AnimationRender animationRender;\n    ...\n    public Render(Window window) {\n        ...\n        animationRender = new AnimationRender();\n        ...\n    }\n\n    public void cleanup() {\n        ...\n        animationRender.cleanup();\n        ...\n    }\n\n    public void render(Window window, Scene scene) {\n        animationRender.render(scene, renderBuffers);\n        ...\n    }    \n    ...\n}\n</code></pre> <p>\u6700\u540e\uff0c\u5728<code>Main</code>\u7c7b\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e24\u4e2a\u52a8\u753b\u5b9e\u4f53\uff0c\u5b83\u4eec\u5c06\u5177\u6709\u4e0d\u540c\u7684\u52a8\u753b\u66f4\u65b0\u901f\u7387\uff0c\u4ee5\u68c0\u67e5\u6211\u4eec\u662f\u5426\u6b63\u786e\u5206\u79bb\u4e86\u6bcf\u4e2a\u5b9e\u4f53\u7684\u4fe1\u606f\uff1a</p> <pre><code>public class Main implements IAppLogic {\n    ...\n    private AnimationData animationData1;\n    private AnimationData animationData2;\n    ...\n    public static void main(String[] args) {\n        ...\n        Engine gameEng = new Engine(\"chapter-21\", opts, main);\n        ...\n    }\n    ...\n    public void init(Window window, Scene scene, Render render) {\n        ...\n        String bobModelId = \"bobModel\";\n        Model bobModel = ModelLoader.loadModel(bobModelId, \"resources/models/bob/boblamp.md5mesh\",\n                scene.getTextureCache(), scene.getMaterialCache(), true);\n        scene.addModel(bobModel);\n        Entity bobEntity = new Entity(\"bobEntity-1\", bobModelId);\n        bobEntity.setScale(0.05f);\n        bobEntity.updateModelMatrix();\n        animationData1 = new AnimationData(bobModel.getAnimationList().get(0));\n        bobEntity.setAnimationData(animationData1);\n        scene.addEntity(bobEntity);\n\n        Entity bobEntity2 = new Entity(\"bobEntity-2\", bobModelId);\n        bobEntity2.setPosition(2, 0, 0);\n        bobEntity2.setScale(0.025f);\n        bobEntity2.updateModelMatrix();\n        animationData2 = new AnimationData(bobModel.getAnimationList().get(0));\n        bobEntity2.setAnimationData(animationData2);\n        scene.addEntity(bobEntity2);\n        ...\n    }\n    ...\n    public void update(Window window, Scene scene, long diffTimeMillis) {\n        animationData1.nextFrame();\n        if (diffTimeMillis % 2 == 0) {\n            animationData2.nextFrame();\n        }\n        ...\n    }\n}\n</code></pre> <p>\u5b8c\u6210\u6240\u6709\u8fd9\u4e9b\u66f4\u6539\u540e\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u770b\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u5185\u5bb9\u3002</p> <p></p>"},{"location":"appendix-a/","title":"\u9644\u5f55 A - OpenGL \u8c03\u8bd5","text":"<p>\u8c03\u8bd5 OpenGL \u7a0b\u5e8f\u53ef\u80fd\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\u3002\u5927\u591a\u6570\u65f6\u5019\uff0c\u4f60\u53ea\u4f1a\u770b\u5230\u4e00\u4e2a\u9ed1\u5c4f\uff0c\u800c\u4e0d\u77e5\u9053\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u73b0\u6709\u7684\u5de5\u5177\u6765\u63d0\u4f9b\u5173\u4e8e\u6e32\u67d3\u8fc7\u7a0b\u7684\u66f4\u591a\u4fe1\u606f\u3002</p> <p>\u5728\u672c\u9644\u5f55\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 RenderDoc \u5de5\u5177\u6765\u8c03\u8bd5\u6211\u4eec\u7684 LWJGL \u7a0b\u5e8f\u3002RenderDoc \u662f\u4e00\u4e2a\u56fe\u5f62\u8c03\u8bd5\u5de5\u5177\uff0c\u53ef\u7528\u4e8e Direct3D\u3001Vulkan \u548c OpenGL\u3002\u5728 OpenGL \u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4ec5\u652f\u6301\u4ece 3.2 \u5230 4.5 \u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u3002</p> <p>\u90a3\u4e48\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\u3002\u4f60\u9700\u8981\u4e0b\u8f7d\u5e76\u5b89\u88c5\u9002\u7528\u4e8e\u4f60\u64cd\u4f5c\u7cfb\u7edf\u7684 RenderDoc \u7248\u672c\u3002\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u542f\u52a8 RenderDoc\uff0c\u4f60\u5c06\u770b\u5230\u7c7b\u4f3c\u5982\u4e0b\u7684\u754c\u9762\u3002</p> <p></p> <p>\u7b2c\u4e00\u6b65\u662f\u914d\u7f6e RenderDoc \u4ee5\u6267\u884c\u5e76\u76d1\u63a7\u6211\u4eec\u7684\u793a\u4f8b\u7a0b\u5e8f\u3002\u5728 \u201cCapture Executable\u201d \u6807\u7b7e\u9875\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <ul> <li>Executable path\uff08\u53ef\u6267\u884c\u6587\u4ef6\u8def\u5f84\uff09\uff1a\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u5e94\u8be5\u6307\u5411 JVM \u542f\u52a8\u5668\uff08\u4f8b\u5982\uff0c\u201cC:\\Program Files\\Java\\jdk-XX\\bin\\java.exe\u201d\uff09\u3002</li> <li>Working Directory\uff08\u5de5\u4f5c\u76ee\u5f55\uff09\uff1a\u8fd9\u662f\u4e3a\u4f60\u7684\u7a0b\u5e8f\u8bbe\u7f6e\u7684\u5de5\u4f5c\u76ee\u5f55\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u5e94\u8bbe\u7f6e\u4e3a Maven \u8f93\u51fa\u7ed3\u679c\u7684\u76ee\u6807\u76ee\u5f55\u3002\u8fd9\u6837\u8bbe\u7f6e\u53ef\u4ee5\u4f7f\u4f9d\u8d56\u5e93\u88ab\u6b63\u786e\u52a0\u8f7d\uff08\u4f8b\u5982\uff1a\"D:/Projects/booksamples/chapter-18/target\"\uff09\u3002</li> <li>Command line arguments\uff08\u547d\u4ee4\u884c\u53c2\u6570\uff09\uff1a\u8fd9\u5c06\u5305\u542b JVM \u6267\u884c\u6211\u4eec\u793a\u4f8b\u6240\u9700\u7684\u53c2\u6570\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u53ea\u9700\u4f20\u9012\u8981\u6267\u884c\u7684 jar \u6587\u4ef6\uff08\u4f8b\u5982\uff0c\u201c-jar chapter-18-1.0.jar\u201d\uff09\u3002</li> </ul> <p></p> <p>\u8be5\u6807\u7b7e\u9875\u4e2d\u8fd8\u6709\u8bb8\u591a\u5176\u5b83\u9009\u9879\u53ef\u4ee5\u914d\u7f6e\u6355\u83b7\u9009\u9879\u3002\u4f60\u53ef\u4ee5\u5728 RenderDoc \u6587\u6863 \u4e2d\u67e5\u770b\u5b83\u4eec\u7684\u7528\u9014\u3002\u4e00\u65e6\u4e00\u5207\u8bbe\u7f6e\u5b8c\u6bd5\uff0c\u4f60\u53ef\u4ee5\u70b9\u51fb \u201cLaunch\u201d \u6309\u94ae\u6765\u6267\u884c\u4f60\u7684\u7a0b\u5e8f\u3002\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u754c\u9762\uff1a</p> <p></p> <p>\u4e00\u65e6\u8fdb\u7a0b\u542f\u52a8\uff0c\u4f60\u5c06\u770b\u5230\u4e00\u4e2a\u65b0\u7684\u6807\u7b7e\u9875\u88ab\u6dfb\u52a0\uff0c\u540d\u79f0\u4e3a \u201cjava [PID XXXX]\u201d\uff08\u5176\u4e2d XXXX \u662f Java \u8fdb\u7a0b\u7684 PID\uff0c\u5373\u8fdb\u7a0b\u6807\u8bc6\u7b26\uff09\u3002</p> <p></p> <p>\u5728\u8be5\u6807\u7b7e\u9875\u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb \u201cTrigger capture\u201d \u6309\u94ae\u6765\u6355\u83b7\u7a0b\u5e8f\u7684\u72b6\u6001\u3002\u751f\u6210\u6355\u83b7\u540e\uff0c\u4f60\u5c06\u5728\u540c\u4e00\u6807\u7b7e\u9875\u4e2d\u770b\u5230\u4e00\u4e2a\u5c0f\u7684\u5feb\u7167\u3002</p> <p></p> <p>\u5982\u679c\u4f60\u53cc\u51fb\u8be5\u6355\u83b7\uff0c\u6240\u6709\u6536\u96c6\u5230\u7684\u6570\u636e\u5c06\u4f1a\u88ab\u52a0\u8f7d\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u68c0\u67e5\u5b83\u4e86\u3002\u201cEvent Browser\u201d \u9762\u677f\u4f1a\u88ab\u586b\u5145\u4e0a\u4e00\u4e2a\u6e32\u67d3\u5468\u671f\u4e2d\u6267\u884c\u7684\u6240\u6709\u76f8\u5173 OpenGL \u8c03\u7528\u3002</p> <p></p> <p>\u4f60\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u4e8b\u4ef6\uff1a * \u7528\u4e8e\u7ea7\u8054\u9634\u5f71\u7684\u4e09\u4e2a\u6df1\u5ea6\u901a\u9053\u3002 * \u51e0\u4f55\u901a\u9053\u3002\u5982\u679c\u4f60\u70b9\u51fb\u4e00\u4e2a glDrawElements \u4e8b\u4ef6\uff0c\u5e76\u9009\u62e9 \u201cMesh\u201d \u6807\u7b7e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u6240\u7ed8\u5236\u7684\u7f51\u683c\u3001\u5176\u9876\u70b9\u7740\u8272\u5668\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002 * \u5149\u7167\u901a\u9053\u3002</p> <p>\u4f60\u8fd8\u53ef\u4ee5\u67e5\u770b\u8be5\u7ed8\u56fe\u64cd\u4f5c\u6240\u4f7f\u7528\u7684\u8f93\u5165\u7eb9\u7406\uff08\u70b9\u51fb \u201cTexture Viewer\u201d \u6807\u7b7e\uff09\u3002</p> <p></p> <p>\u5728\u4e2d\u95f4\u9762\u677f\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\u5185\u5bb9\uff0c\u5728\u53f3\u4fa7\u9762\u677f\u4e2d\u53ef\u4ee5\u770b\u5230\u4f5c\u4e3a\u8f93\u5165\u4f7f\u7528\u7684\u7eb9\u7406\u5217\u8868\u3002\u4f60\u8fd8\u53ef\u4ee5\u9010\u4e2a\u67e5\u770b\u8f93\u51fa\u7eb9\u7406\u3002\u8fd9\u5bf9\u4e8e\u5c55\u793a\u5ef6\u8fdf\u7740\u8272\uff08deferred shading\uff09\u662f\u975e\u5e38\u76f4\u89c2\u7684\u3002</p> <p></p> <p>\u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4e2a\u5de5\u5177\u63d0\u4f9b\u4e86\u5927\u91cf\u5173\u4e8e\u6e32\u67d3\u8fc7\u7a0b\u4e2d\u7684\u4fe1\u606f\u3002\u5728\u8c03\u8bd5\u6e32\u67d3\u95ee\u9898\u65f6\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u5b9d\u8d35\u65f6\u95f4\u3002\u5b83\u751a\u81f3\u53ef\u4ee5\u663e\u793a\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u4f7f\u7528\u7684\u7740\u8272\u5668\u4fe1\u606f\u3002</p> <p></p>"},{"location":"glossary/","title":"\u672f\u8bed\u8868","text":"<ol> <li>\u8f7b\u91cf\u7ea7Java\u6e38\u620f\u5e93\uff08Lightweight Java Game Library\uff09</li> <li>\u5782\u76f4\u540c\u6b65\uff08Vertical Synchronization\uff09</li> <li>\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff08Cartesian coordinate system\uff09</li> <li>\u5750\u6807\u7a7a\u95f4\uff08coordinate space\uff09</li> <li>\u56fe\u5f62\u7ba1\u7ebf\uff08graphics pipeline\uff09</li> <li>\u56fa\u5b9a\u529f\u80fd\u7ba1\u7ebf\uff08fixed-function pipeline\uff09</li> <li>\u53ef\u7f16\u7a0b\u7ba1\u7ebf\uff08programmable pipeline\uff09</li> <li>\u7740\u8272\u5668\uff08shaders\uff09</li> <li>\u9876\u70b9\u7f13\u51b2\u533a\uff08Vertex Buffers\uff09</li> <li>\u9876\u70b9\u7740\u8272\u5668\uff08vertex shader\uff09</li> <li>\u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff08geometry processing stage\uff09</li> <li>\u5149\u6805\u5316\u9636\u6bb5\uff08rasterization stage\uff09</li> <li>\u7247\u6bb5\u5904\u7406\u9636\u6bb5\uff08fragment processing stage\uff09</li> <li>\u7247\u6bb5\u7740\u8272\u5668\uff08fragment shader\uff09</li> <li>\u5e27\u7f13\u51b2\u533a\uff08framebuffer\uff09</li> <li>\u9f50\u6b21\u5750\u6807\uff08homogeneous coordinates\uff09</li> <li>\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff08Vertex Array Objects\uff0cVAOs\uff09</li> <li>\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff08Vertex Buffer Objects\uff0cVBOs\uff09</li> <li>\u7f51\u683c\uff08Mesh\uff09</li> <li>\u900f\u89c6\u6295\u5f71\uff08Perspective Projection\uff09</li> <li>\u7edf\u4e00\u53d8\u91cf\uff08Uniforms\uff09</li> <li>\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff08Perspective Projection Matrix\uff09</li> <li>\u7eb5\u6a2a\u6bd4\uff08Aspect Ratio\uff09</li> <li>\u89c6\u91ce\u89d2\uff08Field of View\uff09</li> <li>Java OpenGL\u6570\u5b66\u5e93\uff08Java OpenGL Math Library\uff0c\u7b80\u79f0JOML\uff09</li> <li>\u53d8\u6362\uff08transformations\uff09</li> <li>\u89c6\u56fe\u77e9\u9635\uff08View Matrix\uff09</li> <li>\u7d22\u5f15\u7f13\u51b2\uff08Index Buffer\uff09</li> <li>\u70b9\u5149\u6e90\uff08Point light\uff09</li> <li>\u805a\u5149\u706f\uff08Spot light\uff09</li> <li>\u65b9\u5411\u5149\uff08Directional light\uff09</li> <li>\u73af\u5883\u5149\uff08Ambient light\uff09</li> <li>\u6f2b\u53cd\u5c04\uff08Diffuse reflectance\uff09</li> <li>\u955c\u9762\u53cd\u5c04\uff08Specular reflectance\uff09</li> <li>\u5929\u7a7a\u76d2\uff08Sky Box\uff09</li> <li>\u6cd5\u7ebf\u8d34\u56fe\uff08Normal Mapping\uff09</li> <li>\u5750\u6807\u7a7a\u95f4\uff08coordinate space\uff09</li> <li>OpenAL\uff08Open Audio Library\uff09</li> <li>\u9634\u5f71\u6620\u5c04\uff08Shadow mapping\uff09</li> <li>\u9634\u5f71\u8d34\u56fe\uff08shadow map\uff09</li> <li>\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff08Perspective Projection Matrix\uff09</li> <li>\u7ea7\u8054\u9634\u5f71\u8d34\u56fe\uff08Cascaded Shadow Maps\uff09</li> <li>\u5f52\u4e00\u5316\u8bbe\u5907\u5750\u6807\uff0cNormalized Device Coordinates\uff09</li> <li>\u5305\u56f4\u76d2\uff08bounding box\uff09</li> <li>\u8f74\u5bf9\u9f50\u5305\u56f4\u76d2\uff08Axis Aligned Bounding Box\uff09</li> </ol>"}]}